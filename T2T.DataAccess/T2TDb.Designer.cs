//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceDefinition_ToResourceClass", "ResourceClass", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.ResourceClass), "ResourceDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceDefinition), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceActualProperty_ToProperty", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.Property), "ResourceActualProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceActualProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceProperty_ToProperty", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.Property), "ResourceProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceRequirementProperty_ToProperty", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.Property), "ResourceRequirementProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceRequirementProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceSpecificationProperty_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.Property), "ResourceSpecificationProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceSpecificationProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceCapability_ToReason", "Reason", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.Reason), "ResourceCapability", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceCapability), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceActual_ToResourceDefinition", "ResourceDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceDefinition), "ResourceActual", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceActual), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceActual_ToResourceLot", "ResourceLot", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceLot), "ResourceActual", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceActual), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceActual_ToResourceType", "ResourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceType), "ResourceActual", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceActual), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceActual_ToWorkResponse", "WorkResponse", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.WorkResponse), "ResourceActual", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceActual), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceActualProperty_ToResourceActual", "ResourceActual", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.ResourceActual), "ResourceActualProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceActualProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceCapability_ToResourceDefinition", "ResourceDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceDefinition), "ResourceCapability", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceCapability), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceCapability_ToResourceLot", "ResourceLot", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceLot), "ResourceCapability", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceCapability), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceCapability_ToWorkCapability", "WorkCapability", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.WorkCapability), "ResourceCapability", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceCapability), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceCapability_ToWorkProcessSegment", "WorkProcessSegment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.WorkProcessSegment), "ResourceCapability", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceCapability), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceProperty_ToResourceClass", "ResourceClass", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.ResourceClass), "ResourceProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceRequirement_ToResourceClass", "ResourceClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceClass), "ResourceRequirement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceRequirement), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceSpecification_ToResourceClass", "ResourceClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceClass), "ResourceSpecification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceSpecification), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceLot_ToResourceDefinition", "ResourceDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceDefinition), "ResourceLot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceLot), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceProperty_ToResourceDefinition", "ResourceDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.ResourceDefinition), "ResourceProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceRequirement_ToResourceDefintion", "ResourceDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceDefinition), "ResourceRequirement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceRequirement), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceSpecification_ToResourceDefinition", "ResourceDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceDefinition), "ResourceSpecification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceSpecification), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceLot_ToResourceLotStatus", "ResourceLotStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceLotStatus), "ResourceLot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceLot), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceLotTracking_ToResourceLot", "ResourceLot", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceLot), "ResourceLotTracking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceLotTracking), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceProperty_ToResourceLot", "ResourceLot", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.ResourceLot), "ResourceProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceRequirement_ToResourceLot", "ResourceLot", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceLot), "ResourceRequirement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceRequirement), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceSpecification_ToResourceLot", "ResourceLot", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceLot), "ResourceSpecification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceSpecification), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceRequirement_ToResourceType", "ResourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceType), "ResourceRequirement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceRequirement), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceSpecification_ToResourceType", "ResourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceType), "ResourceSpecification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceSpecification), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceSpecification_ToWorkProcessSegment", "WorkProcessSegment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.WorkProcessSegment), "ResourceSpecification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceSpecification), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceSpecificationProperty_ResourceSpecification", "ResourceSpecification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.ResourceSpecification), "ResourceSpecificationProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceSpecificationProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceRequirementProperty_ToResourceRequirement1", "ResourceRequirement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.ResourceRequirement), "ResourceRequirementProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceRequirementProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourcePhoto_ToPhoto", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.Photo), "ResourcePhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourcePhoto), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourcePhoto_ToResourceDefinition", "ResourceDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.ResourceDefinition), "ResourcePhoto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourcePhoto), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceCapabilityProperty_ToProperty", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.Property), "ResourceCapabilityProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceCapabilityProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceCapabilityProperty_ToResourceCapability", "ResourceCapability", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.ResourceCapability), "ResourceCapabilityProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceCapabilityProperty), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceLot_ToResourceDefinition1", "ResourceDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceDefinition), "ResourceLot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceLot), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_EquipmentHmiData_Equipments", "Equipment1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Model.Equipment1), "EquipmentHmiData", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.EquipmentHmiData), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_ResourceClass_ToResourceClass", "ResourceClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Model.ResourceClass), "ResourceClass1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Model.ResourceClass), true)]

#endregion

namespace T2T.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class T2TDb : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new T2TDb object using the connection string found in the 'T2TDb' section of the application configuration file.
        /// </summary>
        public T2TDb() : base("name=T2TDb", "T2TDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new T2TDb object.
        /// </summary>
        public T2TDb(string connectionString) : base(connectionString, "T2TDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new T2TDb object.
        /// </summary>
        public T2TDb(EntityConnection connection) : base(connection, "T2TDb")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillOfResource> BillOfResources
        {
            get
            {
                if ((_BillOfResources == null))
                {
                    _BillOfResources = base.CreateObjectSet<BillOfResource>("BillOfResources");
                }
                return _BillOfResources;
            }
        }
        private ObjectSet<BillOfResource> _BillOfResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Calendar> Calendars
        {
            get
            {
                if ((_Calendars == null))
                {
                    _Calendars = base.CreateObjectSet<Calendar>("Calendars");
                }
                return _Calendars;
            }
        }
        private ObjectSet<Calendar> _Calendars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Constant> Constants
        {
            get
            {
                if ((_Constants == null))
                {
                    _Constants = base.CreateObjectSet<Constant>("Constants");
                }
                return _Constants;
            }
        }
        private ObjectSet<Constant> _Constants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Culture> Cultures
        {
            get
            {
                if ((_Cultures == null))
                {
                    _Cultures = base.CreateObjectSet<Culture>("Cultures");
                }
                return _Cultures;
            }
        }
        private ObjectSet<Culture> _Cultures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DatabaseLog> DatabaseLogs
        {
            get
            {
                if ((_DatabaseLogs == null))
                {
                    _DatabaseLogs = base.CreateObjectSet<DatabaseLog>("DatabaseLogs");
                }
                return _DatabaseLogs;
            }
        }
        private ObjectSet<DatabaseLog> _DatabaseLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ErrorLog> ErrorLogs
        {
            get
            {
                if ((_ErrorLogs == null))
                {
                    _ErrorLogs = base.CreateObjectSet<ErrorLog>("ErrorLogs");
                }
                return _ErrorLogs;
            }
        }
        private ObjectSet<ErrorLog> _ErrorLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HandlingUnit> HandlingUnits
        {
            get
            {
                if ((_HandlingUnits == null))
                {
                    _HandlingUnits = base.CreateObjectSet<HandlingUnit>("HandlingUnits");
                }
                return _HandlingUnits;
            }
        }
        private ObjectSet<HandlingUnit> _HandlingUnits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parametar> Parametars
        {
            get
            {
                if ((_Parametars == null))
                {
                    _Parametars = base.CreateObjectSet<Parametar>("Parametars");
                }
                return _Parametars;
            }
        }
        private ObjectSet<Parametar> _Parametars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParametarActual> ParametarActuals
        {
            get
            {
                if ((_ParametarActuals == null))
                {
                    _ParametarActuals = base.CreateObjectSet<ParametarActual>("ParametarActuals");
                }
                return _ParametarActuals;
            }
        }
        private ObjectSet<ParametarActual> _ParametarActuals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParametarRequirement> ParametarRequirements
        {
            get
            {
                if ((_ParametarRequirements == null))
                {
                    _ParametarRequirements = base.CreateObjectSet<ParametarRequirement>("ParametarRequirements");
                }
                return _ParametarRequirements;
            }
        }
        private ObjectSet<ParametarRequirement> _ParametarRequirements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Photo> Photos
        {
            get
            {
                if ((_Photos == null))
                {
                    _Photos = base.CreateObjectSet<Photo>("Photos");
                }
                return _Photos;
            }
        }
        private ObjectSet<Photo> _Photos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Property> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Property>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Property> _Properties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QualityReason> QualityReasons
        {
            get
            {
                if ((_QualityReasons == null))
                {
                    _QualityReasons = base.CreateObjectSet<QualityReason>("QualityReasons");
                }
                return _QualityReasons;
            }
        }
        private ObjectSet<QualityReason> _QualityReasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reason> Reasons
        {
            get
            {
                if ((_Reasons == null))
                {
                    _Reasons = base.CreateObjectSet<Reason>("Reasons");
                }
                return _Reasons;
            }
        }
        private ObjectSet<Reason> _Reasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Referencial> Referencials
        {
            get
            {
                if ((_Referencials == null))
                {
                    _Referencials = base.CreateObjectSet<Referencial>("Referencials");
                }
                return _Referencials;
            }
        }
        private ObjectSet<Referencial> _Referencials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceActual> ResourceActuals
        {
            get
            {
                if ((_ResourceActuals == null))
                {
                    _ResourceActuals = base.CreateObjectSet<ResourceActual>("ResourceActuals");
                }
                return _ResourceActuals;
            }
        }
        private ObjectSet<ResourceActual> _ResourceActuals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceCapability> ResourceCapabilities
        {
            get
            {
                if ((_ResourceCapabilities == null))
                {
                    _ResourceCapabilities = base.CreateObjectSet<ResourceCapability>("ResourceCapabilities");
                }
                return _ResourceCapabilities;
            }
        }
        private ObjectSet<ResourceCapability> _ResourceCapabilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceClass> ResourceClasses
        {
            get
            {
                if ((_ResourceClasses == null))
                {
                    _ResourceClasses = base.CreateObjectSet<ResourceClass>("ResourceClasses");
                }
                return _ResourceClasses;
            }
        }
        private ObjectSet<ResourceClass> _ResourceClasses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceDocument> ResourceDocuments
        {
            get
            {
                if ((_ResourceDocuments == null))
                {
                    _ResourceDocuments = base.CreateObjectSet<ResourceDocument>("ResourceDocuments");
                }
                return _ResourceDocuments;
            }
        }
        private ObjectSet<ResourceDocument> _ResourceDocuments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceInventory> ResourceInventories
        {
            get
            {
                if ((_ResourceInventories == null))
                {
                    _ResourceInventories = base.CreateObjectSet<ResourceInventory>("ResourceInventories");
                }
                return _ResourceInventories;
            }
        }
        private ObjectSet<ResourceInventory> _ResourceInventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceLevel> ResourceLevels
        {
            get
            {
                if ((_ResourceLevels == null))
                {
                    _ResourceLevels = base.CreateObjectSet<ResourceLevel>("ResourceLevels");
                }
                return _ResourceLevels;
            }
        }
        private ObjectSet<ResourceLevel> _ResourceLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceLot> ResourceLots
        {
            get
            {
                if ((_ResourceLots == null))
                {
                    _ResourceLots = base.CreateObjectSet<ResourceLot>("ResourceLots");
                }
                return _ResourceLots;
            }
        }
        private ObjectSet<ResourceLot> _ResourceLots;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceLotStatus> ResourceLotStatuses
        {
            get
            {
                if ((_ResourceLotStatuses == null))
                {
                    _ResourceLotStatuses = base.CreateObjectSet<ResourceLotStatus>("ResourceLotStatuses");
                }
                return _ResourceLotStatuses;
            }
        }
        private ObjectSet<ResourceLotStatus> _ResourceLotStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceLotTracking> ResourceLotTrackings
        {
            get
            {
                if ((_ResourceLotTrackings == null))
                {
                    _ResourceLotTrackings = base.CreateObjectSet<ResourceLotTracking>("ResourceLotTrackings");
                }
                return _ResourceLotTrackings;
            }
        }
        private ObjectSet<ResourceLotTracking> _ResourceLotTrackings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceProperty> ResourceProperties
        {
            get
            {
                if ((_ResourceProperties == null))
                {
                    _ResourceProperties = base.CreateObjectSet<ResourceProperty>("ResourceProperties");
                }
                return _ResourceProperties;
            }
        }
        private ObjectSet<ResourceProperty> _ResourceProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceRequirement> ResourceRequirements
        {
            get
            {
                if ((_ResourceRequirements == null))
                {
                    _ResourceRequirements = base.CreateObjectSet<ResourceRequirement>("ResourceRequirements");
                }
                return _ResourceRequirements;
            }
        }
        private ObjectSet<ResourceRequirement> _ResourceRequirements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceRequirementProperty> ResourceRequirementProperties
        {
            get
            {
                if ((_ResourceRequirementProperties == null))
                {
                    _ResourceRequirementProperties = base.CreateObjectSet<ResourceRequirementProperty>("ResourceRequirementProperties");
                }
                return _ResourceRequirementProperties;
            }
        }
        private ObjectSet<ResourceRequirementProperty> _ResourceRequirementProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceReview> ResourceReviews
        {
            get
            {
                if ((_ResourceReviews == null))
                {
                    _ResourceReviews = base.CreateObjectSet<ResourceReview>("ResourceReviews");
                }
                return _ResourceReviews;
            }
        }
        private ObjectSet<ResourceReview> _ResourceReviews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceSpecification> ResourceSpecifications
        {
            get
            {
                if ((_ResourceSpecifications == null))
                {
                    _ResourceSpecifications = base.CreateObjectSet<ResourceSpecification>("ResourceSpecifications");
                }
                return _ResourceSpecifications;
            }
        }
        private ObjectSet<ResourceSpecification> _ResourceSpecifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceSpecificationProperty> ResourceSpecificationProperties
        {
            get
            {
                if ((_ResourceSpecificationProperties == null))
                {
                    _ResourceSpecificationProperties = base.CreateObjectSet<ResourceSpecificationProperty>("ResourceSpecificationProperties");
                }
                return _ResourceSpecificationProperties;
            }
        }
        private ObjectSet<ResourceSpecificationProperty> _ResourceSpecificationProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceType> ResourceTypes
        {
            get
            {
                if ((_ResourceTypes == null))
                {
                    _ResourceTypes = base.CreateObjectSet<ResourceType>("ResourceTypes");
                }
                return _ResourceTypes;
            }
        }
        private ObjectSet<ResourceType> _ResourceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sequence> Sequences
        {
            get
            {
                if ((_Sequences == null))
                {
                    _Sequences = base.CreateObjectSet<Sequence>("Sequences");
                }
                return _Sequences;
            }
        }
        private ObjectSet<Sequence> _Sequences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Shift> Shifts
        {
            get
            {
                if ((_Shifts == null))
                {
                    _Shifts = base.CreateObjectSet<Shift>("Shifts");
                }
                return _Shifts;
            }
        }
        private ObjectSet<Shift> _Shifts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestResult> TestResults
        {
            get
            {
                if ((_TestResults == null))
                {
                    _TestResults = base.CreateObjectSet<TestResult>("TestResults");
                }
                return _TestResults;
            }
        }
        private ObjectSet<TestResult> _TestResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestResultProperty> TestResultProperties
        {
            get
            {
                if ((_TestResultProperties == null))
                {
                    _TestResultProperties = base.CreateObjectSet<TestResultProperty>("TestResultProperties");
                }
                return _TestResultProperties;
            }
        }
        private ObjectSet<TestResultProperty> _TestResultProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestSpecification> TestSpecifications
        {
            get
            {
                if ((_TestSpecifications == null))
                {
                    _TestSpecifications = base.CreateObjectSet<TestSpecification>("TestSpecifications");
                }
                return _TestSpecifications;
            }
        }
        private ObjectSet<TestSpecification> _TestSpecifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestSpecificationProperty> TestSpecificationProperties
        {
            get
            {
                if ((_TestSpecificationProperties == null))
                {
                    _TestSpecificationProperties = base.CreateObjectSet<TestSpecificationProperty>("TestSpecificationProperties");
                }
                return _TestSpecificationProperties;
            }
        }
        private ObjectSet<TestSpecificationProperty> _TestSpecificationProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnitOfMeasure> UnitOfMeasures
        {
            get
            {
                if ((_UnitOfMeasures == null))
                {
                    _UnitOfMeasures = base.CreateObjectSet<UnitOfMeasure>("UnitOfMeasures");
                }
                return _UnitOfMeasures;
            }
        }
        private ObjectSet<UnitOfMeasure> _UnitOfMeasures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkCapability> WorkCapabilities
        {
            get
            {
                if ((_WorkCapabilities == null))
                {
                    _WorkCapabilities = base.CreateObjectSet<WorkCapability>("WorkCapabilities");
                }
                return _WorkCapabilities;
            }
        }
        private ObjectSet<WorkCapability> _WorkCapabilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkDefinition> WorkDefinitions
        {
            get
            {
                if ((_WorkDefinitions == null))
                {
                    _WorkDefinitions = base.CreateObjectSet<WorkDefinition>("WorkDefinitions");
                }
                return _WorkDefinitions;
            }
        }
        private ObjectSet<WorkDefinition> _WorkDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkPerformance> WorkPerformances
        {
            get
            {
                if ((_WorkPerformances == null))
                {
                    _WorkPerformances = base.CreateObjectSet<WorkPerformance>("WorkPerformances");
                }
                return _WorkPerformances;
            }
        }
        private ObjectSet<WorkPerformance> _WorkPerformances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkProcessSegment> WorkProcessSegments
        {
            get
            {
                if ((_WorkProcessSegments == null))
                {
                    _WorkProcessSegments = base.CreateObjectSet<WorkProcessSegment>("WorkProcessSegments");
                }
                return _WorkProcessSegments;
            }
        }
        private ObjectSet<WorkProcessSegment> _WorkProcessSegments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkRequest> WorkRequests
        {
            get
            {
                if ((_WorkRequests == null))
                {
                    _WorkRequests = base.CreateObjectSet<WorkRequest>("WorkRequests");
                }
                return _WorkRequests;
            }
        }
        private ObjectSet<WorkRequest> _WorkRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkResponse> WorkResponses
        {
            get
            {
                if ((_WorkResponses == null))
                {
                    _WorkResponses = base.CreateObjectSet<WorkResponse>("WorkResponses");
                }
                return _WorkResponses;
            }
        }
        private ObjectSet<WorkResponse> _WorkResponses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkSchedule> WorkSchedules
        {
            get
            {
                if ((_WorkSchedules == null))
                {
                    _WorkSchedules = base.CreateObjectSet<WorkSchedule>("WorkSchedules");
                }
                return _WorkSchedules;
            }
        }
        private ObjectSet<WorkSchedule> _WorkSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkSpecification> WorkSpecifications
        {
            get
            {
                if ((_WorkSpecifications == null))
                {
                    _WorkSpecifications = base.CreateObjectSet<WorkSpecification>("WorkSpecifications");
                }
                return _WorkSpecifications;
            }
        }
        private ObjectSet<WorkSpecification> _WorkSpecifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceActualProperty> ResourceActualProperties
        {
            get
            {
                if ((_ResourceActualProperties == null))
                {
                    _ResourceActualProperties = base.CreateObjectSet<ResourceActualProperty>("ResourceActualProperties");
                }
                return _ResourceActualProperties;
            }
        }
        private ObjectSet<ResourceActualProperty> _ResourceActualProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourcePhoto> ResourcePhotoes
        {
            get
            {
                if ((_ResourcePhotoes == null))
                {
                    _ResourcePhotoes = base.CreateObjectSet<ResourcePhoto>("ResourcePhotoes");
                }
                return _ResourcePhotoes;
            }
        }
        private ObjectSet<ResourcePhoto> _ResourcePhotoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceCapabilityProperty> ResourceCapabilityProperties
        {
            get
            {
                if ((_ResourceCapabilityProperties == null))
                {
                    _ResourceCapabilityProperties = base.CreateObjectSet<ResourceCapabilityProperty>("ResourceCapabilityProperties");
                }
                return _ResourceCapabilityProperties;
            }
        }
        private ObjectSet<ResourceCapabilityProperty> _ResourceCapabilityProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceDefinition> ResourceDefinitions
        {
            get
            {
                if ((_ResourceDefinitions == null))
                {
                    _ResourceDefinitions = base.CreateObjectSet<ResourceDefinition>("ResourceDefinitions");
                }
                return _ResourceDefinitions;
            }
        }
        private ObjectSet<ResourceDefinition> _ResourceDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipmentHmiData> EquipmentHmiDatas
        {
            get
            {
                if ((_EquipmentHmiDatas == null))
                {
                    _EquipmentHmiDatas = base.CreateObjectSet<EquipmentHmiData>("EquipmentHmiDatas");
                }
                return _EquipmentHmiDatas;
            }
        }
        private ObjectSet<EquipmentHmiData> _EquipmentHmiDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Equipment1> Equipment1
        {
            get
            {
                if ((_Equipment1 == null))
                {
                    _Equipment1 = base.CreateObjectSet<Equipment1>("Equipment1");
                }
                return _Equipment1;
            }
        }
        private ObjectSet<Equipment1> _Equipment1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SemiFinishedMaterialInventory> SemiFinishedMaterialInventories
        {
            get
            {
                if ((_SemiFinishedMaterialInventories == null))
                {
                    _SemiFinishedMaterialInventories = base.CreateObjectSet<SemiFinishedMaterialInventory>("SemiFinishedMaterialInventories");
                }
                return _SemiFinishedMaterialInventories;
            }
        }
        private ObjectSet<SemiFinishedMaterialInventory> _SemiFinishedMaterialInventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillOfResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillOfResources(BillOfResource billOfResource)
        {
            base.AddObject("BillOfResources", billOfResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Calendars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalendars(Calendar calendar)
        {
            base.AddObject("Calendars", calendar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Constants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConstants(Constant constant)
        {
            base.AddObject("Constants", constant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cultures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCultures(Culture culture)
        {
            base.AddObject("Cultures", culture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DatabaseLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDatabaseLogs(DatabaseLog databaseLog)
        {
            base.AddObject("DatabaseLogs", databaseLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ErrorLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToErrorLogs(ErrorLog errorLog)
        {
            base.AddObject("ErrorLogs", errorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HandlingUnits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHandlingUnits(HandlingUnit handlingUnit)
        {
            base.AddObject("HandlingUnits", handlingUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parametars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParametars(Parametar parametar)
        {
            base.AddObject("Parametars", parametar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParametarActuals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParametarActuals(ParametarActual parametarActual)
        {
            base.AddObject("ParametarActuals", parametarActual);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParametarRequirements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParametarRequirements(ParametarRequirement parametarRequirement)
        {
            base.AddObject("ParametarRequirements", parametarRequirement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Photos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotos(Photo photo)
        {
            base.AddObject("Photos", photo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProperties(Property property)
        {
            base.AddObject("Properties", property);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QualityReasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQualityReasons(QualityReason qualityReason)
        {
            base.AddObject("QualityReasons", qualityReason);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReasons(Reason reason)
        {
            base.AddObject("Reasons", reason);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Referencials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReferencials(Referencial referencial)
        {
            base.AddObject("Referencials", referencial);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceActuals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceActuals(ResourceActual resourceActual)
        {
            base.AddObject("ResourceActuals", resourceActual);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceCapabilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceCapabilities(ResourceCapability resourceCapability)
        {
            base.AddObject("ResourceCapabilities", resourceCapability);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceClasses(ResourceClass resourceClass)
        {
            base.AddObject("ResourceClasses", resourceClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceDocuments(ResourceDocument resourceDocument)
        {
            base.AddObject("ResourceDocuments", resourceDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceInventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceInventories(ResourceInventory resourceInventory)
        {
            base.AddObject("ResourceInventories", resourceInventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceLevels(ResourceLevel resourceLevel)
        {
            base.AddObject("ResourceLevels", resourceLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceLots EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceLots(ResourceLot resourceLot)
        {
            base.AddObject("ResourceLots", resourceLot);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceLotStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceLotStatuses(ResourceLotStatus resourceLotStatus)
        {
            base.AddObject("ResourceLotStatuses", resourceLotStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceLotTrackings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceLotTrackings(ResourceLotTracking resourceLotTracking)
        {
            base.AddObject("ResourceLotTrackings", resourceLotTracking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceProperties(ResourceProperty resourceProperty)
        {
            base.AddObject("ResourceProperties", resourceProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceRequirements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceRequirements(ResourceRequirement resourceRequirement)
        {
            base.AddObject("ResourceRequirements", resourceRequirement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceRequirementProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceRequirementProperties(ResourceRequirementProperty resourceRequirementProperty)
        {
            base.AddObject("ResourceRequirementProperties", resourceRequirementProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceReviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceReviews(ResourceReview resourceReview)
        {
            base.AddObject("ResourceReviews", resourceReview);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceSpecifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceSpecifications(ResourceSpecification resourceSpecification)
        {
            base.AddObject("ResourceSpecifications", resourceSpecification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceSpecificationProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceSpecificationProperties(ResourceSpecificationProperty resourceSpecificationProperty)
        {
            base.AddObject("ResourceSpecificationProperties", resourceSpecificationProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceTypes(ResourceType resourceType)
        {
            base.AddObject("ResourceTypes", resourceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sequences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSequences(Sequence sequence)
        {
            base.AddObject("Sequences", sequence);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Shifts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShifts(Shift shift)
        {
            base.AddObject("Shifts", shift);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestResults(TestResult testResult)
        {
            base.AddObject("TestResults", testResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestResultProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestResultProperties(TestResultProperty testResultProperty)
        {
            base.AddObject("TestResultProperties", testResultProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestSpecifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestSpecifications(TestSpecification testSpecification)
        {
            base.AddObject("TestSpecifications", testSpecification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestSpecificationProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestSpecificationProperties(TestSpecificationProperty testSpecificationProperty)
        {
            base.AddObject("TestSpecificationProperties", testSpecificationProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnitOfMeasures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnitOfMeasures(UnitOfMeasure unitOfMeasure)
        {
            base.AddObject("UnitOfMeasures", unitOfMeasure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkCapabilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkCapabilities(WorkCapability workCapability)
        {
            base.AddObject("WorkCapabilities", workCapability);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkDefinitions(WorkDefinition workDefinition)
        {
            base.AddObject("WorkDefinitions", workDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkPerformances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkPerformances(WorkPerformance workPerformance)
        {
            base.AddObject("WorkPerformances", workPerformance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkProcessSegments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkProcessSegments(WorkProcessSegment workProcessSegment)
        {
            base.AddObject("WorkProcessSegments", workProcessSegment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkRequests(WorkRequest workRequest)
        {
            base.AddObject("WorkRequests", workRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkResponses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkResponses(WorkResponse workResponse)
        {
            base.AddObject("WorkResponses", workResponse);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkSchedules(WorkSchedule workSchedule)
        {
            base.AddObject("WorkSchedules", workSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkSpecifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkSpecifications(WorkSpecification workSpecification)
        {
            base.AddObject("WorkSpecifications", workSpecification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceActualProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceActualProperties(ResourceActualProperty resourceActualProperty)
        {
            base.AddObject("ResourceActualProperties", resourceActualProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourcePhotoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourcePhotoes(ResourcePhoto resourcePhoto)
        {
            base.AddObject("ResourcePhotoes", resourcePhoto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceCapabilityProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceCapabilityProperties(ResourceCapabilityProperty resourceCapabilityProperty)
        {
            base.AddObject("ResourceCapabilityProperties", resourceCapabilityProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceDefinitions(ResourceDefinition resourceDefinition)
        {
            base.AddObject("ResourceDefinitions", resourceDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentHmiDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentHmiDatas(EquipmentHmiData equipmentHmiData)
        {
            base.AddObject("EquipmentHmiDatas", equipmentHmiData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Equipment1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipment1(Equipment1 equipment1)
        {
            base.AddObject("Equipment1", equipment1);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SemiFinishedMaterialInventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSemiFinishedMaterialInventories(SemiFinishedMaterialInventory semiFinishedMaterialInventory)
        {
            base.AddObject("SemiFinishedMaterialInventories", semiFinishedMaterialInventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ik">No Metadata Documentation available.</param>
        public int uspIncSFStock(global::System.String ik)
        {
            ObjectParameter ikParameter;
            if (ik != null)
            {
                ikParameter = new ObjectParameter("ik", ik);
            }
            else
            {
                ikParameter = new ObjectParameter("ik", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("uspIncSFStock", ikParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ik">No Metadata Documentation available.</param>
        public int IncSFStock(global::System.String ik)
        {
            ObjectParameter ikParameter;
            if (ik != null)
            {
                ikParameter = new ObjectParameter("ik", ik);
            }
            else
            {
                ikParameter = new ObjectParameter("ik", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("IncSFStock", ikParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="BillOfResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillOfResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillOfResource object.
        /// </summary>
        /// <param name="billOfResourcesID">Initial value of the BillOfResourcesID property.</param>
        public static BillOfResource CreateBillOfResource(global::System.Int32 billOfResourcesID)
        {
            BillOfResource billOfResource = new BillOfResource();
            billOfResource.BillOfResourcesID = billOfResourcesID;
            return billOfResource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BillOfResourcesID
        {
            get
            {
                return _BillOfResourcesID;
            }
            set
            {
                if (_BillOfResourcesID != value)
                {
                    OnBillOfResourcesIDChanging(value);
                    ReportPropertyChanging("BillOfResourcesID");
                    _BillOfResourcesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillOfResourcesID");
                    OnBillOfResourcesIDChanged();
                }
            }
        }
        private global::System.Int32 _BillOfResourcesID;
        partial void OnBillOfResourcesIDChanging(global::System.Int32 value);
        partial void OnBillOfResourcesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssemblyID
        {
            get
            {
                return _AssemblyID;
            }
            set
            {
                OnAssemblyIDChanging(value);
                ReportPropertyChanging("AssemblyID");
                _AssemblyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssemblyID");
                OnAssemblyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AssemblyID;
        partial void OnAssemblyIDChanging(Nullable<global::System.Int32> value);
        partial void OnAssemblyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComponentID
        {
            get
            {
                return _ComponentID;
            }
            set
            {
                OnComponentIDChanging(value);
                ReportPropertyChanging("ComponentID");
                _ComponentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComponentID");
                OnComponentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ComponentID;
        partial void OnComponentIDChanging(Nullable<global::System.Int32> value);
        partial void OnComponentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitOfMeasure
        {
            get
            {
                return _UnitOfMeasure;
            }
            set
            {
                OnUnitOfMeasureChanging(value);
                ReportPropertyChanging("UnitOfMeasure");
                _UnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitOfMeasure");
                OnUnitOfMeasureChanged();
            }
        }
        private global::System.String _UnitOfMeasure;
        partial void OnUnitOfMeasureChanging(global::System.String value);
        partial void OnUnitOfMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BORLevel
        {
            get
            {
                return _BORLevel;
            }
            set
            {
                OnBORLevelChanging(value);
                ReportPropertyChanging("BORLevel");
                _BORLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BORLevel");
                OnBORLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _BORLevel;
        partial void OnBORLevelChanging(Nullable<global::System.Int32> value);
        partial void OnBORLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifyDate
        {
            get
            {
                return _ModifyDate;
            }
            set
            {
                OnModifyDateChanging(value);
                ReportPropertyChanging("ModifyDate");
                _ModifyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifyDate");
                OnModifyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifyDate;
        partial void OnModifyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedByChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Calendar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Calendar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Calendar object.
        /// </summary>
        /// <param name="calendarID">Initial value of the CalendarID property.</param>
        public static Calendar CreateCalendar(global::System.Int32 calendarID)
        {
            Calendar calendar = new Calendar();
            calendar.CalendarID = calendarID;
            return calendar;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarID
        {
            get
            {
                return _CalendarID;
            }
            set
            {
                if (_CalendarID != value)
                {
                    OnCalendarIDChanging(value);
                    ReportPropertyChanging("CalendarID");
                    _CalendarID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalendarID");
                    OnCalendarIDChanged();
                }
            }
        }
        private global::System.Int32 _CalendarID;
        partial void OnCalendarIDChanging(global::System.Int32 value);
        partial void OnCalendarIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Carcass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carcass : Material
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carcass object.
        /// </summary>
        /// <param name="resourceDefinitionID">Initial value of the ResourceDefinitionID property.</param>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        public static Carcass CreateCarcass(global::System.Int32 resourceDefinitionID, global::System.Int32 resourceClassID)
        {
            Carcass carcass = new Carcass();
            carcass.ResourceDefinitionID = resourceDefinitionID;
            carcass.ResourceClassID = resourceClassID;
            return carcass;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Constant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Constant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Constant object.
        /// </summary>
        /// <param name="constantID">Initial value of the ConstantID property.</param>
        public static Constant CreateConstant(global::System.Int32 constantID)
        {
            Constant constant = new Constant();
            constant.ConstantID = constantID;
            return constant;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConstantID
        {
            get
            {
                return _ConstantID;
            }
            set
            {
                if (_ConstantID != value)
                {
                    OnConstantIDChanging(value);
                    ReportPropertyChanging("ConstantID");
                    _ConstantID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConstantID");
                    OnConstantIDChanged();
                }
            }
        }
        private global::System.Int32 _ConstantID;
        partial void OnConstantIDChanging(global::System.Int32 value);
        partial void OnConstantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitOfMeasure
        {
            get
            {
                return _UnitOfMeasure;
            }
            set
            {
                OnUnitOfMeasureChanging(value);
                ReportPropertyChanging("UnitOfMeasure");
                _UnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitOfMeasure");
                OnUnitOfMeasureChanged();
            }
        }
        private global::System.String _UnitOfMeasure;
        partial void OnUnitOfMeasureChanging(global::System.String value);
        partial void OnUnitOfMeasureChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Culture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Culture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Culture object.
        /// </summary>
        /// <param name="cultureID">Initial value of the CultureID property.</param>
        public static Culture CreateCulture(global::System.String cultureID)
        {
            Culture culture = new Culture();
            culture.CultureID = cultureID;
            return culture;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CultureID
        {
            get
            {
                return _CultureID;
            }
            set
            {
                if (_CultureID != value)
                {
                    OnCultureIDChanging(value);
                    ReportPropertyChanging("CultureID");
                    _CultureID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CultureID");
                    OnCultureIDChanged();
                }
            }
        }
        private global::System.String _CultureID;
        partial void OnCultureIDChanging(global::System.String value);
        partial void OnCultureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="DatabaseLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DatabaseLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DatabaseLog object.
        /// </summary>
        /// <param name="databaseLogID">Initial value of the DatabaseLogID property.</param>
        public static DatabaseLog CreateDatabaseLog(global::System.Int32 databaseLogID)
        {
            DatabaseLog databaseLog = new DatabaseLog();
            databaseLog.DatabaseLogID = databaseLogID;
            return databaseLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DatabaseLogID
        {
            get
            {
                return _DatabaseLogID;
            }
            set
            {
                if (_DatabaseLogID != value)
                {
                    OnDatabaseLogIDChanging(value);
                    ReportPropertyChanging("DatabaseLogID");
                    _DatabaseLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DatabaseLogID");
                    OnDatabaseLogIDChanged();
                }
            }
        }
        private global::System.Int32 _DatabaseLogID;
        partial void OnDatabaseLogIDChanging(global::System.Int32 value);
        partial void OnDatabaseLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostTime
        {
            get
            {
                return _PostTime;
            }
            set
            {
                OnPostTimeChanging(value);
                ReportPropertyChanging("PostTime");
                _PostTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostTime");
                OnPostTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostTime;
        partial void OnPostTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPostTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DatabaseUser
        {
            get
            {
                return _DatabaseUser;
            }
            set
            {
                OnDatabaseUserChanging(value);
                ReportPropertyChanging("DatabaseUser");
                _DatabaseUser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DatabaseUser");
                OnDatabaseUserChanged();
            }
        }
        private global::System.String _DatabaseUser;
        partial void OnDatabaseUserChanging(global::System.String value);
        partial void OnDatabaseUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Event
        {
            get
            {
                return _Event;
            }
            set
            {
                OnEventChanging(value);
                ReportPropertyChanging("Event");
                _Event = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Event");
                OnEventChanged();
            }
        }
        private global::System.String _Event;
        partial void OnEventChanging(global::System.String value);
        partial void OnEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Schema
        {
            get
            {
                return _Schema;
            }
            set
            {
                OnSchemaChanging(value);
                ReportPropertyChanging("Schema");
                _Schema = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Schema");
                OnSchemaChanged();
            }
        }
        private global::System.String _Schema;
        partial void OnSchemaChanging(global::System.String value);
        partial void OnSchemaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Object
        {
            get
            {
                return _Object;
            }
            set
            {
                OnObjectChanging(value);
                ReportPropertyChanging("Object");
                _Object = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Object");
                OnObjectChanged();
            }
        }
        private global::System.String _Object;
        partial void OnObjectChanging(global::System.String value);
        partial void OnObjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TSQL
        {
            get
            {
                return _TSQL;
            }
            set
            {
                OnTSQLChanging(value);
                ReportPropertyChanging("TSQL");
                _TSQL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TSQL");
                OnTSQLChanged();
            }
        }
        private global::System.String _TSQL;
        partial void OnTSQLChanging(global::System.String value);
        partial void OnTSQLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XmlEvent
        {
            get
            {
                return _XmlEvent;
            }
            set
            {
                OnXmlEventChanging(value);
                ReportPropertyChanging("XmlEvent");
                _XmlEvent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XmlEvent");
                OnXmlEventChanged();
            }
        }
        private global::System.String _XmlEvent;
        partial void OnXmlEventChanging(global::System.String value);
        partial void OnXmlEventChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Equipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipment : ResourceDefinition
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Equipment object.
        /// </summary>
        /// <param name="resourceDefinitionID">Initial value of the ResourceDefinitionID property.</param>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        public static Equipment CreateEquipment(global::System.Int32 resourceDefinitionID, global::System.Int32 resourceClassID)
        {
            Equipment equipment = new Equipment();
            equipment.ResourceDefinitionID = resourceDefinitionID;
            equipment.ResourceClassID = resourceClassID;
            return equipment;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Equipment1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipment1 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Equipment1 object.
        /// </summary>
        /// <param name="equipmentID">Initial value of the EquipmentID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Equipment1 CreateEquipment1(global::System.Int32 equipmentID, global::System.String name)
        {
            Equipment1 equipment1 = new Equipment1();
            equipment1.EquipmentID = equipmentID;
            equipment1.Name = name;
            return equipment1;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentID
        {
            get
            {
                return _EquipmentID;
            }
            set
            {
                if (_EquipmentID != value)
                {
                    OnEquipmentIDChanging(value);
                    ReportPropertyChanging("EquipmentID");
                    _EquipmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquipmentID");
                    OnEquipmentIDChanged();
                }
            }
        }
        private global::System.Int32 _EquipmentID;
        partial void OnEquipmentIDChanging(global::System.Int32 value);
        partial void OnEquipmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EquipmentClassID
        {
            get
            {
                return _EquipmentClassID;
            }
            set
            {
                OnEquipmentClassIDChanging(value);
                ReportPropertyChanging("EquipmentClassID");
                _EquipmentClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentClassID");
                OnEquipmentClassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EquipmentClassID;
        partial void OnEquipmentClassIDChanging(Nullable<global::System.Int32> value);
        partial void OnEquipmentClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentEquipment
        {
            get
            {
                return _ParentEquipment;
            }
            set
            {
                OnParentEquipmentChanging(value);
                ReportPropertyChanging("ParentEquipment");
                _ParentEquipment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentEquipment");
                OnParentEquipmentChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentEquipment;
        partial void OnParentEquipmentChanging(Nullable<global::System.Int32> value);
        partial void OnParentEquipmentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_EquipmentHmiData_Equipments", "EquipmentHmiData")]
        public EquipmentHmiData EquipmentHmiData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentHmiData>("T2TModel.FK_EquipmentHmiData_Equipments", "EquipmentHmiData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentHmiData>("T2TModel.FK_EquipmentHmiData_Equipments", "EquipmentHmiData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EquipmentHmiData> EquipmentHmiDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentHmiData>("T2TModel.FK_EquipmentHmiData_Equipments", "EquipmentHmiData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EquipmentHmiData>("T2TModel.FK_EquipmentHmiData_Equipments", "EquipmentHmiData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="EquipmentHmiData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentHmiData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipmentHmiData object.
        /// </summary>
        /// <param name="equipmentID">Initial value of the EquipmentID property.</param>
        public static EquipmentHmiData CreateEquipmentHmiData(global::System.Int32 equipmentID)
        {
            EquipmentHmiData equipmentHmiData = new EquipmentHmiData();
            equipmentHmiData.EquipmentID = equipmentID;
            return equipmentHmiData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentID
        {
            get
            {
                return _EquipmentID;
            }
            set
            {
                if (_EquipmentID != value)
                {
                    OnEquipmentIDChanging(value);
                    ReportPropertyChanging("EquipmentID");
                    _EquipmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquipmentID");
                    OnEquipmentIDChanged();
                }
            }
        }
        private global::System.Int32 _EquipmentID;
        partial void OnEquipmentIDChanging(global::System.Int32 value);
        partial void OnEquipmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tags
        {
            get
            {
                return _Tags;
            }
            set
            {
                OnTagsChanging(value);
                ReportPropertyChanging("Tags");
                _Tags = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tags");
                OnTagsChanged();
            }
        }
        private global::System.String _Tags;
        partial void OnTagsChanging(global::System.String value);
        partial void OnTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Screens
        {
            get
            {
                return _Screens;
            }
            set
            {
                OnScreensChanging(value);
                ReportPropertyChanging("Screens");
                _Screens = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Screens");
                OnScreensChanged();
            }
        }
        private global::System.String _Screens;
        partial void OnScreensChanging(global::System.String value);
        partial void OnScreensChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alarms
        {
            get
            {
                return _Alarms;
            }
            set
            {
                OnAlarmsChanging(value);
                ReportPropertyChanging("Alarms");
                _Alarms = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alarms");
                OnAlarmsChanged();
            }
        }
        private global::System.String _Alarms;
        partial void OnAlarmsChanging(global::System.String value);
        partial void OnAlarmsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_EquipmentHmiData_Equipments", "Equipment1")]
        public Equipment1 Equipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment1>("T2TModel.FK_EquipmentHmiData_Equipments", "Equipment1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment1>("T2TModel.FK_EquipmentHmiData_Equipments", "Equipment1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Equipment1> EquipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment1>("T2TModel.FK_EquipmentHmiData_Equipments", "Equipment1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Equipment1>("T2TModel.FK_EquipmentHmiData_Equipments", "Equipment1", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ErrorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ErrorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ErrorLog object.
        /// </summary>
        /// <param name="errorLogID">Initial value of the ErrorLogID property.</param>
        public static ErrorLog CreateErrorLog(global::System.Int32 errorLogID)
        {
            ErrorLog errorLog = new ErrorLog();
            errorLog.ErrorLogID = errorLogID;
            return errorLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ErrorLogID
        {
            get
            {
                return _ErrorLogID;
            }
            set
            {
                if (_ErrorLogID != value)
                {
                    OnErrorLogIDChanging(value);
                    ReportPropertyChanging("ErrorLogID");
                    _ErrorLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ErrorLogID");
                    OnErrorLogIDChanged();
                }
            }
        }
        private global::System.Int32 _ErrorLogID;
        partial void OnErrorLogIDChanging(global::System.Int32 value);
        partial void OnErrorLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ErrorTime
        {
            get
            {
                return _ErrorTime;
            }
            set
            {
                OnErrorTimeChanging(value);
                ReportPropertyChanging("ErrorTime");
                _ErrorTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorTime");
                OnErrorTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ErrorTime;
        partial void OnErrorTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnErrorTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ErrorNumber
        {
            get
            {
                return _ErrorNumber;
            }
            set
            {
                OnErrorNumberChanging(value);
                ReportPropertyChanging("ErrorNumber");
                _ErrorNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorNumber");
                OnErrorNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _ErrorNumber;
        partial void OnErrorNumberChanging(Nullable<global::System.Int32> value);
        partial void OnErrorNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ErrorSeverity
        {
            get
            {
                return _ErrorSeverity;
            }
            set
            {
                OnErrorSeverityChanging(value);
                ReportPropertyChanging("ErrorSeverity");
                _ErrorSeverity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorSeverity");
                OnErrorSeverityChanged();
            }
        }
        private Nullable<global::System.Int32> _ErrorSeverity;
        partial void OnErrorSeverityChanging(Nullable<global::System.Int32> value);
        partial void OnErrorSeverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorState
        {
            get
            {
                return _ErrorState;
            }
            set
            {
                OnErrorStateChanging(value);
                ReportPropertyChanging("ErrorState");
                _ErrorState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorState");
                OnErrorStateChanged();
            }
        }
        private global::System.String _ErrorState;
        partial void OnErrorStateChanging(global::System.String value);
        partial void OnErrorStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorProcedure
        {
            get
            {
                return _ErrorProcedure;
            }
            set
            {
                OnErrorProcedureChanging(value);
                ReportPropertyChanging("ErrorProcedure");
                _ErrorProcedure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorProcedure");
                OnErrorProcedureChanged();
            }
        }
        private global::System.String _ErrorProcedure;
        partial void OnErrorProcedureChanging(global::System.String value);
        partial void OnErrorProcedureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ErrorLine
        {
            get
            {
                return _ErrorLine;
            }
            set
            {
                OnErrorLineChanging(value);
                ReportPropertyChanging("ErrorLine");
                _ErrorLine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorLine");
                OnErrorLineChanged();
            }
        }
        private Nullable<global::System.Int32> _ErrorLine;
        partial void OnErrorLineChanging(Nullable<global::System.Int32> value);
        partial void OnErrorLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorMessage
        {
            get
            {
                return _ErrorMessage;
            }
            set
            {
                OnErrorMessageChanging(value);
                ReportPropertyChanging("ErrorMessage");
                _ErrorMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorMessage");
                OnErrorMessageChanged();
            }
        }
        private global::System.String _ErrorMessage;
        partial void OnErrorMessageChanging(global::System.String value);
        partial void OnErrorMessageChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="HandlingUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HandlingUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HandlingUnit object.
        /// </summary>
        /// <param name="handlingUnitID">Initial value of the HandlingUnitID property.</param>
        public static HandlingUnit CreateHandlingUnit(global::System.Int32 handlingUnitID)
        {
            HandlingUnit handlingUnit = new HandlingUnit();
            handlingUnit.HandlingUnitID = handlingUnitID;
            return handlingUnit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HandlingUnitID
        {
            get
            {
                return _HandlingUnitID;
            }
            set
            {
                if (_HandlingUnitID != value)
                {
                    OnHandlingUnitIDChanging(value);
                    ReportPropertyChanging("HandlingUnitID");
                    _HandlingUnitID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HandlingUnitID");
                    OnHandlingUnitIDChanged();
                }
            }
        }
        private global::System.Int32 _HandlingUnitID;
        partial void OnHandlingUnitIDChanging(global::System.Int32 value);
        partial void OnHandlingUnitIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Inerliner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inerliner : Material
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Inerliner object.
        /// </summary>
        /// <param name="resourceDefinitionID">Initial value of the ResourceDefinitionID property.</param>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        public static Inerliner CreateInerliner(global::System.Int32 resourceDefinitionID, global::System.Int32 resourceClassID)
        {
            Inerliner inerliner = new Inerliner();
            inerliner.ResourceDefinitionID = resourceDefinitionID;
            inerliner.ResourceClassID = resourceClassID;
            return inerliner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _Length;
        partial void OnLengthChanging(Nullable<global::System.Int32> value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Thickness
        {
            get
            {
                return _Thickness;
            }
            set
            {
                OnThicknessChanging(value);
                ReportPropertyChanging("Thickness");
                _Thickness = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Thickness");
                OnThicknessChanged();
            }
        }
        private Nullable<global::System.Decimal> _Thickness;
        partial void OnThicknessChanging(Nullable<global::System.Decimal> value);
        partial void OnThicknessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Int32> value);
        partial void OnWeightChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Lank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lank : Material
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lank object.
        /// </summary>
        /// <param name="resourceDefinitionID">Initial value of the ResourceDefinitionID property.</param>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        public static Lank CreateLank(global::System.Int32 resourceDefinitionID, global::System.Int32 resourceClassID)
        {
            Lank lank = new Lank();
            lank.ResourceDefinitionID = resourceDefinitionID;
            lank.ResourceClassID = resourceClassID;
            return lank;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LankTT
        {
            get
            {
                return _LankTT;
            }
            set
            {
                OnLankTTChanging(value);
                ReportPropertyChanging("LankTT");
                _LankTT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LankTT");
                OnLankTTChanged();
            }
        }
        private global::System.String _LankTT;
        partial void OnLankTTChanging(global::System.String value);
        partial void OnLankTTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Perimeter
        {
            get
            {
                return _Perimeter;
            }
            set
            {
                OnPerimeterChanging(value);
                ReportPropertyChanging("Perimeter");
                _Perimeter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Perimeter");
                OnPerimeterChanged();
            }
        }
        private Nullable<global::System.Int32> _Perimeter;
        partial void OnPerimeterChanging(Nullable<global::System.Int32> value);
        partial void OnPerimeterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Diameter
        {
            get
            {
                return _Diameter;
            }
            set
            {
                OnDiameterChanging(value);
                ReportPropertyChanging("Diameter");
                _Diameter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Diameter");
                OnDiameterChanged();
            }
        }
        private Nullable<global::System.Int32> _Diameter;
        partial void OnDiameterChanging(Nullable<global::System.Int32> value);
        partial void OnDiameterChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        public static Location CreateLocation(global::System.Int16 locationID)
        {
            Location location = new Location();
            location.LocationID = locationID;
            return location;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                if (_LocationID != value)
                {
                    OnLocationIDChanging(value);
                    ReportPropertyChanging("LocationID");
                    _LocationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationID");
                    OnLocationIDChanged();
                }
            }
        }
        private global::System.Int16 _LocationID;
        partial void OnLocationIDChanging(global::System.Int16 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Availability
        {
            get
            {
                return _Availability;
            }
            set
            {
                OnAvailabilityChanging(value);
                ReportPropertyChanging("Availability");
                _Availability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Availability");
                OnAvailabilityChanged();
            }
        }
        private Nullable<global::System.Decimal> _Availability;
        partial void OnAvailabilityChanging(Nullable<global::System.Decimal> value);
        partial void OnAvailabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Material")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Carcass))]
    [KnownTypeAttribute(typeof(Inerliner))]
    [KnownTypeAttribute(typeof(Lank))]
    [KnownTypeAttribute(typeof(Ply))]
    [KnownTypeAttribute(typeof(Protector))]
    [KnownTypeAttribute(typeof(ScooterRawTyre))]
    [KnownTypeAttribute(typeof(ScooterTyre))]
    public partial class Material : ResourceDefinition
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Material object.
        /// </summary>
        /// <param name="resourceDefinitionID">Initial value of the ResourceDefinitionID property.</param>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        public static Material CreateMaterial(global::System.Int32 resourceDefinitionID, global::System.Int32 resourceClassID)
        {
            Material material = new Material();
            material.ResourceDefinitionID = resourceDefinitionID;
            material.ResourceClassID = resourceClassID;
            return material;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Parametar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parametar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parametar object.
        /// </summary>
        /// <param name="parametarID">Initial value of the ParametarID property.</param>
        public static Parametar CreateParametar(global::System.Int32 parametarID)
        {
            Parametar parametar = new Parametar();
            parametar.ParametarID = parametarID;
            return parametar;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParametarID
        {
            get
            {
                return _ParametarID;
            }
            set
            {
                if (_ParametarID != value)
                {
                    OnParametarIDChanging(value);
                    ReportPropertyChanging("ParametarID");
                    _ParametarID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParametarID");
                    OnParametarIDChanged();
                }
            }
        }
        private global::System.Int32 _ParametarID;
        partial void OnParametarIDChanging(global::System.Int32 value);
        partial void OnParametarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitOfMeasure
        {
            get
            {
                return _UnitOfMeasure;
            }
            set
            {
                OnUnitOfMeasureChanging(value);
                ReportPropertyChanging("UnitOfMeasure");
                _UnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitOfMeasure");
                OnUnitOfMeasureChanged();
            }
        }
        private global::System.String _UnitOfMeasure;
        partial void OnUnitOfMeasureChanging(global::System.String value);
        partial void OnUnitOfMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastChange
        {
            get
            {
                return _LastChange;
            }
            set
            {
                OnLastChangeChanging(value);
                ReportPropertyChanging("LastChange");
                _LastChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChange");
                OnLastChangeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastChange;
        partial void OnLastChangeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUserID
        {
            get
            {
                return _LastUserID;
            }
            set
            {
                OnLastUserIDChanging(value);
                ReportPropertyChanging("LastUserID");
                _LastUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUserID");
                OnLastUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUserID;
        partial void OnLastUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnLastUserIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ParametarActual")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParametarActual : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParametarActual object.
        /// </summary>
        /// <param name="parametarActualID">Initial value of the ParametarActualID property.</param>
        public static ParametarActual CreateParametarActual(global::System.Int32 parametarActualID)
        {
            ParametarActual parametarActual = new ParametarActual();
            parametarActual.ParametarActualID = parametarActualID;
            return parametarActual;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParametarActualID
        {
            get
            {
                return _ParametarActualID;
            }
            set
            {
                if (_ParametarActualID != value)
                {
                    OnParametarActualIDChanging(value);
                    ReportPropertyChanging("ParametarActualID");
                    _ParametarActualID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParametarActualID");
                    OnParametarActualIDChanged();
                }
            }
        }
        private global::System.Int32 _ParametarActualID;
        partial void OnParametarActualIDChanging(global::System.Int32 value);
        partial void OnParametarActualIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ParametarRequirement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParametarRequirement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParametarRequirement object.
        /// </summary>
        /// <param name="resourceParametarID">Initial value of the ResourceParametarID property.</param>
        /// <param name="workRequestID">Initial value of the WorkRequestID property.</param>
        public static ParametarRequirement CreateParametarRequirement(global::System.Int32 resourceParametarID, global::System.Int32 workRequestID)
        {
            ParametarRequirement parametarRequirement = new ParametarRequirement();
            parametarRequirement.ResourceParametarID = resourceParametarID;
            parametarRequirement.WorkRequestID = workRequestID;
            return parametarRequirement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceParametarID
        {
            get
            {
                return _ResourceParametarID;
            }
            set
            {
                if (_ResourceParametarID != value)
                {
                    OnResourceParametarIDChanging(value);
                    ReportPropertyChanging("ResourceParametarID");
                    _ResourceParametarID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceParametarID");
                    OnResourceParametarIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceParametarID;
        partial void OnResourceParametarIDChanging(global::System.Int32 value);
        partial void OnResourceParametarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentResourceParametarID
        {
            get
            {
                return _ParentResourceParametarID;
            }
            set
            {
                OnParentResourceParametarIDChanging(value);
                ReportPropertyChanging("ParentResourceParametarID");
                _ParentResourceParametarID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentResourceParametarID");
                OnParentResourceParametarIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentResourceParametarID;
        partial void OnParentResourceParametarIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentResourceParametarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkRequestID
        {
            get
            {
                return _WorkRequestID;
            }
            set
            {
                if (_WorkRequestID != value)
                {
                    OnWorkRequestIDChanging(value);
                    ReportPropertyChanging("WorkRequestID");
                    _WorkRequestID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkRequestID");
                    OnWorkRequestIDChanged();
                }
            }
        }
        private global::System.Int32 _WorkRequestID;
        partial void OnWorkRequestIDChanging(global::System.Int32 value);
        partial void OnWorkRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitOfMeasure
        {
            get
            {
                return _UnitOfMeasure;
            }
            set
            {
                OnUnitOfMeasureChanging(value);
                ReportPropertyChanging("UnitOfMeasure");
                _UnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitOfMeasure");
                OnUnitOfMeasureChanged();
            }
        }
        private global::System.String _UnitOfMeasure;
        partial void OnUnitOfMeasureChanging(global::System.String value);
        partial void OnUnitOfMeasureChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Personnel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Personnel : ResourceDefinition
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Personnel object.
        /// </summary>
        /// <param name="resourceDefinitionID">Initial value of the ResourceDefinitionID property.</param>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        public static Personnel CreatePersonnel(global::System.Int32 resourceDefinitionID, global::System.Int32 resourceClassID)
        {
            Personnel personnel = new Personnel();
            personnel.ResourceDefinitionID = resourceDefinitionID;
            personnel.ResourceClassID = resourceClassID;
            return personnel;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Photo object.
        /// </summary>
        /// <param name="photoID">Initial value of the PhotoID property.</param>
        public static Photo CreatePhoto(global::System.Int32 photoID)
        {
            Photo photo = new Photo();
            photo.PhotoID = photoID;
            return photo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhotoID
        {
            get
            {
                return _PhotoID;
            }
            set
            {
                if (_PhotoID != value)
                {
                    OnPhotoIDChanging(value);
                    ReportPropertyChanging("PhotoID");
                    _PhotoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhotoID");
                    OnPhotoIDChanged();
                }
            }
        }
        private global::System.Int32 _PhotoID;
        partial void OnPhotoIDChanging(global::System.Int32 value);
        partial void OnPhotoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] ThumbNailPhoto
        {
            get
            {
                return StructuralObject.GetValidValue(_ThumbNailPhoto);
            }
            set
            {
                OnThumbNailPhotoChanging(value);
                ReportPropertyChanging("ThumbNailPhoto");
                _ThumbNailPhoto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThumbNailPhoto");
                OnThumbNailPhotoChanged();
            }
        }
        private global::System.Byte[] _ThumbNailPhoto;
        partial void OnThumbNailPhotoChanging(global::System.Byte[] value);
        partial void OnThumbNailPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThumbnailPhotoFileName
        {
            get
            {
                return _ThumbnailPhotoFileName;
            }
            set
            {
                OnThumbnailPhotoFileNameChanging(value);
                ReportPropertyChanging("ThumbnailPhotoFileName");
                _ThumbnailPhotoFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThumbnailPhotoFileName");
                OnThumbnailPhotoFileNameChanged();
            }
        }
        private global::System.String _ThumbnailPhotoFileName;
        partial void OnThumbnailPhotoFileNameChanging(global::System.String value);
        partial void OnThumbnailPhotoFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] LargePhoto
        {
            get
            {
                return StructuralObject.GetValidValue(_LargePhoto);
            }
            set
            {
                OnLargePhotoChanging(value);
                ReportPropertyChanging("LargePhoto");
                _LargePhoto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LargePhoto");
                OnLargePhotoChanged();
            }
        }
        private global::System.Byte[] _LargePhoto;
        partial void OnLargePhotoChanging(global::System.Byte[] value);
        partial void OnLargePhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LargePhotoFileName
        {
            get
            {
                return _LargePhotoFileName;
            }
            set
            {
                OnLargePhotoFileNameChanging(value);
                ReportPropertyChanging("LargePhotoFileName");
                _LargePhotoFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LargePhotoFileName");
                OnLargePhotoFileNameChanged();
            }
        }
        private global::System.String _LargePhotoFileName;
        partial void OnLargePhotoFileNameChanging(global::System.String value);
        partial void OnLargePhotoFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourcePhoto_ToPhoto", "ResourcePhoto")]
        public EntityCollection<ResourcePhoto> ResourcePhotoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourcePhoto>("T2TModel.FK_ResourcePhoto_ToPhoto", "ResourcePhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourcePhoto>("T2TModel.FK_ResourcePhoto_ToPhoto", "ResourcePhoto", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="PhysicalAsset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhysicalAsset : ResourceDefinition
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhysicalAsset object.
        /// </summary>
        /// <param name="resourceDefinitionID">Initial value of the ResourceDefinitionID property.</param>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        public static PhysicalAsset CreatePhysicalAsset(global::System.Int32 resourceDefinitionID, global::System.Int32 resourceClassID)
        {
            PhysicalAsset physicalAsset = new PhysicalAsset();
            physicalAsset.ResourceDefinitionID = resourceDefinitionID;
            physicalAsset.ResourceClassID = resourceClassID;
            return physicalAsset;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Ply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ply : Material
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ply object.
        /// </summary>
        /// <param name="resourceDefinitionID">Initial value of the ResourceDefinitionID property.</param>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        public static Ply CreatePly(global::System.Int32 resourceDefinitionID, global::System.Int32 resourceClassID)
        {
            Ply ply = new Ply();
            ply.ResourceDefinitionID = resourceDefinitionID;
            ply.ResourceClassID = resourceClassID;
            return ply;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Lenght
        {
            get
            {
                return _Lenght;
            }
            set
            {
                OnLenghtChanging(value);
                ReportPropertyChanging("Lenght");
                _Lenght = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lenght");
                OnLenghtChanged();
            }
        }
        private Nullable<global::System.Int32> _Lenght;
        partial void OnLenghtChanging(Nullable<global::System.Int32> value);
        partial void OnLenghtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Angle
        {
            get
            {
                return _Angle;
            }
            set
            {
                OnAngleChanging(value);
                ReportPropertyChanging("Angle");
                _Angle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Angle");
                OnAngleChanged();
            }
        }
        private Nullable<global::System.Decimal> _Angle;
        partial void OnAngleChanging(Nullable<global::System.Decimal> value);
        partial void OnAngleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Int32> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private Nullable<global::System.Byte> _Number;
        partial void OnNumberChanging(Nullable<global::System.Byte> value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Property : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Property object.
        /// </summary>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        public static Property CreateProperty(global::System.Int32 propertyID)
        {
            Property property = new Property();
            property.PropertyID = propertyID;
            return property;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentPropertyID
        {
            get
            {
                return _ParentPropertyID;
            }
            set
            {
                OnParentPropertyIDChanging(value);
                ReportPropertyChanging("ParentPropertyID");
                _ParentPropertyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentPropertyID");
                OnParentPropertyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentPropertyID;
        partial void OnParentPropertyIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentPropertyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActualProperty_ToProperty", "ResourceActualProperty")]
        public EntityCollection<ResourceActualProperty> ResourceActualProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceActualProperty>("T2TModel.FK_ResourceActualProperty_ToProperty", "ResourceActualProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceActualProperty>("T2TModel.FK_ResourceActualProperty_ToProperty", "ResourceActualProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceProperty_ToProperty", "ResourceProperty")]
        public EntityCollection<ResourceProperty> ResourceProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceProperty>("T2TModel.FK_ResourceProperty_ToProperty", "ResourceProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceProperty>("T2TModel.FK_ResourceProperty_ToProperty", "ResourceProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirementProperty_ToProperty", "ResourceRequirementProperty")]
        public EntityCollection<ResourceRequirementProperty> ResourceRequirementProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceRequirementProperty>("T2TModel.FK_ResourceRequirementProperty_ToProperty", "ResourceRequirementProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceRequirementProperty>("T2TModel.FK_ResourceRequirementProperty_ToProperty", "ResourceRequirementProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecificationProperty_Property", "ResourceSpecificationProperty")]
        public EntityCollection<ResourceSpecificationProperty> ResourceSpecificationProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSpecificationProperty>("T2TModel.FK_ResourceSpecificationProperty_Property", "ResourceSpecificationProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSpecificationProperty>("T2TModel.FK_ResourceSpecificationProperty_Property", "ResourceSpecificationProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapabilityProperty_ToProperty", "ResourceCapabilityProperty")]
        public EntityCollection<ResourceCapabilityProperty> ResourceCapabilityProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceCapabilityProperty>("T2TModel.FK_ResourceCapabilityProperty_ToProperty", "ResourceCapabilityProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceCapabilityProperty>("T2TModel.FK_ResourceCapabilityProperty_ToProperty", "ResourceCapabilityProperty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Protector")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Protector : Material
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Protector object.
        /// </summary>
        /// <param name="resourceDefinitionID">Initial value of the ResourceDefinitionID property.</param>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        public static Protector CreateProtector(global::System.Int32 resourceDefinitionID, global::System.Int32 resourceClassID)
        {
            Protector protector = new Protector();
            protector.ResourceDefinitionID = resourceDefinitionID;
            protector.ResourceClassID = resourceClassID;
            return protector;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _Length;
        partial void OnLengthChanging(Nullable<global::System.Int32> value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Int32> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SirinaRamena
        {
            get
            {
                return _SirinaRamena;
            }
            set
            {
                OnSirinaRamenaChanging(value);
                ReportPropertyChanging("SirinaRamena");
                _SirinaRamena = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SirinaRamena");
                OnSirinaRamenaChanged();
            }
        }
        private Nullable<global::System.Int32> _SirinaRamena;
        partial void OnSirinaRamenaChanging(Nullable<global::System.Int32> value);
        partial void OnSirinaRamenaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfileCode
        {
            get
            {
                return _ProfileCode;
            }
            set
            {
                OnProfileCodeChanging(value);
                ReportPropertyChanging("ProfileCode");
                _ProfileCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfileCode");
                OnProfileCodeChanged();
            }
        }
        private global::System.String _ProfileCode;
        partial void OnProfileCodeChanging(global::System.String value);
        partial void OnProfileCodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="QualityReason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QualityReason : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QualityReason object.
        /// </summary>
        /// <param name="qualityReasonID">Initial value of the QualityReasonID property.</param>
        public static QualityReason CreateQualityReason(global::System.Int32 qualityReasonID)
        {
            QualityReason qualityReason = new QualityReason();
            qualityReason.QualityReasonID = qualityReasonID;
            return qualityReason;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QualityReasonID
        {
            get
            {
                return _QualityReasonID;
            }
            set
            {
                if (_QualityReasonID != value)
                {
                    OnQualityReasonIDChanging(value);
                    ReportPropertyChanging("QualityReasonID");
                    _QualityReasonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QualityReasonID");
                    OnQualityReasonIDChanged();
                }
            }
        }
        private global::System.Int32 _QualityReasonID;
        partial void OnQualityReasonIDChanging(global::System.Int32 value);
        partial void OnQualityReasonIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Reason")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reason : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reason object.
        /// </summary>
        /// <param name="reasonID">Initial value of the ReasonID property.</param>
        public static Reason CreateReason(global::System.Int32 reasonID)
        {
            Reason reason = new Reason();
            reason.ReasonID = reasonID;
            return reason;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReasonID
        {
            get
            {
                return _ReasonID;
            }
            set
            {
                if (_ReasonID != value)
                {
                    OnReasonIDChanging(value);
                    ReportPropertyChanging("ReasonID");
                    _ReasonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReasonID");
                    OnReasonIDChanged();
                }
            }
        }
        private global::System.Int32 _ReasonID;
        partial void OnReasonIDChanging(global::System.Int32 value);
        partial void OnReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentResonID
        {
            get
            {
                return _ParentResonID;
            }
            set
            {
                OnParentResonIDChanging(value);
                ReportPropertyChanging("ParentResonID");
                _ParentResonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentResonID");
                OnParentResonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentResonID;
        partial void OnParentResonIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentResonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _Level;
        partial void OnLevelChanging(Nullable<global::System.Int32> value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Calculate
        {
            get
            {
                return _Calculate;
            }
            set
            {
                OnCalculateChanging(value);
                ReportPropertyChanging("Calculate");
                _Calculate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calculate");
                OnCalculateChanged();
            }
        }
        private Nullable<global::System.Boolean> _Calculate;
        partial void OnCalculateChanging(Nullable<global::System.Boolean> value);
        partial void OnCalculateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReferencialID
        {
            get
            {
                return _ReferencialID;
            }
            set
            {
                OnReferencialIDChanging(value);
                ReportPropertyChanging("ReferencialID");
                _ReferencialID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferencialID");
                OnReferencialIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReferencialID;
        partial void OnReferencialIDChanging(Nullable<global::System.Int32> value);
        partial void OnReferencialIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapability_ToReason", "ResourceCapability")]
        public EntityCollection<ResourceCapability> ResourceCapabilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceCapability>("T2TModel.FK_ResourceCapability_ToReason", "ResourceCapability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceCapability>("T2TModel.FK_ResourceCapability_ToReason", "ResourceCapability", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Referencial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Referencial : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Referencial object.
        /// </summary>
        /// <param name="referencialID">Initial value of the ReferencialID property.</param>
        public static Referencial CreateReferencial(global::System.Int32 referencialID)
        {
            Referencial referencial = new Referencial();
            referencial.ReferencialID = referencialID;
            return referencial;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReferencialID
        {
            get
            {
                return _ReferencialID;
            }
            set
            {
                if (_ReferencialID != value)
                {
                    OnReferencialIDChanging(value);
                    ReportPropertyChanging("ReferencialID");
                    _ReferencialID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReferencialID");
                    OnReferencialIDChanged();
                }
            }
        }
        private global::System.Int32 _ReferencialID;
        partial void OnReferencialIDChanging(global::System.Int32 value);
        partial void OnReferencialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PublishedDate
        {
            get
            {
                return _PublishedDate;
            }
            set
            {
                OnPublishedDateChanging(value);
                ReportPropertyChanging("PublishedDate");
                _PublishedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishedDate");
                OnPublishedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PublishedDate;
        partial void OnPublishedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPublishedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PublishedBy
        {
            get
            {
                return _PublishedBy;
            }
            set
            {
                OnPublishedByChanging(value);
                ReportPropertyChanging("PublishedBy");
                _PublishedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PublishedBy");
                OnPublishedByChanged();
            }
        }
        private global::System.String _PublishedBy;
        partial void OnPublishedByChanging(global::System.String value);
        partial void OnPublishedByChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceActual")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceActual : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceActual object.
        /// </summary>
        /// <param name="resourceActualID">Initial value of the ResourceActualID property.</param>
        public static ResourceActual CreateResourceActual(global::System.Int32 resourceActualID)
        {
            ResourceActual resourceActual = new ResourceActual();
            resourceActual.ResourceActualID = resourceActualID;
            return resourceActual;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceActualID
        {
            get
            {
                return _ResourceActualID;
            }
            set
            {
                if (_ResourceActualID != value)
                {
                    OnResourceActualIDChanging(value);
                    ReportPropertyChanging("ResourceActualID");
                    _ResourceActualID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceActualID");
                    OnResourceActualIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceActualID;
        partial void OnResourceActualIDChanging(global::System.Int32 value);
        partial void OnResourceActualIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkResponseID
        {
            get
            {
                return _WorkResponseID;
            }
            set
            {
                OnWorkResponseIDChanging(value);
                ReportPropertyChanging("WorkResponseID");
                _WorkResponseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkResponseID");
                OnWorkResponseIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkResponseID;
        partial void OnWorkResponseIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkResponseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceID;
        partial void OnResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceTypeID
        {
            get
            {
                return _ResourceTypeID;
            }
            set
            {
                OnResourceTypeIDChanging(value);
                ReportPropertyChanging("ResourceTypeID");
                _ResourceTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceTypeID");
                OnResourceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceTypeID;
        partial void OnResourceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceUse
        {
            get
            {
                return _ResourceUse;
            }
            set
            {
                OnResourceUseChanging(value);
                ReportPropertyChanging("ResourceUse");
                _ResourceUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceUse");
                OnResourceUseChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceUse;
        partial void OnResourceUseChanging(Nullable<global::System.Int32> value);
        partial void OnResourceUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Single> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Single> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuantityUnitOfMeasure
        {
            get
            {
                return _QuantityUnitOfMeasure;
            }
            set
            {
                OnQuantityUnitOfMeasureChanging(value);
                ReportPropertyChanging("QuantityUnitOfMeasure");
                _QuantityUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuantityUnitOfMeasure");
                OnQuantityUnitOfMeasureChanged();
            }
        }
        private global::System.String _QuantityUnitOfMeasure;
        partial void OnQuantityUnitOfMeasureChanging(global::System.String value);
        partial void OnQuantityUnitOfMeasureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActual_ToResourceDefinition", "ResourceDefinition")]
        public ResourceDefinition ResourceDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceActual_ToResourceDefinition", "ResourceDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceActual_ToResourceDefinition", "ResourceDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceDefinition> ResourceDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceActual_ToResourceDefinition", "ResourceDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceActual_ToResourceDefinition", "ResourceDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActual_ToResourceLot", "ResourceLot")]
        public ResourceLot ResourceLot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceActual_ToResourceLot", "ResourceLot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceActual_ToResourceLot", "ResourceLot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceLot> ResourceLotReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceActual_ToResourceLot", "ResourceLot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceLot>("T2TModel.FK_ResourceActual_ToResourceLot", "ResourceLot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActual_ToResourceType", "ResourceType")]
        public ResourceType ResourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("T2TModel.FK_ResourceActual_ToResourceType", "ResourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("T2TModel.FK_ResourceActual_ToResourceType", "ResourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceType> ResourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("T2TModel.FK_ResourceActual_ToResourceType", "ResourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceType>("T2TModel.FK_ResourceActual_ToResourceType", "ResourceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActual_ToWorkResponse", "WorkResponse")]
        public WorkResponse WorkResponse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkResponse>("T2TModel.FK_ResourceActual_ToWorkResponse", "WorkResponse").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkResponse>("T2TModel.FK_ResourceActual_ToWorkResponse", "WorkResponse").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkResponse> WorkResponseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkResponse>("T2TModel.FK_ResourceActual_ToWorkResponse", "WorkResponse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkResponse>("T2TModel.FK_ResourceActual_ToWorkResponse", "WorkResponse", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActualProperty_ToResourceActual", "ResourceActualProperty")]
        public EntityCollection<ResourceActualProperty> ResourceActualProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceActualProperty>("T2TModel.FK_ResourceActualProperty_ToResourceActual", "ResourceActualProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceActualProperty>("T2TModel.FK_ResourceActualProperty_ToResourceActual", "ResourceActualProperty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceActualProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceActualProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceActualProperty object.
        /// </summary>
        /// <param name="resourceActualID">Initial value of the ResourceActualID property.</param>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        public static ResourceActualProperty CreateResourceActualProperty(global::System.Int32 resourceActualID, global::System.Int32 propertyID)
        {
            ResourceActualProperty resourceActualProperty = new ResourceActualProperty();
            resourceActualProperty.ResourceActualID = resourceActualID;
            resourceActualProperty.PropertyID = propertyID;
            return resourceActualProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceActualID
        {
            get
            {
                return _ResourceActualID;
            }
            set
            {
                if (_ResourceActualID != value)
                {
                    OnResourceActualIDChanging(value);
                    ReportPropertyChanging("ResourceActualID");
                    _ResourceActualID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceActualID");
                    OnResourceActualIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceActualID;
        partial void OnResourceActualIDChanging(global::System.Int32 value);
        partial void OnResourceActualIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Single> _Value;
        partial void OnValueChanging(Nullable<global::System.Single> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValueUnitOfMeasure
        {
            get
            {
                return _ValueUnitOfMeasure;
            }
            set
            {
                OnValueUnitOfMeasureChanging(value);
                ReportPropertyChanging("ValueUnitOfMeasure");
                _ValueUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValueUnitOfMeasure");
                OnValueUnitOfMeasureChanged();
            }
        }
        private global::System.String _ValueUnitOfMeasure;
        partial void OnValueUnitOfMeasureChanging(global::System.String value);
        partial void OnValueUnitOfMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Single> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Single> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuantityUnitOfMeasure
        {
            get
            {
                return _QuantityUnitOfMeasure;
            }
            set
            {
                OnQuantityUnitOfMeasureChanging(value);
                ReportPropertyChanging("QuantityUnitOfMeasure");
                _QuantityUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuantityUnitOfMeasure");
                OnQuantityUnitOfMeasureChanged();
            }
        }
        private global::System.String _QuantityUnitOfMeasure;
        partial void OnQuantityUnitOfMeasureChanging(global::System.String value);
        partial void OnQuantityUnitOfMeasureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActualProperty_ToProperty", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceActualProperty_ToProperty", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceActualProperty_ToProperty", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceActualProperty_ToProperty", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("T2TModel.FK_ResourceActualProperty_ToProperty", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActualProperty_ToResourceActual", "ResourceActual")]
        public ResourceActual ResourceActual
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceActual>("T2TModel.FK_ResourceActualProperty_ToResourceActual", "ResourceActual").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceActual>("T2TModel.FK_ResourceActualProperty_ToResourceActual", "ResourceActual").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceActual> ResourceActualReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceActual>("T2TModel.FK_ResourceActualProperty_ToResourceActual", "ResourceActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceActual>("T2TModel.FK_ResourceActualProperty_ToResourceActual", "ResourceActual", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceCapability")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceCapability : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceCapability object.
        /// </summary>
        /// <param name="resourceCapabilityID">Initial value of the ResourceCapabilityID property.</param>
        public static ResourceCapability CreateResourceCapability(global::System.Int32 resourceCapabilityID)
        {
            ResourceCapability resourceCapability = new ResourceCapability();
            resourceCapability.ResourceCapabilityID = resourceCapabilityID;
            return resourceCapability;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceCapabilityID
        {
            get
            {
                return _ResourceCapabilityID;
            }
            set
            {
                if (_ResourceCapabilityID != value)
                {
                    OnResourceCapabilityIDChanging(value);
                    ReportPropertyChanging("ResourceCapabilityID");
                    _ResourceCapabilityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceCapabilityID");
                    OnResourceCapabilityIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceCapabilityID;
        partial void OnResourceCapabilityIDChanging(global::System.Int32 value);
        partial void OnResourceCapabilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkCapabilityID
        {
            get
            {
                return _WorkCapabilityID;
            }
            set
            {
                OnWorkCapabilityIDChanging(value);
                ReportPropertyChanging("WorkCapabilityID");
                _WorkCapabilityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkCapabilityID");
                OnWorkCapabilityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkCapabilityID;
        partial void OnWorkCapabilityIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkCapabilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkProcessSegmentID
        {
            get
            {
                return _WorkProcessSegmentID;
            }
            set
            {
                OnWorkProcessSegmentIDChanging(value);
                ReportPropertyChanging("WorkProcessSegmentID");
                _WorkProcessSegmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkProcessSegmentID");
                OnWorkProcessSegmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkProcessSegmentID;
        partial void OnWorkProcessSegmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkProcessSegmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceID;
        partial void OnResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResourceUseID
        {
            get
            {
                return _ResourceUseID;
            }
            set
            {
                OnResourceUseIDChanging(value);
                ReportPropertyChanging("ResourceUseID");
                _ResourceUseID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResourceUseID");
                OnResourceUseIDChanged();
            }
        }
        private global::System.String _ResourceUseID;
        partial void OnResourceUseIDChanging(global::System.String value);
        partial void OnResourceUseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceType
        {
            get
            {
                return _ResourceType;
            }
            set
            {
                OnResourceTypeChanging(value);
                ReportPropertyChanging("ResourceType");
                _ResourceType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceType");
                OnResourceTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceType;
        partial void OnResourceTypeChanging(Nullable<global::System.Int32> value);
        partial void OnResourceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CapabilityTypeID
        {
            get
            {
                return _CapabilityTypeID;
            }
            set
            {
                OnCapabilityTypeIDChanging(value);
                ReportPropertyChanging("CapabilityTypeID");
                _CapabilityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapabilityTypeID");
                OnCapabilityTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CapabilityTypeID;
        partial void OnCapabilityTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCapabilityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReasonID
        {
            get
            {
                return _ReasonID;
            }
            set
            {
                OnReasonIDChanging(value);
                ReportPropertyChanging("ReasonID");
                _ReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReasonID");
                OnReasonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReasonID;
        partial void OnReasonIDChanging(Nullable<global::System.Int32> value);
        partial void OnReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> ConfidenceFactor
        {
            get
            {
                return _ConfidenceFactor;
            }
            set
            {
                OnConfidenceFactorChanging(value);
                ReportPropertyChanging("ConfidenceFactor");
                _ConfidenceFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConfidenceFactor");
                OnConfidenceFactorChanged();
            }
        }
        private Nullable<global::System.Single> _ConfidenceFactor;
        partial void OnConfidenceFactorChanging(Nullable<global::System.Single> value);
        partial void OnConfidenceFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.String _Quantity;
        partial void OnQuantityChanging(global::System.String value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuantityUnitOfMeasure
        {
            get
            {
                return _QuantityUnitOfMeasure;
            }
            set
            {
                OnQuantityUnitOfMeasureChanging(value);
                ReportPropertyChanging("QuantityUnitOfMeasure");
                _QuantityUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuantityUnitOfMeasure");
                OnQuantityUnitOfMeasureChanged();
            }
        }
        private global::System.String _QuantityUnitOfMeasure;
        partial void OnQuantityUnitOfMeasureChanging(global::System.String value);
        partial void OnQuantityUnitOfMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssemblyTypeID
        {
            get
            {
                return _AssemblyTypeID;
            }
            set
            {
                OnAssemblyTypeIDChanging(value);
                ReportPropertyChanging("AssemblyTypeID");
                _AssemblyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssemblyTypeID");
                OnAssemblyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AssemblyTypeID;
        partial void OnAssemblyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnAssemblyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentResourceAssemblyID
        {
            get
            {
                return _ParentResourceAssemblyID;
            }
            set
            {
                OnParentResourceAssemblyIDChanging(value);
                ReportPropertyChanging("ParentResourceAssemblyID");
                _ParentResourceAssemblyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentResourceAssemblyID");
                OnParentResourceAssemblyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentResourceAssemblyID;
        partial void OnParentResourceAssemblyIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentResourceAssemblyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HierarchyScope
        {
            get
            {
                return _HierarchyScope;
            }
            set
            {
                OnHierarchyScopeChanging(value);
                ReportPropertyChanging("HierarchyScope");
                _HierarchyScope = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HierarchyScope");
                OnHierarchyScopeChanged();
            }
        }
        private global::System.String _HierarchyScope;
        partial void OnHierarchyScopeChanging(global::System.String value);
        partial void OnHierarchyScopeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapability_ToReason", "Reason")]
        public Reason Reason
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reason>("T2TModel.FK_ResourceCapability_ToReason", "Reason").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reason>("T2TModel.FK_ResourceCapability_ToReason", "Reason").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reason> ReasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reason>("T2TModel.FK_ResourceCapability_ToReason", "Reason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reason>("T2TModel.FK_ResourceCapability_ToReason", "Reason", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapability_ToResourceDefinition", "ResourceDefinition")]
        public ResourceDefinition ResourceDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceCapability_ToResourceDefinition", "ResourceDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceCapability_ToResourceDefinition", "ResourceDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceDefinition> ResourceDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceCapability_ToResourceDefinition", "ResourceDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceCapability_ToResourceDefinition", "ResourceDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapability_ToResourceLot", "ResourceLot")]
        public ResourceLot ResourceLot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceCapability_ToResourceLot", "ResourceLot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceCapability_ToResourceLot", "ResourceLot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceLot> ResourceLotReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceCapability_ToResourceLot", "ResourceLot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceLot>("T2TModel.FK_ResourceCapability_ToResourceLot", "ResourceLot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapability_ToWorkCapability", "WorkCapability")]
        public WorkCapability WorkCapability
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkCapability>("T2TModel.FK_ResourceCapability_ToWorkCapability", "WorkCapability").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkCapability>("T2TModel.FK_ResourceCapability_ToWorkCapability", "WorkCapability").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkCapability> WorkCapabilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkCapability>("T2TModel.FK_ResourceCapability_ToWorkCapability", "WorkCapability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkCapability>("T2TModel.FK_ResourceCapability_ToWorkCapability", "WorkCapability", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapability_ToWorkProcessSegment", "WorkProcessSegment")]
        public WorkProcessSegment WorkProcessSegment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkProcessSegment>("T2TModel.FK_ResourceCapability_ToWorkProcessSegment", "WorkProcessSegment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkProcessSegment>("T2TModel.FK_ResourceCapability_ToWorkProcessSegment", "WorkProcessSegment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkProcessSegment> WorkProcessSegmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkProcessSegment>("T2TModel.FK_ResourceCapability_ToWorkProcessSegment", "WorkProcessSegment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkProcessSegment>("T2TModel.FK_ResourceCapability_ToWorkProcessSegment", "WorkProcessSegment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapabilityProperty_ToResourceCapability", "ResourceCapabilityProperty")]
        public EntityCollection<ResourceCapabilityProperty> ResourceCapabilityProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceCapabilityProperty>("T2TModel.FK_ResourceCapabilityProperty_ToResourceCapability", "ResourceCapabilityProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceCapabilityProperty>("T2TModel.FK_ResourceCapabilityProperty_ToResourceCapability", "ResourceCapabilityProperty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceCapabilityProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceCapabilityProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceCapabilityProperty object.
        /// </summary>
        /// <param name="resourceCapabilityID">Initial value of the ResourceCapabilityID property.</param>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        public static ResourceCapabilityProperty CreateResourceCapabilityProperty(global::System.Int32 resourceCapabilityID, global::System.Int32 propertyID)
        {
            ResourceCapabilityProperty resourceCapabilityProperty = new ResourceCapabilityProperty();
            resourceCapabilityProperty.ResourceCapabilityID = resourceCapabilityID;
            resourceCapabilityProperty.PropertyID = propertyID;
            return resourceCapabilityProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceCapabilityID
        {
            get
            {
                return _ResourceCapabilityID;
            }
            set
            {
                if (_ResourceCapabilityID != value)
                {
                    OnResourceCapabilityIDChanging(value);
                    ReportPropertyChanging("ResourceCapabilityID");
                    _ResourceCapabilityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceCapabilityID");
                    OnResourceCapabilityIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceCapabilityID;
        partial void OnResourceCapabilityIDChanging(global::System.Int32 value);
        partial void OnResourceCapabilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValueUnitOfMeasure
        {
            get
            {
                return _ValueUnitOfMeasure;
            }
            set
            {
                OnValueUnitOfMeasureChanging(value);
                ReportPropertyChanging("ValueUnitOfMeasure");
                _ValueUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValueUnitOfMeasure");
                OnValueUnitOfMeasureChanged();
            }
        }
        private global::System.String _ValueUnitOfMeasure;
        partial void OnValueUnitOfMeasureChanging(global::System.String value);
        partial void OnValueUnitOfMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.String _Quantity;
        partial void OnQuantityChanging(global::System.String value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuantityUnitOfMeasure
        {
            get
            {
                return _QuantityUnitOfMeasure;
            }
            set
            {
                OnQuantityUnitOfMeasureChanging(value);
                ReportPropertyChanging("QuantityUnitOfMeasure");
                _QuantityUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuantityUnitOfMeasure");
                OnQuantityUnitOfMeasureChanged();
            }
        }
        private global::System.String _QuantityUnitOfMeasure;
        partial void OnQuantityUnitOfMeasureChanging(global::System.String value);
        partial void OnQuantityUnitOfMeasureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapabilityProperty_ToProperty", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceCapabilityProperty_ToProperty", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceCapabilityProperty_ToProperty", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceCapabilityProperty_ToProperty", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("T2TModel.FK_ResourceCapabilityProperty_ToProperty", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapabilityProperty_ToResourceCapability", "ResourceCapability")]
        public ResourceCapability ResourceCapability
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceCapability>("T2TModel.FK_ResourceCapabilityProperty_ToResourceCapability", "ResourceCapability").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceCapability>("T2TModel.FK_ResourceCapabilityProperty_ToResourceCapability", "ResourceCapability").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceCapability> ResourceCapabilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceCapability>("T2TModel.FK_ResourceCapabilityProperty_ToResourceCapability", "ResourceCapability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceCapability>("T2TModel.FK_ResourceCapabilityProperty_ToResourceCapability", "ResourceCapability", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceClass object.
        /// </summary>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        public static ResourceClass CreateResourceClass(global::System.Int32 resourceClassID)
        {
            ResourceClass resourceClass = new ResourceClass();
            resourceClass.ResourceClassID = resourceClassID;
            return resourceClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceClassID
        {
            get
            {
                return _ResourceClassID;
            }
            set
            {
                if (_ResourceClassID != value)
                {
                    OnResourceClassIDChanging(value);
                    ReportPropertyChanging("ResourceClassID");
                    _ResourceClassID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceClassID");
                    OnResourceClassIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceClassID;
        partial void OnResourceClassIDChanging(global::System.Int32 value);
        partial void OnResourceClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceType
        {
            get
            {
                return _ResourceType;
            }
            set
            {
                OnResourceTypeChanging(value);
                ReportPropertyChanging("ResourceType");
                _ResourceType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceType");
                OnResourceTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceType;
        partial void OnResourceTypeChanging(Nullable<global::System.Int32> value);
        partial void OnResourceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceLevelID
        {
            get
            {
                return _ResourceLevelID;
            }
            set
            {
                OnResourceLevelIDChanging(value);
                ReportPropertyChanging("ResourceLevelID");
                _ResourceLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceLevelID");
                OnResourceLevelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceLevelID;
        partial void OnResourceLevelIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelID
        {
            get
            {
                return _LevelID;
            }
            set
            {
                OnLevelIDChanging(value);
                ReportPropertyChanging("LevelID");
                _LevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelID");
                OnLevelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelID;
        partial void OnLevelIDChanging(Nullable<global::System.Int32> value);
        partial void OnLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentClassID
        {
            get
            {
                return _ParentClassID;
            }
            set
            {
                OnParentClassIDChanging(value);
                ReportPropertyChanging("ParentClassID");
                _ParentClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentClassID");
                OnParentClassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentClassID;
        partial void OnParentClassIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentClassIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceDefinition_ToResourceClass", "ResourceDefinition")]
        public EntityCollection<ResourceDefinition> ResourceDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceDefinition>("T2TModel.FK_ResourceDefinition_ToResourceClass", "ResourceDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceDefinition>("T2TModel.FK_ResourceDefinition_ToResourceClass", "ResourceDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceProperty_ToResourceClass", "ResourceProperty")]
        public EntityCollection<ResourceProperty> ResourceProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceProperty>("T2TModel.FK_ResourceProperty_ToResourceClass", "ResourceProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceProperty>("T2TModel.FK_ResourceProperty_ToResourceClass", "ResourceProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirement_ToResourceClass", "ResourceRequirement")]
        public EntityCollection<ResourceRequirement> ResourceRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceRequirement>("T2TModel.FK_ResourceRequirement_ToResourceClass", "ResourceRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceRequirement>("T2TModel.FK_ResourceRequirement_ToResourceClass", "ResourceRequirement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecification_ToResourceClass", "ResourceSpecification")]
        public EntityCollection<ResourceSpecification> ResourceSpecifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSpecification>("T2TModel.FK_ResourceSpecification_ToResourceClass", "ResourceSpecification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSpecification>("T2TModel.FK_ResourceSpecification_ToResourceClass", "ResourceSpecification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceClass_ToResourceClass", "ResourceClass")]
        public ResourceClass ParentClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceClass_ToResourceClass", "ResourceClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceClass_ToResourceClass", "ResourceClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceClass> ParentClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceClass_ToResourceClass", "ResourceClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceClass>("T2TModel.FK_ResourceClass_ToResourceClass", "ResourceClass", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Material))]
    [KnownTypeAttribute(typeof(Equipment))]
    [KnownTypeAttribute(typeof(Personnel))]
    [KnownTypeAttribute(typeof(PhysicalAsset))]
    public abstract partial class ResourceDefinition : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceDefinitionID
        {
            get
            {
                return _ResourceDefinitionID;
            }
            set
            {
                if (_ResourceDefinitionID != value)
                {
                    OnResourceDefinitionIDChanging(value);
                    ReportPropertyChanging("ResourceDefinitionID");
                    _ResourceDefinitionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceDefinitionID");
                    OnResourceDefinitionIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceDefinitionID;
        partial void OnResourceDefinitionIDChanging(global::System.Int32 value);
        partial void OnResourceDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceClassID
        {
            get
            {
                return _ResourceClassID;
            }
            set
            {
                OnResourceClassIDChanging(value);
                ReportPropertyChanging("ResourceClassID");
                _ResourceClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceClassID");
                OnResourceClassIDChanged();
            }
        }
        private global::System.Int32 _ResourceClassID;
        partial void OnResourceClassIDChanging(global::System.Int32 value);
        partial void OnResourceClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentResourceDefinitionID
        {
            get
            {
                return _ParentResourceDefinitionID;
            }
            set
            {
                OnParentResourceDefinitionIDChanging(value);
                ReportPropertyChanging("ParentResourceDefinitionID");
                _ParentResourceDefinitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentResourceDefinitionID");
                OnParentResourceDefinitionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentResourceDefinitionID;
        partial void OnParentResourceDefinitionIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentResourceDefinitionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceDefinition_ToResourceClass", "ResourceClass")]
        public ResourceClass ResourceClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceDefinition_ToResourceClass", "ResourceClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceDefinition_ToResourceClass", "ResourceClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceClass> ResourceClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceDefinition_ToResourceClass", "ResourceClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceClass>("T2TModel.FK_ResourceDefinition_ToResourceClass", "ResourceClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActual_ToResourceDefinition", "ResourceActual")]
        public EntityCollection<ResourceActual> ResourceActuals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceActual>("T2TModel.FK_ResourceActual_ToResourceDefinition", "ResourceActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceActual>("T2TModel.FK_ResourceActual_ToResourceDefinition", "ResourceActual", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapability_ToResourceDefinition", "ResourceCapability")]
        public EntityCollection<ResourceCapability> ResourceCapabilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceCapability>("T2TModel.FK_ResourceCapability_ToResourceDefinition", "ResourceCapability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceCapability>("T2TModel.FK_ResourceCapability_ToResourceDefinition", "ResourceCapability", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceLot_ToResourceDefinition", "ResourceLot")]
        public EntityCollection<ResourceLot> ResourceLots
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceLot>("T2TModel.FK_ResourceLot_ToResourceDefinition", "ResourceLot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceLot>("T2TModel.FK_ResourceLot_ToResourceDefinition", "ResourceLot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceProperty_ToResourceDefinition", "ResourceProperty")]
        public EntityCollection<ResourceProperty> ResourceProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceProperty>("T2TModel.FK_ResourceProperty_ToResourceDefinition", "ResourceProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceProperty>("T2TModel.FK_ResourceProperty_ToResourceDefinition", "ResourceProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirement_ToResourceDefintion", "ResourceRequirement")]
        public EntityCollection<ResourceRequirement> ResourceRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceRequirement>("T2TModel.FK_ResourceRequirement_ToResourceDefintion", "ResourceRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceRequirement>("T2TModel.FK_ResourceRequirement_ToResourceDefintion", "ResourceRequirement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecification_ToResourceDefinition", "ResourceSpecification")]
        public EntityCollection<ResourceSpecification> ResourceSpecifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSpecification>("T2TModel.FK_ResourceSpecification_ToResourceDefinition", "ResourceSpecification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSpecification>("T2TModel.FK_ResourceSpecification_ToResourceDefinition", "ResourceSpecification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourcePhoto_ToResourceDefinition", "ResourcePhoto")]
        public EntityCollection<ResourcePhoto> ResourcePhotos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourcePhoto>("T2TModel.FK_ResourcePhoto_ToResourceDefinition", "ResourcePhoto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourcePhoto>("T2TModel.FK_ResourcePhoto_ToResourceDefinition", "ResourcePhoto", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceDocument object.
        /// </summary>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        public static ResourceDocument CreateResourceDocument(global::System.Int32 resourceID)
        {
            ResourceDocument resourceDocument = new ResourceDocument();
            resourceDocument.ResourceID = resourceID;
            return resourceDocument;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                if (_ResourceID != value)
                {
                    OnResourceIDChanging(value);
                    ReportPropertyChanging("ResourceID");
                    _ResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceID");
                    OnResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceInventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceInventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceInventory object.
        /// </summary>
        /// <param name="resourceInventoryID">Initial value of the ResourceInventoryID property.</param>
        public static ResourceInventory CreateResourceInventory(global::System.Int32 resourceInventoryID)
        {
            ResourceInventory resourceInventory = new ResourceInventory();
            resourceInventory.ResourceInventoryID = resourceInventoryID;
            return resourceInventory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceInventoryID
        {
            get
            {
                return _ResourceInventoryID;
            }
            set
            {
                if (_ResourceInventoryID != value)
                {
                    OnResourceInventoryIDChanging(value);
                    ReportPropertyChanging("ResourceInventoryID");
                    _ResourceInventoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceInventoryID");
                    OnResourceInventoryIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceInventoryID;
        partial void OnResourceInventoryIDChanging(global::System.Int32 value);
        partial void OnResourceInventoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceDefinitionID
        {
            get
            {
                return _ResourceDefinitionID;
            }
            set
            {
                OnResourceDefinitionIDChanging(value);
                ReportPropertyChanging("ResourceDefinitionID");
                _ResourceDefinitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceDefinitionID");
                OnResourceDefinitionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceDefinitionID;
        partial void OnResourceDefinitionIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitOfMeasure
        {
            get
            {
                return _UnitOfMeasure;
            }
            set
            {
                OnUnitOfMeasureChanging(value);
                ReportPropertyChanging("UnitOfMeasure");
                _UnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitOfMeasure");
                OnUnitOfMeasureChanged();
            }
        }
        private global::System.String _UnitOfMeasure;
        partial void OnUnitOfMeasureChanging(global::System.String value);
        partial void OnUnitOfMeasureChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceLevel object.
        /// </summary>
        /// <param name="resourceLevelID">Initial value of the ResourceLevelID property.</param>
        public static ResourceLevel CreateResourceLevel(global::System.Int32 resourceLevelID)
        {
            ResourceLevel resourceLevel = new ResourceLevel();
            resourceLevel.ResourceLevelID = resourceLevelID;
            return resourceLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceLevelID
        {
            get
            {
                return _ResourceLevelID;
            }
            set
            {
                if (_ResourceLevelID != value)
                {
                    OnResourceLevelIDChanging(value);
                    ReportPropertyChanging("ResourceLevelID");
                    _ResourceLevelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceLevelID");
                    OnResourceLevelIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceLevelID;
        partial void OnResourceLevelIDChanging(global::System.Int32 value);
        partial void OnResourceLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceLot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceLot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceLot object.
        /// </summary>
        /// <param name="resourceLotID">Initial value of the ResourceLotID property.</param>
        public static ResourceLot CreateResourceLot(global::System.Int32 resourceLotID)
        {
            ResourceLot resourceLot = new ResourceLot();
            resourceLot.ResourceLotID = resourceLotID;
            return resourceLot;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceLotID
        {
            get
            {
                return _ResourceLotID;
            }
            set
            {
                if (_ResourceLotID != value)
                {
                    OnResourceLotIDChanging(value);
                    ReportPropertyChanging("ResourceLotID");
                    _ResourceLotID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceLotID");
                    OnResourceLotIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceLotID;
        partial void OnResourceLotIDChanging(global::System.Int32 value);
        partial void OnResourceLotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Label
        {
            get
            {
                return _Label;
            }
            set
            {
                OnLabelChanging(value);
                ReportPropertyChanging("Label");
                _Label = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Label");
                OnLabelChanged();
            }
        }
        private global::System.String _Label;
        partial void OnLabelChanging(global::System.String value);
        partial void OnLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceDefinitionID
        {
            get
            {
                return _ResourceDefinitionID;
            }
            set
            {
                OnResourceDefinitionIDChanging(value);
                ReportPropertyChanging("ResourceDefinitionID");
                _ResourceDefinitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceDefinitionID");
                OnResourceDefinitionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceDefinitionID;
        partial void OnResourceDefinitionIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceLotStatusID
        {
            get
            {
                return _ResourceLotStatusID;
            }
            set
            {
                OnResourceLotStatusIDChanging(value);
                ReportPropertyChanging("ResourceLotStatusID");
                _ResourceLotStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceLotStatusID");
                OnResourceLotStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceLotStatusID;
        partial void OnResourceLotStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceLotStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Single> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Single> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuantityUnitOfMeasure
        {
            get
            {
                return _QuantityUnitOfMeasure;
            }
            set
            {
                OnQuantityUnitOfMeasureChanging(value);
                ReportPropertyChanging("QuantityUnitOfMeasure");
                _QuantityUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuantityUnitOfMeasure");
                OnQuantityUnitOfMeasureChanged();
            }
        }
        private global::System.String _QuantityUnitOfMeasure;
        partial void OnQuantityUnitOfMeasureChanging(global::System.String value);
        partial void OnQuantityUnitOfMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastChangeDate
        {
            get
            {
                return _LastChangeDate;
            }
            set
            {
                OnLastChangeDateChanging(value);
                ReportPropertyChanging("LastChangeDate");
                _LastChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChangeDate");
                OnLastChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastChangeDate;
        partial void OnLastChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ValidFrom
        {
            get
            {
                return _ValidFrom;
            }
            set
            {
                OnValidFromChanging(value);
                ReportPropertyChanging("ValidFrom");
                _ValidFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidFrom");
                OnValidFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _ValidFrom;
        partial void OnValidFromChanging(Nullable<global::System.DateTime> value);
        partial void OnValidFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ValidTo
        {
            get
            {
                return _ValidTo;
            }
            set
            {
                OnValidToChanging(value);
                ReportPropertyChanging("ValidTo");
                _ValidTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidTo");
                OnValidToChanged();
            }
        }
        private Nullable<global::System.DateTime> _ValidTo;
        partial void OnValidToChanging(Nullable<global::System.DateTime> value);
        partial void OnValidToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LocationID;
        partial void OnLocationIDChanging(Nullable<global::System.Int32> value);
        partial void OnLocationIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActual_ToResourceLot", "ResourceActual")]
        public EntityCollection<ResourceActual> ResourceActuals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceActual>("T2TModel.FK_ResourceActual_ToResourceLot", "ResourceActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceActual>("T2TModel.FK_ResourceActual_ToResourceLot", "ResourceActual", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapability_ToResourceLot", "ResourceCapability")]
        public EntityCollection<ResourceCapability> ResourceCapabilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceCapability>("T2TModel.FK_ResourceCapability_ToResourceLot", "ResourceCapability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceCapability>("T2TModel.FK_ResourceCapability_ToResourceLot", "ResourceCapability", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceLot_ToResourceDefinition", "ResourceDefinition")]
        public ResourceDefinition ResourceDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceLot_ToResourceDefinition", "ResourceDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceLot_ToResourceDefinition", "ResourceDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceDefinition> ResourceDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceLot_ToResourceDefinition", "ResourceDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceLot_ToResourceDefinition", "ResourceDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceLot_ToResourceLotStatus", "ResourceLotStatus")]
        public ResourceLotStatus ResourceLotStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLotStatus>("T2TModel.FK_ResourceLot_ToResourceLotStatus", "ResourceLotStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLotStatus>("T2TModel.FK_ResourceLot_ToResourceLotStatus", "ResourceLotStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceLotStatus> ResourceLotStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLotStatus>("T2TModel.FK_ResourceLot_ToResourceLotStatus", "ResourceLotStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceLotStatus>("T2TModel.FK_ResourceLot_ToResourceLotStatus", "ResourceLotStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceLotTracking_ToResourceLot", "ResourceLotTracking")]
        public EntityCollection<ResourceLotTracking> ResourceLotTrackings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceLotTracking>("T2TModel.FK_ResourceLotTracking_ToResourceLot", "ResourceLotTracking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceLotTracking>("T2TModel.FK_ResourceLotTracking_ToResourceLot", "ResourceLotTracking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceProperty_ToResourceLot", "ResourceProperty")]
        public EntityCollection<ResourceProperty> ResourceProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceProperty>("T2TModel.FK_ResourceProperty_ToResourceLot", "ResourceProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceProperty>("T2TModel.FK_ResourceProperty_ToResourceLot", "ResourceProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirement_ToResourceLot", "ResourceRequirement")]
        public EntityCollection<ResourceRequirement> ResourceRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceRequirement>("T2TModel.FK_ResourceRequirement_ToResourceLot", "ResourceRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceRequirement>("T2TModel.FK_ResourceRequirement_ToResourceLot", "ResourceRequirement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecification_ToResourceLot", "ResourceSpecification")]
        public EntityCollection<ResourceSpecification> ResourceSpecifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSpecification>("T2TModel.FK_ResourceSpecification_ToResourceLot", "ResourceSpecification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSpecification>("T2TModel.FK_ResourceSpecification_ToResourceLot", "ResourceSpecification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceLotStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceLotStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceLotStatus object.
        /// </summary>
        /// <param name="resourceLotStatusID">Initial value of the ResourceLotStatusID property.</param>
        public static ResourceLotStatus CreateResourceLotStatus(global::System.Int32 resourceLotStatusID)
        {
            ResourceLotStatus resourceLotStatus = new ResourceLotStatus();
            resourceLotStatus.ResourceLotStatusID = resourceLotStatusID;
            return resourceLotStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceLotStatusID
        {
            get
            {
                return _ResourceLotStatusID;
            }
            set
            {
                if (_ResourceLotStatusID != value)
                {
                    OnResourceLotStatusIDChanging(value);
                    ReportPropertyChanging("ResourceLotStatusID");
                    _ResourceLotStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceLotStatusID");
                    OnResourceLotStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceLotStatusID;
        partial void OnResourceLotStatusIDChanging(global::System.Int32 value);
        partial void OnResourceLotStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceLot_ToResourceLotStatus", "ResourceLot")]
        public EntityCollection<ResourceLot> ResourceLots
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceLot>("T2TModel.FK_ResourceLot_ToResourceLotStatus", "ResourceLot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceLot>("T2TModel.FK_ResourceLot_ToResourceLotStatus", "ResourceLot", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceLotTracking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceLotTracking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceLotTracking object.
        /// </summary>
        /// <param name="resourceLotTrackingID">Initial value of the ResourceLotTrackingID property.</param>
        public static ResourceLotTracking CreateResourceLotTracking(global::System.Int32 resourceLotTrackingID)
        {
            ResourceLotTracking resourceLotTracking = new ResourceLotTracking();
            resourceLotTracking.ResourceLotTrackingID = resourceLotTrackingID;
            return resourceLotTracking;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceLotTrackingID
        {
            get
            {
                return _ResourceLotTrackingID;
            }
            set
            {
                if (_ResourceLotTrackingID != value)
                {
                    OnResourceLotTrackingIDChanging(value);
                    ReportPropertyChanging("ResourceLotTrackingID");
                    _ResourceLotTrackingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceLotTrackingID");
                    OnResourceLotTrackingIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceLotTrackingID;
        partial void OnResourceLotTrackingIDChanging(global::System.Int32 value);
        partial void OnResourceLotTrackingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceLotID
        {
            get
            {
                return _ResourceLotID;
            }
            set
            {
                OnResourceLotIDChanging(value);
                ReportPropertyChanging("ResourceLotID");
                _ResourceLotID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceLotID");
                OnResourceLotIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceLotID;
        partial void OnResourceLotIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceLotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackingDate
        {
            get
            {
                return _TrackingDate;
            }
            set
            {
                OnTrackingDateChanging(value);
                ReportPropertyChanging("TrackingDate");
                _TrackingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackingDate");
                OnTrackingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackingDate;
        partial void OnTrackingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EquipmentID
        {
            get
            {
                return _EquipmentID;
            }
            set
            {
                OnEquipmentIDChanging(value);
                ReportPropertyChanging("EquipmentID");
                _EquipmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentID");
                OnEquipmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EquipmentID;
        partial void OnEquipmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnEquipmentIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceLotTracking_ToResourceLot", "ResourceLot")]
        public ResourceLot ResourceLot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceLotTracking_ToResourceLot", "ResourceLot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceLotTracking_ToResourceLot", "ResourceLot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceLot> ResourceLotReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceLotTracking_ToResourceLot", "ResourceLot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceLot>("T2TModel.FK_ResourceLotTracking_ToResourceLot", "ResourceLot", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourcePhoto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourcePhoto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourcePhoto object.
        /// </summary>
        /// <param name="photoID">Initial value of the PhotoID property.</param>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        public static ResourcePhoto CreateResourcePhoto(global::System.Int32 photoID, global::System.Int32 resourceID)
        {
            ResourcePhoto resourcePhoto = new ResourcePhoto();
            resourcePhoto.PhotoID = photoID;
            resourcePhoto.ResourceID = resourceID;
            return resourcePhoto;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhotoID
        {
            get
            {
                return _PhotoID;
            }
            set
            {
                if (_PhotoID != value)
                {
                    OnPhotoIDChanging(value);
                    ReportPropertyChanging("PhotoID");
                    _PhotoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhotoID");
                    OnPhotoIDChanged();
                }
            }
        }
        private global::System.Int32 _PhotoID;
        partial void OnPhotoIDChanging(global::System.Int32 value);
        partial void OnPhotoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                if (_ResourceID != value)
                {
                    OnResourceIDChanging(value);
                    ReportPropertyChanging("ResourceID");
                    _ResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceID");
                    OnResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Primary
        {
            get
            {
                return _Primary;
            }
            set
            {
                OnPrimaryChanging(value);
                ReportPropertyChanging("Primary");
                _Primary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Primary");
                OnPrimaryChanged();
            }
        }
        private Nullable<global::System.Boolean> _Primary;
        partial void OnPrimaryChanging(Nullable<global::System.Boolean> value);
        partial void OnPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourcePhoto_ToPhoto", "Photo")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("T2TModel.FK_ResourcePhoto_ToPhoto", "Photo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("T2TModel.FK_ResourcePhoto_ToPhoto", "Photo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("T2TModel.FK_ResourcePhoto_ToPhoto", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("T2TModel.FK_ResourcePhoto_ToPhoto", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourcePhoto_ToResourceDefinition", "ResourceDefinition")]
        public ResourceDefinition ResourceDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourcePhoto_ToResourceDefinition", "ResourceDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourcePhoto_ToResourceDefinition", "ResourceDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceDefinition> ResourceDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourcePhoto_ToResourceDefinition", "ResourceDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceDefinition>("T2TModel.FK_ResourcePhoto_ToResourceDefinition", "ResourceDefinition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceProperty object.
        /// </summary>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        public static ResourceProperty CreateResourceProperty(global::System.Int32 propertyID, global::System.Int32 resourceID)
        {
            ResourceProperty resourceProperty = new ResourceProperty();
            resourceProperty.PropertyID = propertyID;
            resourceProperty.ResourceID = resourceID;
            return resourceProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                if (_ResourceID != value)
                {
                    OnResourceIDChanging(value);
                    ReportPropertyChanging("ResourceID");
                    _ResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceID");
                    OnResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResourceType
        {
            get
            {
                return _ResourceType;
            }
            set
            {
                OnResourceTypeChanging(value);
                ReportPropertyChanging("ResourceType");
                _ResourceType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResourceType");
                OnResourceTypeChanged();
            }
        }
        private global::System.String _ResourceType;
        partial void OnResourceTypeChanging(global::System.String value);
        partial void OnResourceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NominalValue
        {
            get
            {
                return _NominalValue;
            }
            set
            {
                OnNominalValueChanging(value);
                ReportPropertyChanging("NominalValue");
                _NominalValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NominalValue");
                OnNominalValueChanged();
            }
        }
        private global::System.String _NominalValue;
        partial void OnNominalValueChanging(global::System.String value);
        partial void OnNominalValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitOfMeasure
        {
            get
            {
                return _UnitOfMeasure;
            }
            set
            {
                OnUnitOfMeasureChanging(value);
                ReportPropertyChanging("UnitOfMeasure");
                _UnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitOfMeasure");
                OnUnitOfMeasureChanged();
            }
        }
        private global::System.String _UnitOfMeasure;
        partial void OnUnitOfMeasureChanging(global::System.String value);
        partial void OnUnitOfMeasureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceProperty_ToProperty", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceProperty_ToProperty", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceProperty_ToProperty", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceProperty_ToProperty", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("T2TModel.FK_ResourceProperty_ToProperty", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceProperty_ToResourceClass", "ResourceClass")]
        public ResourceClass ResourceClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceProperty_ToResourceClass", "ResourceClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceProperty_ToResourceClass", "ResourceClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceClass> ResourceClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceProperty_ToResourceClass", "ResourceClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceClass>("T2TModel.FK_ResourceProperty_ToResourceClass", "ResourceClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceProperty_ToResourceDefinition", "ResourceDefinition")]
        public ResourceDefinition ResourceDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceProperty_ToResourceDefinition", "ResourceDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceProperty_ToResourceDefinition", "ResourceDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceDefinition> ResourceDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceProperty_ToResourceDefinition", "ResourceDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceProperty_ToResourceDefinition", "ResourceDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceProperty_ToResourceLot", "ResourceLot")]
        public ResourceLot ResourceLot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceProperty_ToResourceLot", "ResourceLot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceProperty_ToResourceLot", "ResourceLot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceLot> ResourceLotReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceProperty_ToResourceLot", "ResourceLot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceLot>("T2TModel.FK_ResourceProperty_ToResourceLot", "ResourceLot", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceRequirement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceRequirement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceRequirement object.
        /// </summary>
        /// <param name="resourceRequirementID">Initial value of the ResourceRequirementID property.</param>
        public static ResourceRequirement CreateResourceRequirement(global::System.Int32 resourceRequirementID)
        {
            ResourceRequirement resourceRequirement = new ResourceRequirement();
            resourceRequirement.ResourceRequirementID = resourceRequirementID;
            return resourceRequirement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceRequirementID
        {
            get
            {
                return _ResourceRequirementID;
            }
            set
            {
                if (_ResourceRequirementID != value)
                {
                    OnResourceRequirementIDChanging(value);
                    ReportPropertyChanging("ResourceRequirementID");
                    _ResourceRequirementID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceRequirementID");
                    OnResourceRequirementIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceRequirementID;
        partial void OnResourceRequirementIDChanging(global::System.Int32 value);
        partial void OnResourceRequirementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceID;
        partial void OnResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceTypeID
        {
            get
            {
                return _ResourceTypeID;
            }
            set
            {
                OnResourceTypeIDChanging(value);
                ReportPropertyChanging("ResourceTypeID");
                _ResourceTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceTypeID");
                OnResourceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceTypeID;
        partial void OnResourceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkRequestID
        {
            get
            {
                return _WorkRequestID;
            }
            set
            {
                OnWorkRequestIDChanging(value);
                ReportPropertyChanging("WorkRequestID");
                _WorkRequestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkRequestID");
                OnWorkRequestIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkRequestID;
        partial void OnWorkRequestIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceUse
        {
            get
            {
                return _ResourceUse;
            }
            set
            {
                OnResourceUseChanging(value);
                ReportPropertyChanging("ResourceUse");
                _ResourceUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceUse");
                OnResourceUseChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceUse;
        partial void OnResourceUseChanging(Nullable<global::System.Int32> value);
        partial void OnResourceUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Single> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Single> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuantityUnitOfMeasure
        {
            get
            {
                return _QuantityUnitOfMeasure;
            }
            set
            {
                OnQuantityUnitOfMeasureChanging(value);
                ReportPropertyChanging("QuantityUnitOfMeasure");
                _QuantityUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuantityUnitOfMeasure");
                OnQuantityUnitOfMeasureChanged();
            }
        }
        private global::System.String _QuantityUnitOfMeasure;
        partial void OnQuantityUnitOfMeasureChanging(global::System.String value);
        partial void OnQuantityUnitOfMeasureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirement_ToResourceClass", "ResourceClass")]
        public ResourceClass ResourceClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceRequirement_ToResourceClass", "ResourceClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceRequirement_ToResourceClass", "ResourceClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceClass> ResourceClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceRequirement_ToResourceClass", "ResourceClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceClass>("T2TModel.FK_ResourceRequirement_ToResourceClass", "ResourceClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirement_ToResourceDefintion", "ResourceDefinition")]
        public ResourceDefinition ResourceDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceRequirement_ToResourceDefintion", "ResourceDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceRequirement_ToResourceDefintion", "ResourceDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceDefinition> ResourceDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceRequirement_ToResourceDefintion", "ResourceDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceRequirement_ToResourceDefintion", "ResourceDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirement_ToResourceLot", "ResourceLot")]
        public ResourceLot ResourceLot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceRequirement_ToResourceLot", "ResourceLot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceRequirement_ToResourceLot", "ResourceLot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceLot> ResourceLotReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceRequirement_ToResourceLot", "ResourceLot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceLot>("T2TModel.FK_ResourceRequirement_ToResourceLot", "ResourceLot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirement_ToResourceType", "ResourceType")]
        public ResourceType ResourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("T2TModel.FK_ResourceRequirement_ToResourceType", "ResourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("T2TModel.FK_ResourceRequirement_ToResourceType", "ResourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceType> ResourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("T2TModel.FK_ResourceRequirement_ToResourceType", "ResourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceType>("T2TModel.FK_ResourceRequirement_ToResourceType", "ResourceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirementProperty_ToResourceRequirement1", "ResourceRequirementProperty")]
        public EntityCollection<ResourceRequirementProperty> ResourceRequirementProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceRequirementProperty>("T2TModel.FK_ResourceRequirementProperty_ToResourceRequirement1", "ResourceRequirementProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceRequirementProperty>("T2TModel.FK_ResourceRequirementProperty_ToResourceRequirement1", "ResourceRequirementProperty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceRequirementProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceRequirementProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceRequirementProperty object.
        /// </summary>
        /// <param name="resourceRequirementID">Initial value of the ResourceRequirementID property.</param>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        public static ResourceRequirementProperty CreateResourceRequirementProperty(global::System.Int32 resourceRequirementID, global::System.Int32 propertyID)
        {
            ResourceRequirementProperty resourceRequirementProperty = new ResourceRequirementProperty();
            resourceRequirementProperty.ResourceRequirementID = resourceRequirementID;
            resourceRequirementProperty.PropertyID = propertyID;
            return resourceRequirementProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceRequirementID
        {
            get
            {
                return _ResourceRequirementID;
            }
            set
            {
                if (_ResourceRequirementID != value)
                {
                    OnResourceRequirementIDChanging(value);
                    ReportPropertyChanging("ResourceRequirementID");
                    _ResourceRequirementID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceRequirementID");
                    OnResourceRequirementIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceRequirementID;
        partial void OnResourceRequirementIDChanging(global::System.Int32 value);
        partial void OnResourceRequirementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Single> _Value;
        partial void OnValueChanging(Nullable<global::System.Single> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValueUnitOfMeasure
        {
            get
            {
                return _ValueUnitOfMeasure;
            }
            set
            {
                OnValueUnitOfMeasureChanging(value);
                ReportPropertyChanging("ValueUnitOfMeasure");
                _ValueUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValueUnitOfMeasure");
                OnValueUnitOfMeasureChanged();
            }
        }
        private global::System.String _ValueUnitOfMeasure;
        partial void OnValueUnitOfMeasureChanging(global::System.String value);
        partial void OnValueUnitOfMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Single> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Single> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuantityUnitOfMeasure
        {
            get
            {
                return _QuantityUnitOfMeasure;
            }
            set
            {
                OnQuantityUnitOfMeasureChanging(value);
                ReportPropertyChanging("QuantityUnitOfMeasure");
                _QuantityUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuantityUnitOfMeasure");
                OnQuantityUnitOfMeasureChanged();
            }
        }
        private global::System.String _QuantityUnitOfMeasure;
        partial void OnQuantityUnitOfMeasureChanging(global::System.String value);
        partial void OnQuantityUnitOfMeasureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirementProperty_ToProperty", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceRequirementProperty_ToProperty", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceRequirementProperty_ToProperty", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceRequirementProperty_ToProperty", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("T2TModel.FK_ResourceRequirementProperty_ToProperty", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirementProperty_ToResourceRequirement1", "ResourceRequirement")]
        public ResourceRequirement ResourceRequirement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceRequirement>("T2TModel.FK_ResourceRequirementProperty_ToResourceRequirement1", "ResourceRequirement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceRequirement>("T2TModel.FK_ResourceRequirementProperty_ToResourceRequirement1", "ResourceRequirement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceRequirement> ResourceRequirementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceRequirement>("T2TModel.FK_ResourceRequirementProperty_ToResourceRequirement1", "ResourceRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceRequirement>("T2TModel.FK_ResourceRequirementProperty_ToResourceRequirement1", "ResourceRequirement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceReview")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceReview : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceReview object.
        /// </summary>
        /// <param name="resourceReviewID">Initial value of the ResourceReviewID property.</param>
        public static ResourceReview CreateResourceReview(global::System.Int32 resourceReviewID)
        {
            ResourceReview resourceReview = new ResourceReview();
            resourceReview.ResourceReviewID = resourceReviewID;
            return resourceReview;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceReviewID
        {
            get
            {
                return _ResourceReviewID;
            }
            set
            {
                if (_ResourceReviewID != value)
                {
                    OnResourceReviewIDChanging(value);
                    ReportPropertyChanging("ResourceReviewID");
                    _ResourceReviewID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceReviewID");
                    OnResourceReviewIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceReviewID;
        partial void OnResourceReviewIDChanging(global::System.Int32 value);
        partial void OnResourceReviewIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceID;
        partial void OnResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReviewerName
        {
            get
            {
                return _ReviewerName;
            }
            set
            {
                OnReviewerNameChanging(value);
                ReportPropertyChanging("ReviewerName");
                _ReviewerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReviewerName");
                OnReviewerNameChanged();
            }
        }
        private global::System.String _ReviewerName;
        partial void OnReviewerNameChanging(global::System.String value);
        partial void OnReviewerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReviewDate
        {
            get
            {
                return _ReviewDate;
            }
            set
            {
                OnReviewDateChanging(value);
                ReportPropertyChanging("ReviewDate");
                _ReviewDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReviewDate");
                OnReviewDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReviewDate;
        partial void OnReviewDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReviewDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceSpecification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceSpecification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceSpecification object.
        /// </summary>
        /// <param name="resourceSpecificationID">Initial value of the ResourceSpecificationID property.</param>
        public static ResourceSpecification CreateResourceSpecification(global::System.Int32 resourceSpecificationID)
        {
            ResourceSpecification resourceSpecification = new ResourceSpecification();
            resourceSpecification.ResourceSpecificationID = resourceSpecificationID;
            return resourceSpecification;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceSpecificationID
        {
            get
            {
                return _ResourceSpecificationID;
            }
            set
            {
                if (_ResourceSpecificationID != value)
                {
                    OnResourceSpecificationIDChanging(value);
                    ReportPropertyChanging("ResourceSpecificationID");
                    _ResourceSpecificationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceSpecificationID");
                    OnResourceSpecificationIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceSpecificationID;
        partial void OnResourceSpecificationIDChanging(global::System.Int32 value);
        partial void OnResourceSpecificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkProcessSegmentID
        {
            get
            {
                return _WorkProcessSegmentID;
            }
            set
            {
                OnWorkProcessSegmentIDChanging(value);
                ReportPropertyChanging("WorkProcessSegmentID");
                _WorkProcessSegmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkProcessSegmentID");
                OnWorkProcessSegmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkProcessSegmentID;
        partial void OnWorkProcessSegmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkProcessSegmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                OnResourceIDChanging(value);
                ReportPropertyChanging("ResourceID");
                _ResourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceID");
                OnResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceID;
        partial void OnResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceTypeID
        {
            get
            {
                return _ResourceTypeID;
            }
            set
            {
                OnResourceTypeIDChanging(value);
                ReportPropertyChanging("ResourceTypeID");
                _ResourceTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceTypeID");
                OnResourceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceTypeID;
        partial void OnResourceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResourceUse
        {
            get
            {
                return _ResourceUse;
            }
            set
            {
                OnResourceUseChanging(value);
                ReportPropertyChanging("ResourceUse");
                _ResourceUse = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResourceUse");
                OnResourceUseChanged();
            }
        }
        private global::System.String _ResourceUse;
        partial void OnResourceUseChanging(global::System.String value);
        partial void OnResourceUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Single> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Single> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuantityUnitOfMeasure
        {
            get
            {
                return _QuantityUnitOfMeasure;
            }
            set
            {
                OnQuantityUnitOfMeasureChanging(value);
                ReportPropertyChanging("QuantityUnitOfMeasure");
                _QuantityUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuantityUnitOfMeasure");
                OnQuantityUnitOfMeasureChanged();
            }
        }
        private global::System.String _QuantityUnitOfMeasure;
        partial void OnQuantityUnitOfMeasureChanging(global::System.String value);
        partial void OnQuantityUnitOfMeasureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecification_ToResourceClass", "ResourceClass")]
        public ResourceClass ResourceClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceSpecification_ToResourceClass", "ResourceClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceSpecification_ToResourceClass", "ResourceClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceClass> ResourceClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceClass>("T2TModel.FK_ResourceSpecification_ToResourceClass", "ResourceClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceClass>("T2TModel.FK_ResourceSpecification_ToResourceClass", "ResourceClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecification_ToResourceDefinition", "ResourceDefinition")]
        public ResourceDefinition ResourceDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceSpecification_ToResourceDefinition", "ResourceDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceSpecification_ToResourceDefinition", "ResourceDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceDefinition> ResourceDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceSpecification_ToResourceDefinition", "ResourceDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceDefinition>("T2TModel.FK_ResourceSpecification_ToResourceDefinition", "ResourceDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecification_ToResourceLot", "ResourceLot")]
        public ResourceLot ResourceLot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceSpecification_ToResourceLot", "ResourceLot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceSpecification_ToResourceLot", "ResourceLot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceLot> ResourceLotReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceLot>("T2TModel.FK_ResourceSpecification_ToResourceLot", "ResourceLot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceLot>("T2TModel.FK_ResourceSpecification_ToResourceLot", "ResourceLot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecification_ToResourceType", "ResourceType")]
        public ResourceType ResourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("T2TModel.FK_ResourceSpecification_ToResourceType", "ResourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("T2TModel.FK_ResourceSpecification_ToResourceType", "ResourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceType> ResourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("T2TModel.FK_ResourceSpecification_ToResourceType", "ResourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceType>("T2TModel.FK_ResourceSpecification_ToResourceType", "ResourceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecification_ToWorkProcessSegment", "WorkProcessSegment")]
        public WorkProcessSegment WorkProcessSegment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkProcessSegment>("T2TModel.FK_ResourceSpecification_ToWorkProcessSegment", "WorkProcessSegment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkProcessSegment>("T2TModel.FK_ResourceSpecification_ToWorkProcessSegment", "WorkProcessSegment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkProcessSegment> WorkProcessSegmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkProcessSegment>("T2TModel.FK_ResourceSpecification_ToWorkProcessSegment", "WorkProcessSegment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkProcessSegment>("T2TModel.FK_ResourceSpecification_ToWorkProcessSegment", "WorkProcessSegment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecificationProperty_ResourceSpecification", "ResourceSpecificationProperty")]
        public EntityCollection<ResourceSpecificationProperty> ResourceSpecificationProperties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSpecificationProperty>("T2TModel.FK_ResourceSpecificationProperty_ResourceSpecification", "ResourceSpecificationProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSpecificationProperty>("T2TModel.FK_ResourceSpecificationProperty_ResourceSpecification", "ResourceSpecificationProperty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceSpecificationProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceSpecificationProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceSpecificationProperty object.
        /// </summary>
        /// <param name="resourceSpecificationID">Initial value of the ResourceSpecificationID property.</param>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        public static ResourceSpecificationProperty CreateResourceSpecificationProperty(global::System.Int32 resourceSpecificationID, global::System.Int32 propertyID)
        {
            ResourceSpecificationProperty resourceSpecificationProperty = new ResourceSpecificationProperty();
            resourceSpecificationProperty.ResourceSpecificationID = resourceSpecificationID;
            resourceSpecificationProperty.PropertyID = propertyID;
            return resourceSpecificationProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceSpecificationID
        {
            get
            {
                return _ResourceSpecificationID;
            }
            set
            {
                if (_ResourceSpecificationID != value)
                {
                    OnResourceSpecificationIDChanging(value);
                    ReportPropertyChanging("ResourceSpecificationID");
                    _ResourceSpecificationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceSpecificationID");
                    OnResourceSpecificationIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceSpecificationID;
        partial void OnResourceSpecificationIDChanging(global::System.Int32 value);
        partial void OnResourceSpecificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Single> _Value;
        partial void OnValueChanging(Nullable<global::System.Single> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValueUnitOfMeasure
        {
            get
            {
                return _ValueUnitOfMeasure;
            }
            set
            {
                OnValueUnitOfMeasureChanging(value);
                ReportPropertyChanging("ValueUnitOfMeasure");
                _ValueUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValueUnitOfMeasure");
                OnValueUnitOfMeasureChanged();
            }
        }
        private global::System.String _ValueUnitOfMeasure;
        partial void OnValueUnitOfMeasureChanging(global::System.String value);
        partial void OnValueUnitOfMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Single> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Single> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuantityUnitOfMeasure
        {
            get
            {
                return _QuantityUnitOfMeasure;
            }
            set
            {
                OnQuantityUnitOfMeasureChanging(value);
                ReportPropertyChanging("QuantityUnitOfMeasure");
                _QuantityUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuantityUnitOfMeasure");
                OnQuantityUnitOfMeasureChanged();
            }
        }
        private global::System.String _QuantityUnitOfMeasure;
        partial void OnQuantityUnitOfMeasureChanging(global::System.String value);
        partial void OnQuantityUnitOfMeasureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecificationProperty_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceSpecificationProperty_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceSpecificationProperty_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("T2TModel.FK_ResourceSpecificationProperty_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("T2TModel.FK_ResourceSpecificationProperty_Property", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecificationProperty_ResourceSpecification", "ResourceSpecification")]
        public ResourceSpecification ResourceSpecification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceSpecification>("T2TModel.FK_ResourceSpecificationProperty_ResourceSpecification", "ResourceSpecification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceSpecification>("T2TModel.FK_ResourceSpecificationProperty_ResourceSpecification", "ResourceSpecification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceSpecification> ResourceSpecificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceSpecification>("T2TModel.FK_ResourceSpecificationProperty_ResourceSpecification", "ResourceSpecification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceSpecification>("T2TModel.FK_ResourceSpecificationProperty_ResourceSpecification", "ResourceSpecification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ResourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceType object.
        /// </summary>
        /// <param name="resourceTypeID">Initial value of the ResourceTypeID property.</param>
        public static ResourceType CreateResourceType(global::System.Int32 resourceTypeID)
        {
            ResourceType resourceType = new ResourceType();
            resourceType.ResourceTypeID = resourceTypeID;
            return resourceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceTypeID
        {
            get
            {
                return _ResourceTypeID;
            }
            set
            {
                if (_ResourceTypeID != value)
                {
                    OnResourceTypeIDChanging(value);
                    ReportPropertyChanging("ResourceTypeID");
                    _ResourceTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceTypeID");
                    OnResourceTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceTypeID;
        partial void OnResourceTypeIDChanging(global::System.Int32 value);
        partial void OnResourceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActual_ToResourceType", "ResourceActual")]
        public EntityCollection<ResourceActual> ResourceActuals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceActual>("T2TModel.FK_ResourceActual_ToResourceType", "ResourceActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceActual>("T2TModel.FK_ResourceActual_ToResourceType", "ResourceActual", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceRequirement_ToResourceType", "ResourceRequirement")]
        public EntityCollection<ResourceRequirement> ResourceRequirements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceRequirement>("T2TModel.FK_ResourceRequirement_ToResourceType", "ResourceRequirement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceRequirement>("T2TModel.FK_ResourceRequirement_ToResourceType", "ResourceRequirement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecification_ToResourceType", "ResourceSpecification")]
        public EntityCollection<ResourceSpecification> ResourceSpecifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSpecification>("T2TModel.FK_ResourceSpecification_ToResourceType", "ResourceSpecification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSpecification>("T2TModel.FK_ResourceSpecification_ToResourceType", "ResourceSpecification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ScooterRawTyre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScooterRawTyre : Material
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScooterRawTyre object.
        /// </summary>
        /// <param name="resourceDefinitionID">Initial value of the ResourceDefinitionID property.</param>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        /// <param name="cAI">Initial value of the CAI property.</param>
        public static ScooterRawTyre CreateScooterRawTyre(global::System.Int32 resourceDefinitionID, global::System.Int32 resourceClassID, global::System.String cAI)
        {
            ScooterRawTyre scooterRawTyre = new ScooterRawTyre();
            scooterRawTyre.ResourceDefinitionID = resourceDefinitionID;
            scooterRawTyre.ResourceClassID = resourceClassID;
            scooterRawTyre.CAI = cAI;
            return scooterRawTyre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CAI
        {
            get
            {
                return _CAI;
            }
            set
            {
                OnCAIChanging(value);
                ReportPropertyChanging("CAI");
                _CAI = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CAI");
                OnCAIChanged();
            }
        }
        private global::System.String _CAI;
        partial void OnCAIChanging(global::System.String value);
        partial void OnCAIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalCodeText
        {
            get
            {
                return _InternalCodeText;
            }
            set
            {
                OnInternalCodeTextChanging(value);
                ReportPropertyChanging("InternalCodeText");
                _InternalCodeText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalCodeText");
                OnInternalCodeTextChanged();
            }
        }
        private global::System.String _InternalCodeText;
        partial void OnInternalCodeTextChanging(global::System.String value);
        partial void OnInternalCodeTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InternalCode
        {
            get
            {
                return _InternalCode;
            }
            set
            {
                OnInternalCodeChanging(value);
                ReportPropertyChanging("InternalCode");
                _InternalCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InternalCode");
                OnInternalCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _InternalCode;
        partial void OnInternalCodeChanging(Nullable<global::System.Int32> value);
        partial void OnInternalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dimension
        {
            get
            {
                return _Dimension;
            }
            set
            {
                OnDimensionChanging(value);
                ReportPropertyChanging("Dimension");
                _Dimension = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dimension");
                OnDimensionChanged();
            }
        }
        private global::System.String _Dimension;
        partial void OnDimensionChanging(global::System.String value);
        partial void OnDimensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="ScooterTyre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScooterTyre : Material
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScooterTyre object.
        /// </summary>
        /// <param name="resourceDefinitionID">Initial value of the ResourceDefinitionID property.</param>
        /// <param name="resourceClassID">Initial value of the ResourceClassID property.</param>
        /// <param name="cAI">Initial value of the CAI property.</param>
        public static ScooterTyre CreateScooterTyre(global::System.Int32 resourceDefinitionID, global::System.Int32 resourceClassID, global::System.String cAI)
        {
            ScooterTyre scooterTyre = new ScooterTyre();
            scooterTyre.ResourceDefinitionID = resourceDefinitionID;
            scooterTyre.ResourceClassID = resourceClassID;
            scooterTyre.CAI = cAI;
            return scooterTyre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CAI
        {
            get
            {
                return _CAI;
            }
            set
            {
                OnCAIChanging(value);
                ReportPropertyChanging("CAI");
                _CAI = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CAI");
                OnCAIChanged();
            }
        }
        private global::System.String _CAI;
        partial void OnCAIChanging(global::System.String value);
        partial void OnCAIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalCodeText
        {
            get
            {
                return _InternalCodeText;
            }
            set
            {
                OnInternalCodeTextChanging(value);
                ReportPropertyChanging("InternalCodeText");
                _InternalCodeText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalCodeText");
                OnInternalCodeTextChanged();
            }
        }
        private global::System.String _InternalCodeText;
        partial void OnInternalCodeTextChanging(global::System.String value);
        partial void OnInternalCodeTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InternalCode
        {
            get
            {
                return _InternalCode;
            }
            set
            {
                OnInternalCodeChanging(value);
                ReportPropertyChanging("InternalCode");
                _InternalCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InternalCode");
                OnInternalCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _InternalCode;
        partial void OnInternalCodeChanging(Nullable<global::System.Int32> value);
        partial void OnInternalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dezen
        {
            get
            {
                return _Dezen;
            }
            set
            {
                OnDezenChanging(value);
                ReportPropertyChanging("Dezen");
                _Dezen = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dezen");
                OnDezenChanged();
            }
        }
        private global::System.String _Dezen;
        partial void OnDezenChanging(global::System.String value);
        partial void OnDezenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dimension
        {
            get
            {
                return _Dimension;
            }
            set
            {
                OnDimensionChanging(value);
                ReportPropertyChanging("Dimension");
                _Dimension = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dimension");
                OnDimensionChanged();
            }
        }
        private global::System.String _Dimension;
        partial void OnDimensionChanging(global::System.String value);
        partial void OnDimensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="SemiFinishedMaterialInventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SemiFinishedMaterialInventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SemiFinishedMaterialInventory object.
        /// </summary>
        /// <param name="internalCode">Initial value of the InternalCode property.</param>
        /// <param name="count">Initial value of the Count property.</param>
        public static SemiFinishedMaterialInventory CreateSemiFinishedMaterialInventory(global::System.String internalCode, global::System.Int32 count)
        {
            SemiFinishedMaterialInventory semiFinishedMaterialInventory = new SemiFinishedMaterialInventory();
            semiFinishedMaterialInventory.InternalCode = internalCode;
            semiFinishedMaterialInventory.Count = count;
            return semiFinishedMaterialInventory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InternalCode
        {
            get
            {
                return _InternalCode;
            }
            set
            {
                if (_InternalCode != value)
                {
                    OnInternalCodeChanging(value);
                    ReportPropertyChanging("InternalCode");
                    _InternalCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InternalCode");
                    OnInternalCodeChanged();
                }
            }
        }
        private global::System.String _InternalCode;
        partial void OnInternalCodeChanging(global::System.String value);
        partial void OnInternalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Sequence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sequence : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sequence object.
        /// </summary>
        /// <param name="sequenceID">Initial value of the SequenceID property.</param>
        public static Sequence CreateSequence(global::System.String sequenceID)
        {
            Sequence sequence = new Sequence();
            sequence.SequenceID = sequenceID;
            return sequence;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SequenceID
        {
            get
            {
                return _SequenceID;
            }
            set
            {
                if (_SequenceID != value)
                {
                    OnSequenceIDChanging(value);
                    ReportPropertyChanging("SequenceID");
                    _SequenceID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SequenceID");
                    OnSequenceIDChanged();
                }
            }
        }
        private global::System.String _SequenceID;
        partial void OnSequenceIDChanging(global::System.String value);
        partial void OnSequenceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentValue
        {
            get
            {
                return _CurrentValue;
            }
            set
            {
                OnCurrentValueChanging(value);
                ReportPropertyChanging("CurrentValue");
                _CurrentValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentValue");
                OnCurrentValueChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentValue;
        partial void OnCurrentValueChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MinValue
        {
            get
            {
                return _MinValue;
            }
            set
            {
                OnMinValueChanging(value);
                ReportPropertyChanging("MinValue");
                _MinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinValue");
                OnMinValueChanged();
            }
        }
        private Nullable<global::System.Int32> _MinValue;
        partial void OnMinValueChanging(Nullable<global::System.Int32> value);
        partial void OnMinValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxValue
        {
            get
            {
                return _MaxValue;
            }
            set
            {
                OnMaxValueChanging(value);
                ReportPropertyChanging("MaxValue");
                _MaxValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxValue");
                OnMaxValueChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxValue;
        partial void OnMaxValueChanging(Nullable<global::System.Int32> value);
        partial void OnMaxValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SequencePrefix
        {
            get
            {
                return _SequencePrefix;
            }
            set
            {
                OnSequencePrefixChanging(value);
                ReportPropertyChanging("SequencePrefix");
                _SequencePrefix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SequencePrefix");
                OnSequencePrefixChanged();
            }
        }
        private global::System.String _SequencePrefix;
        partial void OnSequencePrefixChanging(global::System.String value);
        partial void OnSequencePrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SequenceSuffix
        {
            get
            {
                return _SequenceSuffix;
            }
            set
            {
                OnSequenceSuffixChanging(value);
                ReportPropertyChanging("SequenceSuffix");
                _SequenceSuffix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SequenceSuffix");
                OnSequenceSuffixChanged();
            }
        }
        private global::System.String _SequenceSuffix;
        partial void OnSequenceSuffixChanging(global::System.String value);
        partial void OnSequenceSuffixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastChange
        {
            get
            {
                return _LastChange;
            }
            set
            {
                OnLastChangeChanging(value);
                ReportPropertyChanging("LastChange");
                _LastChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChange");
                OnLastChangeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastChange;
        partial void OnLastChangeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUserID
        {
            get
            {
                return _LastUserID;
            }
            set
            {
                OnLastUserIDChanging(value);
                ReportPropertyChanging("LastUserID");
                _LastUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUserID");
                OnLastUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUserID;
        partial void OnLastUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnLastUserIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Shift")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shift : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Shift object.
        /// </summary>
        /// <param name="shiftID">Initial value of the ShiftID property.</param>
        public static Shift CreateShift(global::System.Byte shiftID)
        {
            Shift shift = new Shift();
            shift.ShiftID = shiftID;
            return shift;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ShiftID
        {
            get
            {
                return _ShiftID;
            }
            set
            {
                if (_ShiftID != value)
                {
                    OnShiftIDChanging(value);
                    ReportPropertyChanging("ShiftID");
                    _ShiftID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShiftID");
                    OnShiftIDChanged();
                }
            }
        }
        private global::System.Byte _ShiftID;
        partial void OnShiftIDChanging(global::System.Byte value);
        partial void OnShiftIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="TestResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestResult object.
        /// </summary>
        /// <param name="testResultID">Initial value of the TestResultID property.</param>
        public static TestResult CreateTestResult(global::System.Int32 testResultID)
        {
            TestResult testResult = new TestResult();
            testResult.TestResultID = testResultID;
            return testResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestResultID
        {
            get
            {
                return _TestResultID;
            }
            set
            {
                if (_TestResultID != value)
                {
                    OnTestResultIDChanging(value);
                    ReportPropertyChanging("TestResultID");
                    _TestResultID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestResultID");
                    OnTestResultIDChanged();
                }
            }
        }
        private global::System.Int32 _TestResultID;
        partial void OnTestResultIDChanging(global::System.Int32 value);
        partial void OnTestResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TestSpecificationID
        {
            get
            {
                return _TestSpecificationID;
            }
            set
            {
                OnTestSpecificationIDChanging(value);
                ReportPropertyChanging("TestSpecificationID");
                _TestSpecificationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestSpecificationID");
                OnTestSpecificationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TestSpecificationID;
        partial void OnTestSpecificationIDChanging(Nullable<global::System.Int32> value);
        partial void OnTestSpecificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReleasedDate
        {
            get
            {
                return _ReleasedDate;
            }
            set
            {
                OnReleasedDateChanging(value);
                ReportPropertyChanging("ReleasedDate");
                _ReleasedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleasedDate");
                OnReleasedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReleasedDate;
        partial void OnReleasedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReleasedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="TestResultProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestResultProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestResultProperty object.
        /// </summary>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        /// <param name="testResultID">Initial value of the TestResultID property.</param>
        public static TestResultProperty CreateTestResultProperty(global::System.Int32 propertyID, global::System.Int32 testResultID)
        {
            TestResultProperty testResultProperty = new TestResultProperty();
            testResultProperty.PropertyID = propertyID;
            testResultProperty.TestResultID = testResultID;
            return testResultProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestResultID
        {
            get
            {
                return _TestResultID;
            }
            set
            {
                if (_TestResultID != value)
                {
                    OnTestResultIDChanging(value);
                    ReportPropertyChanging("TestResultID");
                    _TestResultID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestResultID");
                    OnTestResultIDChanged();
                }
            }
        }
        private global::System.Int32 _TestResultID;
        partial void OnTestResultIDChanging(global::System.Int32 value);
        partial void OnTestResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitOfMeasure
        {
            get
            {
                return _UnitOfMeasure;
            }
            set
            {
                OnUnitOfMeasureChanging(value);
                ReportPropertyChanging("UnitOfMeasure");
                _UnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitOfMeasure");
                OnUnitOfMeasureChanged();
            }
        }
        private global::System.String _UnitOfMeasure;
        partial void OnUnitOfMeasureChanging(global::System.String value);
        partial void OnUnitOfMeasureChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="TestSpecification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestSpecification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestSpecification object.
        /// </summary>
        /// <param name="testSpecificationID">Initial value of the TestSpecificationID property.</param>
        public static TestSpecification CreateTestSpecification(global::System.Int32 testSpecificationID)
        {
            TestSpecification testSpecification = new TestSpecification();
            testSpecification.TestSpecificationID = testSpecificationID;
            return testSpecification;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestSpecificationID
        {
            get
            {
                return _TestSpecificationID;
            }
            set
            {
                if (_TestSpecificationID != value)
                {
                    OnTestSpecificationIDChanging(value);
                    ReportPropertyChanging("TestSpecificationID");
                    _TestSpecificationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestSpecificationID");
                    OnTestSpecificationIDChanged();
                }
            }
        }
        private global::System.Int32 _TestSpecificationID;
        partial void OnTestSpecificationIDChanging(global::System.Int32 value);
        partial void OnTestSpecificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="TestSpecificationProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestSpecificationProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestSpecificationProperty object.
        /// </summary>
        /// <param name="propertyID">Initial value of the PropertyID property.</param>
        /// <param name="testSpecificationID">Initial value of the TestSpecificationID property.</param>
        public static TestSpecificationProperty CreateTestSpecificationProperty(global::System.Int32 propertyID, global::System.Int32 testSpecificationID)
        {
            TestSpecificationProperty testSpecificationProperty = new TestSpecificationProperty();
            testSpecificationProperty.PropertyID = propertyID;
            testSpecificationProperty.TestSpecificationID = testSpecificationID;
            return testSpecificationProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyID
        {
            get
            {
                return _PropertyID;
            }
            set
            {
                if (_PropertyID != value)
                {
                    OnPropertyIDChanging(value);
                    ReportPropertyChanging("PropertyID");
                    _PropertyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PropertyID");
                    OnPropertyIDChanged();
                }
            }
        }
        private global::System.Int32 _PropertyID;
        partial void OnPropertyIDChanging(global::System.Int32 value);
        partial void OnPropertyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestSpecificationID
        {
            get
            {
                return _TestSpecificationID;
            }
            set
            {
                if (_TestSpecificationID != value)
                {
                    OnTestSpecificationIDChanging(value);
                    ReportPropertyChanging("TestSpecificationID");
                    _TestSpecificationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestSpecificationID");
                    OnTestSpecificationIDChanged();
                }
            }
        }
        private global::System.Int32 _TestSpecificationID;
        partial void OnTestSpecificationIDChanging(global::System.Int32 value);
        partial void OnTestSpecificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NominalValue
        {
            get
            {
                return _NominalValue;
            }
            set
            {
                OnNominalValueChanging(value);
                ReportPropertyChanging("NominalValue");
                _NominalValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NominalValue");
                OnNominalValueChanged();
            }
        }
        private global::System.String _NominalValue;
        partial void OnNominalValueChanging(global::System.String value);
        partial void OnNominalValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataType
        {
            get
            {
                return _DataType;
            }
            set
            {
                OnDataTypeChanging(value);
                ReportPropertyChanging("DataType");
                _DataType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataType");
                OnDataTypeChanged();
            }
        }
        private global::System.String _DataType;
        partial void OnDataTypeChanging(global::System.String value);
        partial void OnDataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitOfMeasure
        {
            get
            {
                return _UnitOfMeasure;
            }
            set
            {
                OnUnitOfMeasureChanging(value);
                ReportPropertyChanging("UnitOfMeasure");
                _UnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitOfMeasure");
                OnUnitOfMeasureChanged();
            }
        }
        private global::System.String _UnitOfMeasure;
        partial void OnUnitOfMeasureChanging(global::System.String value);
        partial void OnUnitOfMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceType
        {
            get
            {
                return _ResourceType;
            }
            set
            {
                OnResourceTypeChanging(value);
                ReportPropertyChanging("ResourceType");
                _ResourceType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceType");
                OnResourceTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceType;
        partial void OnResourceTypeChanging(Nullable<global::System.Int32> value);
        partial void OnResourceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceClassID
        {
            get
            {
                return _ResourceClassID;
            }
            set
            {
                OnResourceClassIDChanging(value);
                ReportPropertyChanging("ResourceClassID");
                _ResourceClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceClassID");
                OnResourceClassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceClassID;
        partial void OnResourceClassIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceDefinitionID
        {
            get
            {
                return _ResourceDefinitionID;
            }
            set
            {
                OnResourceDefinitionIDChanging(value);
                ReportPropertyChanging("ResourceDefinitionID");
                _ResourceDefinitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceDefinitionID");
                OnResourceDefinitionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceDefinitionID;
        partial void OnResourceDefinitionIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResourceLotID
        {
            get
            {
                return _ResourceLotID;
            }
            set
            {
                OnResourceLotIDChanging(value);
                ReportPropertyChanging("ResourceLotID");
                _ResourceLotID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResourceLotID");
                OnResourceLotIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ResourceLotID;
        partial void OnResourceLotIDChanging(Nullable<global::System.Int32> value);
        partial void OnResourceLotIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="UnitOfMeasure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnitOfMeasure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnitOfMeasure object.
        /// </summary>
        /// <param name="unitOfMeasureID">Initial value of the UnitOfMeasureID property.</param>
        public static UnitOfMeasure CreateUnitOfMeasure(global::System.Int32 unitOfMeasureID)
        {
            UnitOfMeasure unitOfMeasure = new UnitOfMeasure();
            unitOfMeasure.UnitOfMeasureID = unitOfMeasureID;
            return unitOfMeasure;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitOfMeasureID
        {
            get
            {
                return _UnitOfMeasureID;
            }
            set
            {
                if (_UnitOfMeasureID != value)
                {
                    OnUnitOfMeasureIDChanging(value);
                    ReportPropertyChanging("UnitOfMeasureID");
                    _UnitOfMeasureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnitOfMeasureID");
                    OnUnitOfMeasureIDChanged();
                }
            }
        }
        private global::System.Int32 _UnitOfMeasureID;
        partial void OnUnitOfMeasureIDChanging(global::System.Int32 value);
        partial void OnUnitOfMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="WorkCapability")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkCapability : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkCapability object.
        /// </summary>
        /// <param name="workCapabilityID">Initial value of the WorkCapabilityID property.</param>
        public static WorkCapability CreateWorkCapability(global::System.Int32 workCapabilityID)
        {
            WorkCapability workCapability = new WorkCapability();
            workCapability.WorkCapabilityID = workCapabilityID;
            return workCapability;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkCapabilityID
        {
            get
            {
                return _WorkCapabilityID;
            }
            set
            {
                if (_WorkCapabilityID != value)
                {
                    OnWorkCapabilityIDChanging(value);
                    ReportPropertyChanging("WorkCapabilityID");
                    _WorkCapabilityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkCapabilityID");
                    OnWorkCapabilityIDChanged();
                }
            }
        }
        private global::System.Int32 _WorkCapabilityID;
        partial void OnWorkCapabilityIDChanging(global::System.Int32 value);
        partial void OnWorkCapabilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkProcessSegementID
        {
            get
            {
                return _WorkProcessSegementID;
            }
            set
            {
                OnWorkProcessSegementIDChanging(value);
                ReportPropertyChanging("WorkProcessSegementID");
                _WorkProcessSegementID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkProcessSegementID");
                OnWorkProcessSegementIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkProcessSegementID;
        partial void OnWorkProcessSegementIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkProcessSegementIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapability_ToWorkCapability", "ResourceCapability")]
        public EntityCollection<ResourceCapability> ResourceCapabilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceCapability>("T2TModel.FK_ResourceCapability_ToWorkCapability", "ResourceCapability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceCapability>("T2TModel.FK_ResourceCapability_ToWorkCapability", "ResourceCapability", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="WorkDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkDefinition object.
        /// </summary>
        /// <param name="workDefinitionID">Initial value of the WorkDefinitionID property.</param>
        public static WorkDefinition CreateWorkDefinition(global::System.Int32 workDefinitionID)
        {
            WorkDefinition workDefinition = new WorkDefinition();
            workDefinition.WorkDefinitionID = workDefinitionID;
            return workDefinition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkDefinitionID
        {
            get
            {
                return _WorkDefinitionID;
            }
            set
            {
                if (_WorkDefinitionID != value)
                {
                    OnWorkDefinitionIDChanging(value);
                    ReportPropertyChanging("WorkDefinitionID");
                    _WorkDefinitionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkDefinitionID");
                    OnWorkDefinitionIDChanged();
                }
            }
        }
        private global::System.Int32 _WorkDefinitionID;
        partial void OnWorkDefinitionIDChanging(global::System.Int32 value);
        partial void OnWorkDefinitionIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="WorkPerformance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkPerformance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkPerformance object.
        /// </summary>
        /// <param name="workPerformanceID">Initial value of the WorkPerformanceID property.</param>
        public static WorkPerformance CreateWorkPerformance(global::System.Int32 workPerformanceID)
        {
            WorkPerformance workPerformance = new WorkPerformance();
            workPerformance.WorkPerformanceID = workPerformanceID;
            return workPerformance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkPerformanceID
        {
            get
            {
                return _WorkPerformanceID;
            }
            set
            {
                if (_WorkPerformanceID != value)
                {
                    OnWorkPerformanceIDChanging(value);
                    ReportPropertyChanging("WorkPerformanceID");
                    _WorkPerformanceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkPerformanceID");
                    OnWorkPerformanceIDChanged();
                }
            }
        }
        private global::System.Int32 _WorkPerformanceID;
        partial void OnWorkPerformanceIDChanging(global::System.Int32 value);
        partial void OnWorkPerformanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkTypeID
        {
            get
            {
                return _WorkTypeID;
            }
            set
            {
                OnWorkTypeIDChanging(value);
                ReportPropertyChanging("WorkTypeID");
                _WorkTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkTypeID");
                OnWorkTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkTypeID;
        partial void OnWorkTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkScheduleID
        {
            get
            {
                return _WorkScheduleID;
            }
            set
            {
                OnWorkScheduleIDChanging(value);
                ReportPropertyChanging("WorkScheduleID");
                _WorkScheduleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkScheduleID");
                OnWorkScheduleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkScheduleID;
        partial void OnWorkScheduleIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkScheduleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentWorkPerformanceID
        {
            get
            {
                return _ParentWorkPerformanceID;
            }
            set
            {
                OnParentWorkPerformanceIDChanging(value);
                ReportPropertyChanging("ParentWorkPerformanceID");
                _ParentWorkPerformanceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentWorkPerformanceID");
                OnParentWorkPerformanceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentWorkPerformanceID;
        partial void OnParentWorkPerformanceIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentWorkPerformanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PublishedDate
        {
            get
            {
                return _PublishedDate;
            }
            set
            {
                OnPublishedDateChanging(value);
                ReportPropertyChanging("PublishedDate");
                _PublishedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishedDate");
                OnPublishedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PublishedDate;
        partial void OnPublishedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPublishedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HierarchyScope
        {
            get
            {
                return _HierarchyScope;
            }
            set
            {
                OnHierarchyScopeChanging(value);
                ReportPropertyChanging("HierarchyScope");
                _HierarchyScope = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HierarchyScope");
                OnHierarchyScopeChanged();
            }
        }
        private global::System.String _HierarchyScope;
        partial void OnHierarchyScopeChanging(global::System.String value);
        partial void OnHierarchyScopeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="WorkProcessSegment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkProcessSegment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkProcessSegment object.
        /// </summary>
        /// <param name="workProcessSegmentID">Initial value of the WorkProcessSegmentID property.</param>
        public static WorkProcessSegment CreateWorkProcessSegment(global::System.Int32 workProcessSegmentID)
        {
            WorkProcessSegment workProcessSegment = new WorkProcessSegment();
            workProcessSegment.WorkProcessSegmentID = workProcessSegmentID;
            return workProcessSegment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkProcessSegmentID
        {
            get
            {
                return _WorkProcessSegmentID;
            }
            set
            {
                if (_WorkProcessSegmentID != value)
                {
                    OnWorkProcessSegmentIDChanging(value);
                    ReportPropertyChanging("WorkProcessSegmentID");
                    _WorkProcessSegmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkProcessSegmentID");
                    OnWorkProcessSegmentIDChanged();
                }
            }
        }
        private global::System.Int32 _WorkProcessSegmentID;
        partial void OnWorkProcessSegmentIDChanging(global::System.Int32 value);
        partial void OnWorkProcessSegmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentWorkProcessSegmentID
        {
            get
            {
                return _ParentWorkProcessSegmentID;
            }
            set
            {
                OnParentWorkProcessSegmentIDChanging(value);
                ReportPropertyChanging("ParentWorkProcessSegmentID");
                _ParentWorkProcessSegmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentWorkProcessSegmentID");
                OnParentWorkProcessSegmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentWorkProcessSegmentID;
        partial void OnParentWorkProcessSegmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentWorkProcessSegmentIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceCapability_ToWorkProcessSegment", "ResourceCapability")]
        public EntityCollection<ResourceCapability> ResourceCapabilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceCapability>("T2TModel.FK_ResourceCapability_ToWorkProcessSegment", "ResourceCapability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceCapability>("T2TModel.FK_ResourceCapability_ToWorkProcessSegment", "ResourceCapability", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceSpecification_ToWorkProcessSegment", "ResourceSpecification")]
        public EntityCollection<ResourceSpecification> ResourceSpecifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceSpecification>("T2TModel.FK_ResourceSpecification_ToWorkProcessSegment", "ResourceSpecification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceSpecification>("T2TModel.FK_ResourceSpecification_ToWorkProcessSegment", "ResourceSpecification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="WorkRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkRequest object.
        /// </summary>
        /// <param name="workRequestID">Initial value of the WorkRequestID property.</param>
        public static WorkRequest CreateWorkRequest(global::System.Int32 workRequestID)
        {
            WorkRequest workRequest = new WorkRequest();
            workRequest.WorkRequestID = workRequestID;
            return workRequest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkRequestID
        {
            get
            {
                return _WorkRequestID;
            }
            set
            {
                if (_WorkRequestID != value)
                {
                    OnWorkRequestIDChanging(value);
                    ReportPropertyChanging("WorkRequestID");
                    _WorkRequestID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkRequestID");
                    OnWorkRequestIDChanged();
                }
            }
        }
        private global::System.Int32 _WorkRequestID;
        partial void OnWorkRequestIDChanging(global::System.Int32 value);
        partial void OnWorkRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkType
        {
            get
            {
                return _WorkType;
            }
            set
            {
                OnWorkTypeChanging(value);
                ReportPropertyChanging("WorkType");
                _WorkType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkType");
                OnWorkTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkType;
        partial void OnWorkTypeChanging(Nullable<global::System.Int32> value);
        partial void OnWorkTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkDefinitionID
        {
            get
            {
                return _WorkDefinitionID;
            }
            set
            {
                OnWorkDefinitionIDChanging(value);
                ReportPropertyChanging("WorkDefinitionID");
                _WorkDefinitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkDefinitionID");
                OnWorkDefinitionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkDefinitionID;
        partial void OnWorkDefinitionIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _Priority;
        partial void OnPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HierarchyScope
        {
            get
            {
                return _HierarchyScope;
            }
            set
            {
                OnHierarchyScopeChanging(value);
                ReportPropertyChanging("HierarchyScope");
                _HierarchyScope = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HierarchyScope");
                OnHierarchyScopeChanged();
            }
        }
        private global::System.String _HierarchyScope;
        partial void OnHierarchyScopeChanging(global::System.String value);
        partial void OnHierarchyScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentWorkRequestID
        {
            get
            {
                return _ParentWorkRequestID;
            }
            set
            {
                OnParentWorkRequestIDChanging(value);
                ReportPropertyChanging("ParentWorkRequestID");
                _ParentWorkRequestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentWorkRequestID");
                OnParentWorkRequestIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentWorkRequestID;
        partial void OnParentWorkRequestIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentWorkRequestIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="WorkResponse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkResponse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkResponse object.
        /// </summary>
        /// <param name="workResponseID">Initial value of the WorkResponseID property.</param>
        public static WorkResponse CreateWorkResponse(global::System.Int32 workResponseID)
        {
            WorkResponse workResponse = new WorkResponse();
            workResponse.WorkResponseID = workResponseID;
            return workResponse;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkResponseID
        {
            get
            {
                return _WorkResponseID;
            }
            set
            {
                if (_WorkResponseID != value)
                {
                    OnWorkResponseIDChanging(value);
                    ReportPropertyChanging("WorkResponseID");
                    _WorkResponseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkResponseID");
                    OnWorkResponseIDChanged();
                }
            }
        }
        private global::System.Int32 _WorkResponseID;
        partial void OnWorkResponseIDChanging(global::System.Int32 value);
        partial void OnWorkResponseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkTypeID
        {
            get
            {
                return _WorkTypeID;
            }
            set
            {
                OnWorkTypeIDChanging(value);
                ReportPropertyChanging("WorkTypeID");
                _WorkTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkTypeID");
                OnWorkTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkTypeID;
        partial void OnWorkTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkRequestID
        {
            get
            {
                return _WorkRequestID;
            }
            set
            {
                OnWorkRequestIDChanging(value);
                ReportPropertyChanging("WorkRequestID");
                _WorkRequestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkRequestID");
                OnWorkRequestIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkRequestID;
        partial void OnWorkRequestIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkDefinitionID
        {
            get
            {
                return _WorkDefinitionID;
            }
            set
            {
                OnWorkDefinitionIDChanging(value);
                ReportPropertyChanging("WorkDefinitionID");
                _WorkDefinitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkDefinitionID");
                OnWorkDefinitionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkDefinitionID;
        partial void OnWorkDefinitionIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentWorkResponseID
        {
            get
            {
                return _ParentWorkResponseID;
            }
            set
            {
                OnParentWorkResponseIDChanging(value);
                ReportPropertyChanging("ParentWorkResponseID");
                _ParentWorkResponseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentWorkResponseID");
                OnParentWorkResponseIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentWorkResponseID;
        partial void OnParentWorkResponseIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentWorkResponseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkPerformanceID
        {
            get
            {
                return _WorkPerformanceID;
            }
            set
            {
                OnWorkPerformanceIDChanging(value);
                ReportPropertyChanging("WorkPerformanceID");
                _WorkPerformanceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkPerformanceID");
                OnWorkPerformanceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkPerformanceID;
        partial void OnWorkPerformanceIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkPerformanceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReasonID
        {
            get
            {
                return _ReasonID;
            }
            set
            {
                OnReasonIDChanging(value);
                ReportPropertyChanging("ReasonID");
                _ReasonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReasonID");
                OnReasonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReasonID;
        partial void OnReasonIDChanging(Nullable<global::System.Int32> value);
        partial void OnReasonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.String _EndTime;
        partial void OnEndTimeChanging(global::System.String value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HierarchyScope
        {
            get
            {
                return _HierarchyScope;
            }
            set
            {
                OnHierarchyScopeChanging(value);
                ReportPropertyChanging("HierarchyScope");
                _HierarchyScope = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HierarchyScope");
                OnHierarchyScopeChanged();
            }
        }
        private global::System.String _HierarchyScope;
        partial void OnHierarchyScopeChanging(global::System.String value);
        partial void OnHierarchyScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> Downtime
        {
            get
            {
                return _Downtime;
            }
            set
            {
                OnDowntimeChanging(value);
                ReportPropertyChanging("Downtime");
                _Downtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Downtime");
                OnDowntimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _Downtime;
        partial void OnDowntimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnDowntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> ProductionTime
        {
            get
            {
                return _ProductionTime;
            }
            set
            {
                OnProductionTimeChanging(value);
                ReportPropertyChanging("ProductionTime");
                _ProductionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductionTime");
                OnProductionTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _ProductionTime;
        partial void OnProductionTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnProductionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UndefinedTime
        {
            get
            {
                return _UndefinedTime;
            }
            set
            {
                OnUndefinedTimeChanging(value);
                ReportPropertyChanging("UndefinedTime");
                _UndefinedTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UndefinedTime");
                OnUndefinedTimeChanged();
            }
        }
        private global::System.String _UndefinedTime;
        partial void OnUndefinedTimeChanging(global::System.String value);
        partial void OnUndefinedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfGood
        {
            get
            {
                return _NumberOfGood;
            }
            set
            {
                OnNumberOfGoodChanging(value);
                ReportPropertyChanging("NumberOfGood");
                _NumberOfGood = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfGood");
                OnNumberOfGoodChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfGood;
        partial void OnNumberOfGoodChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfGoodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfBad
        {
            get
            {
                return _NumberOfBad;
            }
            set
            {
                OnNumberOfBadChanging(value);
                ReportPropertyChanging("NumberOfBad");
                _NumberOfBad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfBad");
                OnNumberOfBadChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfBad;
        partial void OnNumberOfBadChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfBadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfLost
        {
            get
            {
                return _NumberOfLost;
            }
            set
            {
                OnNumberOfLostChanging(value);
                ReportPropertyChanging("NumberOfLost");
                _NumberOfLost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfLost");
                OnNumberOfLostChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfLost;
        partial void OnNumberOfLostChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfLostChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_ResourceActual_ToWorkResponse", "ResourceActual")]
        public EntityCollection<ResourceActual> ResourceActuals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceActual>("T2TModel.FK_ResourceActual_ToWorkResponse", "ResourceActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceActual>("T2TModel.FK_ResourceActual_ToWorkResponse", "ResourceActual", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="WorkSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkSchedule object.
        /// </summary>
        /// <param name="workScheduleID">Initial value of the WorkScheduleID property.</param>
        public static WorkSchedule CreateWorkSchedule(global::System.Int32 workScheduleID)
        {
            WorkSchedule workSchedule = new WorkSchedule();
            workSchedule.WorkScheduleID = workScheduleID;
            return workSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkScheduleID
        {
            get
            {
                return _WorkScheduleID;
            }
            set
            {
                if (_WorkScheduleID != value)
                {
                    OnWorkScheduleIDChanging(value);
                    ReportPropertyChanging("WorkScheduleID");
                    _WorkScheduleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkScheduleID");
                    OnWorkScheduleIDChanged();
                }
            }
        }
        private global::System.Int32 _WorkScheduleID;
        partial void OnWorkScheduleIDChanging(global::System.Int32 value);
        partial void OnWorkScheduleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkTypeID
        {
            get
            {
                return _WorkTypeID;
            }
            set
            {
                OnWorkTypeIDChanging(value);
                ReportPropertyChanging("WorkTypeID");
                _WorkTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkTypeID");
                OnWorkTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkTypeID;
        partial void OnWorkTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PublishedDate
        {
            get
            {
                return _PublishedDate;
            }
            set
            {
                OnPublishedDateChanging(value);
                ReportPropertyChanging("PublishedDate");
                _PublishedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishedDate");
                OnPublishedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PublishedDate;
        partial void OnPublishedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPublishedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HierarchyScope
        {
            get
            {
                return _HierarchyScope;
            }
            set
            {
                OnHierarchyScopeChanging(value);
                ReportPropertyChanging("HierarchyScope");
                _HierarchyScope = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HierarchyScope");
                OnHierarchyScopeChanged();
            }
        }
        private global::System.String _HierarchyScope;
        partial void OnHierarchyScopeChanging(global::System.String value);
        partial void OnHierarchyScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentWorkScheduleID
        {
            get
            {
                return _ParentWorkScheduleID;
            }
            set
            {
                OnParentWorkScheduleIDChanging(value);
                ReportPropertyChanging("ParentWorkScheduleID");
                _ParentWorkScheduleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentWorkScheduleID");
                OnParentWorkScheduleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentWorkScheduleID;
        partial void OnParentWorkScheduleIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentWorkScheduleIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="WorkSpecification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkSpecification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkSpecification object.
        /// </summary>
        /// <param name="workSpecificationID">Initial value of the WorkSpecificationID property.</param>
        public static WorkSpecification CreateWorkSpecification(global::System.Int32 workSpecificationID)
        {
            WorkSpecification workSpecification = new WorkSpecification();
            workSpecification.WorkSpecificationID = workSpecificationID;
            return workSpecification;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkSpecificationID
        {
            get
            {
                return _WorkSpecificationID;
            }
            set
            {
                if (_WorkSpecificationID != value)
                {
                    OnWorkSpecificationIDChanging(value);
                    ReportPropertyChanging("WorkSpecificationID");
                    _WorkSpecificationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkSpecificationID");
                    OnWorkSpecificationIDChanged();
                }
            }
        }
        private global::System.Int32 _WorkSpecificationID;
        partial void OnWorkSpecificationIDChanging(global::System.Int32 value);
        partial void OnWorkSpecificationIDChanged();

        #endregion

    
    }

    #endregion

    
}
