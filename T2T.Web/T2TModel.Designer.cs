//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("T2TModel", "FK_BillOfMaterials_MaterialAssembly", "MaterialDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Web.MaterialDefinition), "BillOfMaterial", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Web.BillOfMaterial), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_BillOfMaterials_MaterialComponent", "MaterialDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Web.MaterialDefinition), "BillOfMaterial", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Web.BillOfMaterial), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_MaterialClasses_MaterialClasses", "MaterialClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Web.MaterialClass), "MaterialClass1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Web.MaterialClass), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_MaterialClasses_MaterialTypes", "MaterialType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Web.MaterialType), "MaterialClass", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Web.MaterialClass), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_MaterialDefinitions_MaterialClasses", "MaterialClass", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Web.MaterialClass), "MaterialDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Web.MaterialDefinition), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_MaterialLots_MaterialDefinitions", "MaterialDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Web.MaterialDefinition), "MaterialLot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Web.MaterialLot), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_MaterialLots_MaterialLotStatuses", "MaterialLotStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Web.MaterialLotStatus), "MaterialLot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(T2T.Web.MaterialLot), true)]
[assembly: EdmRelationshipAttribute("T2TModel", "FK_EquipmentHmiData_Equipments", "Equipment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(T2T.Web.Equipment), "EquipmentHmiData", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(T2T.Web.EquipmentHmiData), true)]

#endregion

namespace T2T.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class T2TEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new T2TEntities object using the connection string found in the 'T2TEntities' section of the application configuration file.
        /// </summary>
        public T2TEntities() : base("name=T2TEntities", "T2TEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new T2TEntities object.
        /// </summary>
        public T2TEntities(string connectionString) : base(connectionString, "T2TEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new T2TEntities object.
        /// </summary>
        public T2TEntities(EntityConnection connection) : base(connection, "T2TEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillOfMaterial> BillOfMaterials
        {
            get
            {
                if ((_BillOfMaterials == null))
                {
                    _BillOfMaterials = base.CreateObjectSet<BillOfMaterial>("BillOfMaterials");
                }
                return _BillOfMaterials;
            }
        }
        private ObjectSet<BillOfMaterial> _BillOfMaterials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaterialClass> MaterialClasses
        {
            get
            {
                if ((_MaterialClasses == null))
                {
                    _MaterialClasses = base.CreateObjectSet<MaterialClass>("MaterialClasses");
                }
                return _MaterialClasses;
            }
        }
        private ObjectSet<MaterialClass> _MaterialClasses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaterialDefinition> MaterialDefinitions
        {
            get
            {
                if ((_MaterialDefinitions == null))
                {
                    _MaterialDefinitions = base.CreateObjectSet<MaterialDefinition>("MaterialDefinitions");
                }
                return _MaterialDefinitions;
            }
        }
        private ObjectSet<MaterialDefinition> _MaterialDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaterialLot> MaterialLots
        {
            get
            {
                if ((_MaterialLots == null))
                {
                    _MaterialLots = base.CreateObjectSet<MaterialLot>("MaterialLots");
                }
                return _MaterialLots;
            }
        }
        private ObjectSet<MaterialLot> _MaterialLots;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaterialLotStatus> MaterialLotStatuses
        {
            get
            {
                if ((_MaterialLotStatuses == null))
                {
                    _MaterialLotStatuses = base.CreateObjectSet<MaterialLotStatus>("MaterialLotStatuses");
                }
                return _MaterialLotStatuses;
            }
        }
        private ObjectSet<MaterialLotStatus> _MaterialLotStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaterialType> MaterialTypes
        {
            get
            {
                if ((_MaterialTypes == null))
                {
                    _MaterialTypes = base.CreateObjectSet<MaterialType>("MaterialTypes");
                }
                return _MaterialTypes;
            }
        }
        private ObjectSet<MaterialType> _MaterialTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaterialLotTracking> MaterialLotTrackings
        {
            get
            {
                if ((_MaterialLotTrackings == null))
                {
                    _MaterialLotTrackings = base.CreateObjectSet<MaterialLotTracking>("MaterialLotTrackings");
                }
                return _MaterialLotTrackings;
            }
        }
        private ObjectSet<MaterialLotTracking> _MaterialLotTrackings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SemiFinishedMaterialInventory> SemiFinishedMaterialInventories
        {
            get
            {
                if ((_SemiFinishedMaterialInventories == null))
                {
                    _SemiFinishedMaterialInventories = base.CreateObjectSet<SemiFinishedMaterialInventory>("SemiFinishedMaterialInventories");
                }
                return _SemiFinishedMaterialInventories;
            }
        }
        private ObjectSet<SemiFinishedMaterialInventory> _SemiFinishedMaterialInventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipmentClass> EquipmentClasses
        {
            get
            {
                if ((_EquipmentClasses == null))
                {
                    _EquipmentClasses = base.CreateObjectSet<EquipmentClass>("EquipmentClasses");
                }
                return _EquipmentClasses;
            }
        }
        private ObjectSet<EquipmentClass> _EquipmentClasses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipmentElementLevel> EquipmentElementLevels
        {
            get
            {
                if ((_EquipmentElementLevels == null))
                {
                    _EquipmentElementLevels = base.CreateObjectSet<EquipmentElementLevel>("EquipmentElementLevels");
                }
                return _EquipmentElementLevels;
            }
        }
        private ObjectSet<EquipmentElementLevel> _EquipmentElementLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipmentHmiData> EquipmentHmiDatas
        {
            get
            {
                if ((_EquipmentHmiDatas == null))
                {
                    _EquipmentHmiDatas = base.CreateObjectSet<EquipmentHmiData>("EquipmentHmiDatas");
                }
                return _EquipmentHmiDatas;
            }
        }
        private ObjectSet<EquipmentHmiData> _EquipmentHmiDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Equipment> Equipments
        {
            get
            {
                if ((_Equipments == null))
                {
                    _Equipments = base.CreateObjectSet<Equipment>("Equipments");
                }
                return _Equipments;
            }
        }
        private ObjectSet<Equipment> _Equipments;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillOfMaterials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillOfMaterials(BillOfMaterial billOfMaterial)
        {
            base.AddObject("BillOfMaterials", billOfMaterial);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaterialClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterialClasses(MaterialClass materialClass)
        {
            base.AddObject("MaterialClasses", materialClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaterialDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterialDefinitions(MaterialDefinition materialDefinition)
        {
            base.AddObject("MaterialDefinitions", materialDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaterialLots EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterialLots(MaterialLot materialLot)
        {
            base.AddObject("MaterialLots", materialLot);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaterialLotStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterialLotStatuses(MaterialLotStatus materialLotStatus)
        {
            base.AddObject("MaterialLotStatuses", materialLotStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaterialTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterialTypes(MaterialType materialType)
        {
            base.AddObject("MaterialTypes", materialType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaterialLotTrackings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterialLotTrackings(MaterialLotTracking materialLotTracking)
        {
            base.AddObject("MaterialLotTrackings", materialLotTracking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SemiFinishedMaterialInventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSemiFinishedMaterialInventories(SemiFinishedMaterialInventory semiFinishedMaterialInventory)
        {
            base.AddObject("SemiFinishedMaterialInventories", semiFinishedMaterialInventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentClasses(EquipmentClass equipmentClass)
        {
            base.AddObject("EquipmentClasses", equipmentClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentElementLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentElementLevels(EquipmentElementLevel equipmentElementLevel)
        {
            base.AddObject("EquipmentElementLevels", equipmentElementLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentHmiDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentHmiDatas(EquipmentHmiData equipmentHmiData)
        {
            base.AddObject("EquipmentHmiDatas", equipmentHmiData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Equipments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipments(Equipment equipment)
        {
            base.AddObject("Equipments", equipment);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="BillOfMaterial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillOfMaterial : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillOfMaterial object.
        /// </summary>
        /// <param name="billOfMaterialsID">Initial value of the BillOfMaterialsID property.</param>
        /// <param name="componentID">Initial value of the ComponentID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="unitMeasureCode">Initial value of the UnitMeasureCode property.</param>
        /// <param name="bOMLevel">Initial value of the BOMLevel property.</param>
        /// <param name="perAssemblyQty">Initial value of the PerAssemblyQty property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static BillOfMaterial CreateBillOfMaterial(global::System.Int32 billOfMaterialsID, global::System.Int32 componentID, global::System.DateTime startDate, global::System.String unitMeasureCode, global::System.Int16 bOMLevel, global::System.Decimal perAssemblyQty, global::System.DateTime modifiedDate)
        {
            BillOfMaterial billOfMaterial = new BillOfMaterial();
            billOfMaterial.BillOfMaterialsID = billOfMaterialsID;
            billOfMaterial.ComponentID = componentID;
            billOfMaterial.StartDate = startDate;
            billOfMaterial.UnitMeasureCode = unitMeasureCode;
            billOfMaterial.BOMLevel = bOMLevel;
            billOfMaterial.PerAssemblyQty = perAssemblyQty;
            billOfMaterial.ModifiedDate = modifiedDate;
            return billOfMaterial;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BillOfMaterialsID
        {
            get
            {
                return _BillOfMaterialsID;
            }
            set
            {
                if (_BillOfMaterialsID != value)
                {
                    OnBillOfMaterialsIDChanging(value);
                    ReportPropertyChanging("BillOfMaterialsID");
                    _BillOfMaterialsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillOfMaterialsID");
                    OnBillOfMaterialsIDChanged();
                }
            }
        }
        private global::System.Int32 _BillOfMaterialsID;
        partial void OnBillOfMaterialsIDChanging(global::System.Int32 value);
        partial void OnBillOfMaterialsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssemblyID
        {
            get
            {
                return _AssemblyID;
            }
            set
            {
                OnAssemblyIDChanging(value);
                ReportPropertyChanging("AssemblyID");
                _AssemblyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssemblyID");
                OnAssemblyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AssemblyID;
        partial void OnAssemblyIDChanging(Nullable<global::System.Int32> value);
        partial void OnAssemblyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentID
        {
            get
            {
                return _ComponentID;
            }
            set
            {
                OnComponentIDChanging(value);
                ReportPropertyChanging("ComponentID");
                _ComponentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComponentID");
                OnComponentIDChanged();
            }
        }
        private global::System.Int32 _ComponentID;
        partial void OnComponentIDChanging(global::System.Int32 value);
        partial void OnComponentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitMeasureCode
        {
            get
            {
                return _UnitMeasureCode;
            }
            set
            {
                OnUnitMeasureCodeChanging(value);
                ReportPropertyChanging("UnitMeasureCode");
                _UnitMeasureCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UnitMeasureCode");
                OnUnitMeasureCodeChanged();
            }
        }
        private global::System.String _UnitMeasureCode;
        partial void OnUnitMeasureCodeChanging(global::System.String value);
        partial void OnUnitMeasureCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BOMLevel
        {
            get
            {
                return _BOMLevel;
            }
            set
            {
                OnBOMLevelChanging(value);
                ReportPropertyChanging("BOMLevel");
                _BOMLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BOMLevel");
                OnBOMLevelChanged();
            }
        }
        private global::System.Int16 _BOMLevel;
        partial void OnBOMLevelChanging(global::System.Int16 value);
        partial void OnBOMLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PerAssemblyQty
        {
            get
            {
                return _PerAssemblyQty;
            }
            set
            {
                OnPerAssemblyQtyChanging(value);
                ReportPropertyChanging("PerAssemblyQty");
                _PerAssemblyQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerAssemblyQty");
                OnPerAssemblyQtyChanged();
            }
        }
        private global::System.Decimal _PerAssemblyQty;
        partial void OnPerAssemblyQtyChanging(global::System.Decimal value);
        partial void OnPerAssemblyQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_BillOfMaterials_MaterialAssembly", "MaterialDefinition")]
        public MaterialDefinition MaterialDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialDefinition>("T2TModel.FK_BillOfMaterials_MaterialAssembly", "MaterialDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialDefinition>("T2TModel.FK_BillOfMaterials_MaterialAssembly", "MaterialDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaterialDefinition> MaterialDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialDefinition>("T2TModel.FK_BillOfMaterials_MaterialAssembly", "MaterialDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaterialDefinition>("T2TModel.FK_BillOfMaterials_MaterialAssembly", "MaterialDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_BillOfMaterials_MaterialComponent", "MaterialDefinition")]
        public MaterialDefinition MaterialDefinition1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialDefinition>("T2TModel.FK_BillOfMaterials_MaterialComponent", "MaterialDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialDefinition>("T2TModel.FK_BillOfMaterials_MaterialComponent", "MaterialDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaterialDefinition> MaterialDefinition1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialDefinition>("T2TModel.FK_BillOfMaterials_MaterialComponent", "MaterialDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaterialDefinition>("T2TModel.FK_BillOfMaterials_MaterialComponent", "MaterialDefinition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Carcass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carcass : MaterialDefinition
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carcass object.
        /// </summary>
        /// <param name="materialDefinitionID">Initial value of the MaterialDefinitionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="materialClassID">Initial value of the MaterialClassID property.</param>
        public static Carcass CreateCarcass(global::System.Int32 materialDefinitionID, global::System.String name, global::System.Int32 materialClassID)
        {
            Carcass carcass = new Carcass();
            carcass.MaterialDefinitionID = materialDefinitionID;
            carcass.Name = name;
            carcass.MaterialClassID = materialClassID;
            return carcass;
        }

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Equipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Equipment object.
        /// </summary>
        /// <param name="equipmentID">Initial value of the EquipmentID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Equipment CreateEquipment(global::System.Int32 equipmentID, global::System.String name)
        {
            Equipment equipment = new Equipment();
            equipment.EquipmentID = equipmentID;
            equipment.Name = name;
            return equipment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentID
        {
            get
            {
                return _EquipmentID;
            }
            set
            {
                if (_EquipmentID != value)
                {
                    OnEquipmentIDChanging(value);
                    ReportPropertyChanging("EquipmentID");
                    _EquipmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquipmentID");
                    OnEquipmentIDChanged();
                }
            }
        }
        private global::System.Int32 _EquipmentID;
        partial void OnEquipmentIDChanging(global::System.Int32 value);
        partial void OnEquipmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EquipmentClassID
        {
            get
            {
                return _EquipmentClassID;
            }
            set
            {
                OnEquipmentClassIDChanging(value);
                ReportPropertyChanging("EquipmentClassID");
                _EquipmentClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentClassID");
                OnEquipmentClassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EquipmentClassID;
        partial void OnEquipmentClassIDChanging(Nullable<global::System.Int32> value);
        partial void OnEquipmentClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentEquipment
        {
            get
            {
                return _ParentEquipment;
            }
            set
            {
                OnParentEquipmentChanging(value);
                ReportPropertyChanging("ParentEquipment");
                _ParentEquipment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentEquipment");
                OnParentEquipmentChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentEquipment;
        partial void OnParentEquipmentChanging(Nullable<global::System.Int32> value);
        partial void OnParentEquipmentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_EquipmentHmiData_Equipments", "EquipmentHmiData")]
        public EquipmentHmiData EquipmentHmiData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentHmiData>("T2TModel.FK_EquipmentHmiData_Equipments", "EquipmentHmiData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentHmiData>("T2TModel.FK_EquipmentHmiData_Equipments", "EquipmentHmiData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EquipmentHmiData> EquipmentHmiDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentHmiData>("T2TModel.FK_EquipmentHmiData_Equipments", "EquipmentHmiData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EquipmentHmiData>("T2TModel.FK_EquipmentHmiData_Equipments", "EquipmentHmiData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="EquipmentClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipmentClass object.
        /// </summary>
        /// <param name="equipmentClassID">Initial value of the EquipmentClassID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EquipmentClass CreateEquipmentClass(global::System.Int32 equipmentClassID, global::System.String name)
        {
            EquipmentClass equipmentClass = new EquipmentClass();
            equipmentClass.EquipmentClassID = equipmentClassID;
            equipmentClass.Name = name;
            return equipmentClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentClassID
        {
            get
            {
                return _EquipmentClassID;
            }
            set
            {
                if (_EquipmentClassID != value)
                {
                    OnEquipmentClassIDChanging(value);
                    ReportPropertyChanging("EquipmentClassID");
                    _EquipmentClassID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquipmentClassID");
                    OnEquipmentClassIDChanged();
                }
            }
        }
        private global::System.Int32 _EquipmentClassID;
        partial void OnEquipmentClassIDChanging(global::System.Int32 value);
        partial void OnEquipmentClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EquipmentElementLevelID
        {
            get
            {
                return _EquipmentElementLevelID;
            }
            set
            {
                OnEquipmentElementLevelIDChanging(value);
                ReportPropertyChanging("EquipmentElementLevelID");
                _EquipmentElementLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentElementLevelID");
                OnEquipmentElementLevelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EquipmentElementLevelID;
        partial void OnEquipmentElementLevelIDChanging(Nullable<global::System.Int32> value);
        partial void OnEquipmentElementLevelIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="EquipmentElementLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentElementLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipmentElementLevel object.
        /// </summary>
        /// <param name="equipmentElementLevelID">Initial value of the EquipmentElementLevelID property.</param>
        /// <param name="equipmentElementLevelName">Initial value of the EquipmentElementLevelName property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static EquipmentElementLevel CreateEquipmentElementLevel(global::System.Int32 equipmentElementLevelID, global::System.String equipmentElementLevelName, global::System.String description)
        {
            EquipmentElementLevel equipmentElementLevel = new EquipmentElementLevel();
            equipmentElementLevel.EquipmentElementLevelID = equipmentElementLevelID;
            equipmentElementLevel.EquipmentElementLevelName = equipmentElementLevelName;
            equipmentElementLevel.Description = description;
            return equipmentElementLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentElementLevelID
        {
            get
            {
                return _EquipmentElementLevelID;
            }
            set
            {
                if (_EquipmentElementLevelID != value)
                {
                    OnEquipmentElementLevelIDChanging(value);
                    ReportPropertyChanging("EquipmentElementLevelID");
                    _EquipmentElementLevelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquipmentElementLevelID");
                    OnEquipmentElementLevelIDChanged();
                }
            }
        }
        private global::System.Int32 _EquipmentElementLevelID;
        partial void OnEquipmentElementLevelIDChanging(global::System.Int32 value);
        partial void OnEquipmentElementLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EquipmentElementLevelName
        {
            get
            {
                return _EquipmentElementLevelName;
            }
            set
            {
                OnEquipmentElementLevelNameChanging(value);
                ReportPropertyChanging("EquipmentElementLevelName");
                _EquipmentElementLevelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EquipmentElementLevelName");
                OnEquipmentElementLevelNameChanged();
            }
        }
        private global::System.String _EquipmentElementLevelName;
        partial void OnEquipmentElementLevelNameChanging(global::System.String value);
        partial void OnEquipmentElementLevelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="EquipmentHmiData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentHmiData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipmentHmiData object.
        /// </summary>
        /// <param name="equipmentID">Initial value of the EquipmentID property.</param>
        public static EquipmentHmiData CreateEquipmentHmiData(global::System.Int32 equipmentID)
        {
            EquipmentHmiData equipmentHmiData = new EquipmentHmiData();
            equipmentHmiData.EquipmentID = equipmentID;
            return equipmentHmiData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentID
        {
            get
            {
                return _EquipmentID;
            }
            set
            {
                if (_EquipmentID != value)
                {
                    OnEquipmentIDChanging(value);
                    ReportPropertyChanging("EquipmentID");
                    _EquipmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquipmentID");
                    OnEquipmentIDChanged();
                }
            }
        }
        private global::System.Int32 _EquipmentID;
        partial void OnEquipmentIDChanging(global::System.Int32 value);
        partial void OnEquipmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tags
        {
            get
            {
                return _Tags;
            }
            set
            {
                OnTagsChanging(value);
                ReportPropertyChanging("Tags");
                _Tags = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tags");
                OnTagsChanged();
            }
        }
        private global::System.String _Tags;
        partial void OnTagsChanging(global::System.String value);
        partial void OnTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Screens
        {
            get
            {
                return _Screens;
            }
            set
            {
                OnScreensChanging(value);
                ReportPropertyChanging("Screens");
                _Screens = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Screens");
                OnScreensChanged();
            }
        }
        private global::System.String _Screens;
        partial void OnScreensChanging(global::System.String value);
        partial void OnScreensChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alarms
        {
            get
            {
                return _Alarms;
            }
            set
            {
                OnAlarmsChanging(value);
                ReportPropertyChanging("Alarms");
                _Alarms = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alarms");
                OnAlarmsChanged();
            }
        }
        private global::System.String _Alarms;
        partial void OnAlarmsChanging(global::System.String value);
        partial void OnAlarmsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_EquipmentHmiData_Equipments", "Equipment")]
        public Equipment Equipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("T2TModel.FK_EquipmentHmiData_Equipments", "Equipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("T2TModel.FK_EquipmentHmiData_Equipments", "Equipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Equipment> EquipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("T2TModel.FK_EquipmentHmiData_Equipments", "Equipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Equipment>("T2TModel.FK_EquipmentHmiData_Equipments", "Equipment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Inerliner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inerliner : MaterialDefinition
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Inerliner object.
        /// </summary>
        /// <param name="materialDefinitionID">Initial value of the MaterialDefinitionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="materialClassID">Initial value of the MaterialClassID property.</param>
        public static Inerliner CreateInerliner(global::System.Int32 materialDefinitionID, global::System.String name, global::System.Int32 materialClassID)
        {
            Inerliner inerliner = new Inerliner();
            inerliner.MaterialDefinitionID = materialDefinitionID;
            inerliner.Name = name;
            inerliner.MaterialClassID = materialClassID;
            return inerliner;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _Length;
        partial void OnLengthChanging(Nullable<global::System.Int32> value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Thickness
        {
            get
            {
                return _Thickness;
            }
            set
            {
                OnThicknessChanging(value);
                ReportPropertyChanging("Thickness");
                _Thickness = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Thickness");
                OnThicknessChanged();
            }
        }
        private Nullable<global::System.Decimal> _Thickness;
        partial void OnThicknessChanging(Nullable<global::System.Decimal> value);
        partial void OnThicknessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Int32> value);
        partial void OnWeightChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Lank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lank : MaterialDefinition
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lank object.
        /// </summary>
        /// <param name="materialDefinitionID">Initial value of the MaterialDefinitionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="materialClassID">Initial value of the MaterialClassID property.</param>
        public static Lank CreateLank(global::System.Int32 materialDefinitionID, global::System.String name, global::System.Int32 materialClassID)
        {
            Lank lank = new Lank();
            lank.MaterialDefinitionID = materialDefinitionID;
            lank.Name = name;
            lank.MaterialClassID = materialClassID;
            return lank;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LankTT
        {
            get
            {
                return _LankTT;
            }
            set
            {
                OnLankTTChanging(value);
                ReportPropertyChanging("LankTT");
                _LankTT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LankTT");
                OnLankTTChanged();
            }
        }
        private global::System.String _LankTT;
        partial void OnLankTTChanging(global::System.String value);
        partial void OnLankTTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Perimeter
        {
            get
            {
                return _Perimeter;
            }
            set
            {
                OnPerimeterChanging(value);
                ReportPropertyChanging("Perimeter");
                _Perimeter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Perimeter");
                OnPerimeterChanged();
            }
        }
        private Nullable<global::System.Int32> _Perimeter;
        partial void OnPerimeterChanging(Nullable<global::System.Int32> value);
        partial void OnPerimeterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Diameter
        {
            get
            {
                return _Diameter;
            }
            set
            {
                OnDiameterChanging(value);
                ReportPropertyChanging("Diameter");
                _Diameter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Diameter");
                OnDiameterChanged();
            }
        }
        private Nullable<global::System.Int32> _Diameter;
        partial void OnDiameterChanging(Nullable<global::System.Int32> value);
        partial void OnDiameterChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="MaterialClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaterialClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaterialClass object.
        /// </summary>
        /// <param name="materialClassID">Initial value of the MaterialClassID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="materialTypeID">Initial value of the MaterialTypeID property.</param>
        public static MaterialClass CreateMaterialClass(global::System.Int32 materialClassID, global::System.String name, global::System.String description, global::System.Byte materialTypeID)
        {
            MaterialClass materialClass = new MaterialClass();
            materialClass.MaterialClassID = materialClassID;
            materialClass.Name = name;
            materialClass.Description = description;
            materialClass.MaterialTypeID = materialTypeID;
            return materialClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialClassID
        {
            get
            {
                return _MaterialClassID;
            }
            set
            {
                if (_MaterialClassID != value)
                {
                    OnMaterialClassIDChanging(value);
                    ReportPropertyChanging("MaterialClassID");
                    _MaterialClassID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaterialClassID");
                    OnMaterialClassIDChanged();
                }
            }
        }
        private global::System.Int32 _MaterialClassID;
        partial void OnMaterialClassIDChanging(global::System.Int32 value);
        partial void OnMaterialClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte MaterialTypeID
        {
            get
            {
                return _MaterialTypeID;
            }
            set
            {
                OnMaterialTypeIDChanging(value);
                ReportPropertyChanging("MaterialTypeID");
                _MaterialTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaterialTypeID");
                OnMaterialTypeIDChanged();
            }
        }
        private global::System.Byte _MaterialTypeID;
        partial void OnMaterialTypeIDChanging(global::System.Byte value);
        partial void OnMaterialTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentClassID
        {
            get
            {
                return _ParentClassID;
            }
            set
            {
                OnParentClassIDChanging(value);
                ReportPropertyChanging("ParentClassID");
                _ParentClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentClassID");
                OnParentClassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentClassID;
        partial void OnParentClassIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentClassIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_MaterialClasses_MaterialClasses", "MaterialClass1")]
        public EntityCollection<MaterialClass> ChildClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialClass>("T2TModel.FK_MaterialClasses_MaterialClasses", "MaterialClass1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialClass>("T2TModel.FK_MaterialClasses_MaterialClasses", "MaterialClass1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_MaterialClasses_MaterialClasses", "MaterialClass")]
        public MaterialClass ParentClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialClass>("T2TModel.FK_MaterialClasses_MaterialClasses", "MaterialClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialClass>("T2TModel.FK_MaterialClasses_MaterialClasses", "MaterialClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaterialClass> ParentClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialClass>("T2TModel.FK_MaterialClasses_MaterialClasses", "MaterialClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaterialClass>("T2TModel.FK_MaterialClasses_MaterialClasses", "MaterialClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_MaterialClasses_MaterialTypes", "MaterialType")]
        public MaterialType MaterialType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialType>("T2TModel.FK_MaterialClasses_MaterialTypes", "MaterialType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialType>("T2TModel.FK_MaterialClasses_MaterialTypes", "MaterialType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaterialType> MaterialTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialType>("T2TModel.FK_MaterialClasses_MaterialTypes", "MaterialType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaterialType>("T2TModel.FK_MaterialClasses_MaterialTypes", "MaterialType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_MaterialDefinitions_MaterialClasses", "MaterialDefinition")]
        public EntityCollection<MaterialDefinition> MaterialDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialDefinition>("T2TModel.FK_MaterialDefinitions_MaterialClasses", "MaterialDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialDefinition>("T2TModel.FK_MaterialDefinitions_MaterialClasses", "MaterialDefinition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="MaterialDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Inerliner))]
    [KnownTypeAttribute(typeof(Lank))]
    [KnownTypeAttribute(typeof(Ply))]
    [KnownTypeAttribute(typeof(Protector))]
    [KnownTypeAttribute(typeof(RawTyre))]
    [KnownTypeAttribute(typeof(Tyre))]
    [KnownTypeAttribute(typeof(Carcass))]
    public abstract partial class MaterialDefinition : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialDefinitionID
        {
            get
            {
                return _MaterialDefinitionID;
            }
            set
            {
                if (_MaterialDefinitionID != value)
                {
                    OnMaterialDefinitionIDChanging(value);
                    ReportPropertyChanging("MaterialDefinitionID");
                    _MaterialDefinitionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaterialDefinitionID");
                    OnMaterialDefinitionIDChanged();
                }
            }
        }
        private global::System.Int32 _MaterialDefinitionID;
        partial void OnMaterialDefinitionIDChanging(global::System.Int32 value);
        partial void OnMaterialDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialClassID
        {
            get
            {
                return _MaterialClassID;
            }
            set
            {
                OnMaterialClassIDChanging(value);
                ReportPropertyChanging("MaterialClassID");
                _MaterialClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaterialClassID");
                OnMaterialClassIDChanged();
            }
        }
        private global::System.Int32 _MaterialClassID;
        partial void OnMaterialClassIDChanging(global::System.Int32 value);
        partial void OnMaterialClassIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_BillOfMaterials_MaterialAssembly", "BillOfMaterial")]
        public EntityCollection<BillOfMaterial> BillOfMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillOfMaterial>("T2TModel.FK_BillOfMaterials_MaterialAssembly", "BillOfMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillOfMaterial>("T2TModel.FK_BillOfMaterials_MaterialAssembly", "BillOfMaterial", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_BillOfMaterials_MaterialComponent", "BillOfMaterial")]
        public EntityCollection<BillOfMaterial> BillOfMaterials1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillOfMaterial>("T2TModel.FK_BillOfMaterials_MaterialComponent", "BillOfMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillOfMaterial>("T2TModel.FK_BillOfMaterials_MaterialComponent", "BillOfMaterial", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_MaterialDefinitions_MaterialClasses", "MaterialClass")]
        public MaterialClass MaterialClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialClass>("T2TModel.FK_MaterialDefinitions_MaterialClasses", "MaterialClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialClass>("T2TModel.FK_MaterialDefinitions_MaterialClasses", "MaterialClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaterialClass> MaterialClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialClass>("T2TModel.FK_MaterialDefinitions_MaterialClasses", "MaterialClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaterialClass>("T2TModel.FK_MaterialDefinitions_MaterialClasses", "MaterialClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_MaterialLots_MaterialDefinitions", "MaterialLot")]
        public EntityCollection<MaterialLot> MaterialLots
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialLot>("T2TModel.FK_MaterialLots_MaterialDefinitions", "MaterialLot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialLot>("T2TModel.FK_MaterialLots_MaterialDefinitions", "MaterialLot", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="MaterialLot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaterialLot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaterialLot object.
        /// </summary>
        /// <param name="materialLotID">Initial value of the MaterialLotID property.</param>
        /// <param name="lotID">Initial value of the LotID property.</param>
        /// <param name="materialDefinitionID">Initial value of the MaterialDefinitionID property.</param>
        /// <param name="materialLotStatusID">Initial value of the MaterialLotStatusID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        public static MaterialLot CreateMaterialLot(global::System.Int32 materialLotID, global::System.String lotID, global::System.Int32 materialDefinitionID, global::System.Int32 materialLotStatusID, global::System.Decimal quantity, global::System.DateTime creationDate)
        {
            MaterialLot materialLot = new MaterialLot();
            materialLot.MaterialLotID = materialLotID;
            materialLot.LotID = lotID;
            materialLot.MaterialDefinitionID = materialDefinitionID;
            materialLot.MaterialLotStatusID = materialLotStatusID;
            materialLot.Quantity = quantity;
            materialLot.CreationDate = creationDate;
            return materialLot;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialLotID
        {
            get
            {
                return _MaterialLotID;
            }
            set
            {
                if (_MaterialLotID != value)
                {
                    OnMaterialLotIDChanging(value);
                    ReportPropertyChanging("MaterialLotID");
                    _MaterialLotID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaterialLotID");
                    OnMaterialLotIDChanged();
                }
            }
        }
        private global::System.Int32 _MaterialLotID;
        partial void OnMaterialLotIDChanging(global::System.Int32 value);
        partial void OnMaterialLotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotID
        {
            get
            {
                return _LotID;
            }
            set
            {
                OnLotIDChanging(value);
                ReportPropertyChanging("LotID");
                _LotID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LotID");
                OnLotIDChanged();
            }
        }
        private global::System.String _LotID;
        partial void OnLotIDChanging(global::System.String value);
        partial void OnLotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialDefinitionID
        {
            get
            {
                return _MaterialDefinitionID;
            }
            set
            {
                OnMaterialDefinitionIDChanging(value);
                ReportPropertyChanging("MaterialDefinitionID");
                _MaterialDefinitionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaterialDefinitionID");
                OnMaterialDefinitionIDChanged();
            }
        }
        private global::System.Int32 _MaterialDefinitionID;
        partial void OnMaterialDefinitionIDChanging(global::System.Int32 value);
        partial void OnMaterialDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialLotStatusID
        {
            get
            {
                return _MaterialLotStatusID;
            }
            set
            {
                OnMaterialLotStatusIDChanging(value);
                ReportPropertyChanging("MaterialLotStatusID");
                _MaterialLotStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaterialLotStatusID");
                OnMaterialLotStatusIDChanged();
            }
        }
        private global::System.Int32 _MaterialLotStatusID;
        partial void OnMaterialLotStatusIDChanging(global::System.Int32 value);
        partial void OnMaterialLotStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuantityUnitOfMeasure
        {
            get
            {
                return _QuantityUnitOfMeasure;
            }
            set
            {
                OnQuantityUnitOfMeasureChanging(value);
                ReportPropertyChanging("QuantityUnitOfMeasure");
                _QuantityUnitOfMeasure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuantityUnitOfMeasure");
                OnQuantityUnitOfMeasureChanged();
            }
        }
        private global::System.String _QuantityUnitOfMeasure;
        partial void OnQuantityUnitOfMeasureChanging(global::System.String value);
        partial void OnQuantityUnitOfMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EquipmentID
        {
            get
            {
                return _EquipmentID;
            }
            set
            {
                OnEquipmentIDChanging(value);
                ReportPropertyChanging("EquipmentID");
                _EquipmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentID");
                OnEquipmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EquipmentID;
        partial void OnEquipmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnEquipmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ValidFrom
        {
            get
            {
                return _ValidFrom;
            }
            set
            {
                OnValidFromChanging(value);
                ReportPropertyChanging("ValidFrom");
                _ValidFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidFrom");
                OnValidFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _ValidFrom;
        partial void OnValidFromChanging(Nullable<global::System.DateTime> value);
        partial void OnValidFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ValidTill
        {
            get
            {
                return _ValidTill;
            }
            set
            {
                OnValidTillChanging(value);
                ReportPropertyChanging("ValidTill");
                _ValidTill = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidTill");
                OnValidTillChanged();
            }
        }
        private Nullable<global::System.DateTime> _ValidTill;
        partial void OnValidTillChanging(Nullable<global::System.DateTime> value);
        partial void OnValidTillChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_MaterialLots_MaterialDefinitions", "MaterialDefinition")]
        public MaterialDefinition MaterialDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialDefinition>("T2TModel.FK_MaterialLots_MaterialDefinitions", "MaterialDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialDefinition>("T2TModel.FK_MaterialLots_MaterialDefinitions", "MaterialDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaterialDefinition> MaterialDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialDefinition>("T2TModel.FK_MaterialLots_MaterialDefinitions", "MaterialDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaterialDefinition>("T2TModel.FK_MaterialLots_MaterialDefinitions", "MaterialDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_MaterialLots_MaterialLotStatuses", "MaterialLotStatus")]
        public MaterialLotStatus MaterialLotStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialLotStatus>("T2TModel.FK_MaterialLots_MaterialLotStatuses", "MaterialLotStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialLotStatus>("T2TModel.FK_MaterialLots_MaterialLotStatuses", "MaterialLotStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaterialLotStatus> MaterialLotStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialLotStatus>("T2TModel.FK_MaterialLots_MaterialLotStatuses", "MaterialLotStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaterialLotStatus>("T2TModel.FK_MaterialLots_MaterialLotStatuses", "MaterialLotStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="MaterialLotStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaterialLotStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaterialLotStatus object.
        /// </summary>
        /// <param name="lotStatusID">Initial value of the LotStatusID property.</param>
        /// <param name="lotStatus">Initial value of the LotStatus property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static MaterialLotStatus CreateMaterialLotStatus(global::System.Int32 lotStatusID, global::System.String lotStatus, global::System.String description, global::System.Int32 sortOrder)
        {
            MaterialLotStatus materialLotStatus = new MaterialLotStatus();
            materialLotStatus.LotStatusID = lotStatusID;
            materialLotStatus.LotStatus = lotStatus;
            materialLotStatus.Description = description;
            materialLotStatus.SortOrder = sortOrder;
            return materialLotStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LotStatusID
        {
            get
            {
                return _LotStatusID;
            }
            set
            {
                if (_LotStatusID != value)
                {
                    OnLotStatusIDChanging(value);
                    ReportPropertyChanging("LotStatusID");
                    _LotStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LotStatusID");
                    OnLotStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _LotStatusID;
        partial void OnLotStatusIDChanging(global::System.Int32 value);
        partial void OnLotStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotStatus
        {
            get
            {
                return _LotStatus;
            }
            set
            {
                OnLotStatusChanging(value);
                ReportPropertyChanging("LotStatus");
                _LotStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LotStatus");
                OnLotStatusChanged();
            }
        }
        private global::System.String _LotStatus;
        partial void OnLotStatusChanging(global::System.String value);
        partial void OnLotStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_MaterialLots_MaterialLotStatuses", "MaterialLot")]
        public EntityCollection<MaterialLot> MaterialLots
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialLot>("T2TModel.FK_MaterialLots_MaterialLotStatuses", "MaterialLot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialLot>("T2TModel.FK_MaterialLots_MaterialLotStatuses", "MaterialLot", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="MaterialLotTracking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaterialLotTracking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaterialLotTracking object.
        /// </summary>
        /// <param name="trackingID">Initial value of the TrackingID property.</param>
        /// <param name="materialLotID">Initial value of the MaterialLotID property.</param>
        /// <param name="trackingDate">Initial value of the TrackingDate property.</param>
        public static MaterialLotTracking CreateMaterialLotTracking(global::System.Int32 trackingID, global::System.Int32 materialLotID, global::System.DateTime trackingDate)
        {
            MaterialLotTracking materialLotTracking = new MaterialLotTracking();
            materialLotTracking.TrackingID = trackingID;
            materialLotTracking.MaterialLotID = materialLotID;
            materialLotTracking.TrackingDate = trackingDate;
            return materialLotTracking;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrackingID
        {
            get
            {
                return _TrackingID;
            }
            set
            {
                if (_TrackingID != value)
                {
                    OnTrackingIDChanging(value);
                    ReportPropertyChanging("TrackingID");
                    _TrackingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrackingID");
                    OnTrackingIDChanged();
                }
            }
        }
        private global::System.Int32 _TrackingID;
        partial void OnTrackingIDChanging(global::System.Int32 value);
        partial void OnTrackingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialLotID
        {
            get
            {
                return _MaterialLotID;
            }
            set
            {
                OnMaterialLotIDChanging(value);
                ReportPropertyChanging("MaterialLotID");
                _MaterialLotID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaterialLotID");
                OnMaterialLotIDChanged();
            }
        }
        private global::System.Int32 _MaterialLotID;
        partial void OnMaterialLotIDChanging(global::System.Int32 value);
        partial void OnMaterialLotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EquipmentID
        {
            get
            {
                return _EquipmentID;
            }
            set
            {
                OnEquipmentIDChanging(value);
                ReportPropertyChanging("EquipmentID");
                _EquipmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentID");
                OnEquipmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EquipmentID;
        partial void OnEquipmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnEquipmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TrackingDate
        {
            get
            {
                return _TrackingDate;
            }
            set
            {
                OnTrackingDateChanging(value);
                ReportPropertyChanging("TrackingDate");
                _TrackingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackingDate");
                OnTrackingDateChanged();
            }
        }
        private global::System.DateTime _TrackingDate;
        partial void OnTrackingDateChanging(global::System.DateTime value);
        partial void OnTrackingDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="MaterialType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaterialType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaterialType object.
        /// </summary>
        /// <param name="materialTypeID">Initial value of the MaterialTypeID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MaterialType CreateMaterialType(global::System.Byte materialTypeID, global::System.String typeID, global::System.String description)
        {
            MaterialType materialType = new MaterialType();
            materialType.MaterialTypeID = materialTypeID;
            materialType.TypeID = typeID;
            materialType.Description = description;
            return materialType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte MaterialTypeID
        {
            get
            {
                return _MaterialTypeID;
            }
            set
            {
                if (_MaterialTypeID != value)
                {
                    OnMaterialTypeIDChanging(value);
                    ReportPropertyChanging("MaterialTypeID");
                    _MaterialTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MaterialTypeID");
                    OnMaterialTypeIDChanged();
                }
            }
        }
        private global::System.Byte _MaterialTypeID;
        partial void OnMaterialTypeIDChanging(global::System.Byte value);
        partial void OnMaterialTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.String _TypeID;
        partial void OnTypeIDChanging(global::System.String value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("T2TModel", "FK_MaterialClasses_MaterialTypes", "MaterialClass")]
        public EntityCollection<MaterialClass> MaterialClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialClass>("T2TModel.FK_MaterialClasses_MaterialTypes", "MaterialClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialClass>("T2TModel.FK_MaterialClasses_MaterialTypes", "MaterialClass", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Ply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ply : MaterialDefinition
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ply object.
        /// </summary>
        /// <param name="materialDefinitionID">Initial value of the MaterialDefinitionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="materialClassID">Initial value of the MaterialClassID property.</param>
        public static Ply CreatePly(global::System.Int32 materialDefinitionID, global::System.String name, global::System.Int32 materialClassID)
        {
            Ply ply = new Ply();
            ply.MaterialDefinitionID = materialDefinitionID;
            ply.Name = name;
            ply.MaterialClassID = materialClassID;
            return ply;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Lenght
        {
            get
            {
                return _Lenght;
            }
            set
            {
                OnLenghtChanging(value);
                ReportPropertyChanging("Lenght");
                _Lenght = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lenght");
                OnLenghtChanged();
            }
        }
        private Nullable<global::System.Int32> _Lenght;
        partial void OnLenghtChanging(Nullable<global::System.Int32> value);
        partial void OnLenghtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Angle
        {
            get
            {
                return _Angle;
            }
            set
            {
                OnAngleChanging(value);
                ReportPropertyChanging("Angle");
                _Angle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Angle");
                OnAngleChanged();
            }
        }
        private Nullable<global::System.Decimal> _Angle;
        partial void OnAngleChanging(Nullable<global::System.Decimal> value);
        partial void OnAngleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Int32> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private Nullable<global::System.Byte> _Number;
        partial void OnNumberChanging(Nullable<global::System.Byte> value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Protector")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Protector : MaterialDefinition
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Protector object.
        /// </summary>
        /// <param name="materialDefinitionID">Initial value of the MaterialDefinitionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="materialClassID">Initial value of the MaterialClassID property.</param>
        public static Protector CreateProtector(global::System.Int32 materialDefinitionID, global::System.String name, global::System.Int32 materialClassID)
        {
            Protector protector = new Protector();
            protector.MaterialDefinitionID = materialDefinitionID;
            protector.Name = name;
            protector.MaterialClassID = materialClassID;
            return protector;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _Length;
        partial void OnLengthChanging(Nullable<global::System.Int32> value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Int32> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SirinaRamena
        {
            get
            {
                return _SirinaRamena;
            }
            set
            {
                OnSirinaRamenaChanging(value);
                ReportPropertyChanging("SirinaRamena");
                _SirinaRamena = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SirinaRamena");
                OnSirinaRamenaChanged();
            }
        }
        private Nullable<global::System.Int32> _SirinaRamena;
        partial void OnSirinaRamenaChanging(Nullable<global::System.Int32> value);
        partial void OnSirinaRamenaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfileCode
        {
            get
            {
                return _ProfileCode;
            }
            set
            {
                OnProfileCodeChanging(value);
                ReportPropertyChanging("ProfileCode");
                _ProfileCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfileCode");
                OnProfileCodeChanged();
            }
        }
        private global::System.String _ProfileCode;
        partial void OnProfileCodeChanging(global::System.String value);
        partial void OnProfileCodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="RawTyre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RawTyre : MaterialDefinition
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RawTyre object.
        /// </summary>
        /// <param name="materialDefinitionID">Initial value of the MaterialDefinitionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="materialClassID">Initial value of the MaterialClassID property.</param>
        /// <param name="cAI">Initial value of the CAI property.</param>
        public static RawTyre CreateRawTyre(global::System.Int32 materialDefinitionID, global::System.String name, global::System.Int32 materialClassID, global::System.String cAI)
        {
            RawTyre rawTyre = new RawTyre();
            rawTyre.MaterialDefinitionID = materialDefinitionID;
            rawTyre.Name = name;
            rawTyre.MaterialClassID = materialClassID;
            rawTyre.CAI = cAI;
            return rawTyre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CAI
        {
            get
            {
                return _CAI;
            }
            set
            {
                OnCAIChanging(value);
                ReportPropertyChanging("CAI");
                _CAI = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CAI");
                OnCAIChanged();
            }
        }
        private global::System.String _CAI;
        partial void OnCAIChanging(global::System.String value);
        partial void OnCAIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalCodeText
        {
            get
            {
                return _InternalCodeText;
            }
            set
            {
                OnInternalCodeTextChanging(value);
                ReportPropertyChanging("InternalCodeText");
                _InternalCodeText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalCodeText");
                OnInternalCodeTextChanged();
            }
        }
        private global::System.String _InternalCodeText;
        partial void OnInternalCodeTextChanging(global::System.String value);
        partial void OnInternalCodeTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InternalCode
        {
            get
            {
                return _InternalCode;
            }
            set
            {
                OnInternalCodeChanging(value);
                ReportPropertyChanging("InternalCode");
                _InternalCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InternalCode");
                OnInternalCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _InternalCode;
        partial void OnInternalCodeChanging(Nullable<global::System.Int32> value);
        partial void OnInternalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dimension
        {
            get
            {
                return _Dimension;
            }
            set
            {
                OnDimensionChanging(value);
                ReportPropertyChanging("Dimension");
                _Dimension = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dimension");
                OnDimensionChanged();
            }
        }
        private global::System.String _Dimension;
        partial void OnDimensionChanging(global::System.String value);
        partial void OnDimensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="SemiFinishedMaterialInventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SemiFinishedMaterialInventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SemiFinishedMaterialInventory object.
        /// </summary>
        /// <param name="internalCode">Initial value of the InternalCode property.</param>
        /// <param name="count">Initial value of the Count property.</param>
        public static SemiFinishedMaterialInventory CreateSemiFinishedMaterialInventory(global::System.String internalCode, global::System.Int32 count)
        {
            SemiFinishedMaterialInventory semiFinishedMaterialInventory = new SemiFinishedMaterialInventory();
            semiFinishedMaterialInventory.InternalCode = internalCode;
            semiFinishedMaterialInventory.Count = count;
            return semiFinishedMaterialInventory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InternalCode
        {
            get
            {
                return _InternalCode;
            }
            set
            {
                if (_InternalCode != value)
                {
                    OnInternalCodeChanging(value);
                    ReportPropertyChanging("InternalCode");
                    _InternalCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InternalCode");
                    OnInternalCodeChanged();
                }
            }
        }
        private global::System.String _InternalCode;
        partial void OnInternalCodeChanging(global::System.String value);
        partial void OnInternalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="T2TModel", Name="Tyre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tyre : MaterialDefinition
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tyre object.
        /// </summary>
        /// <param name="materialDefinitionID">Initial value of the MaterialDefinitionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="materialClassID">Initial value of the MaterialClassID property.</param>
        /// <param name="cAI">Initial value of the CAI property.</param>
        public static Tyre CreateTyre(global::System.Int32 materialDefinitionID, global::System.String name, global::System.Int32 materialClassID, global::System.String cAI)
        {
            Tyre tyre = new Tyre();
            tyre.MaterialDefinitionID = materialDefinitionID;
            tyre.Name = name;
            tyre.MaterialClassID = materialClassID;
            tyre.CAI = cAI;
            return tyre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CAI
        {
            get
            {
                return _CAI;
            }
            set
            {
                OnCAIChanging(value);
                ReportPropertyChanging("CAI");
                _CAI = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CAI");
                OnCAIChanged();
            }
        }
        private global::System.String _CAI;
        partial void OnCAIChanging(global::System.String value);
        partial void OnCAIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalCodeText
        {
            get
            {
                return _InternalCodeText;
            }
            set
            {
                OnInternalCodeTextChanging(value);
                ReportPropertyChanging("InternalCodeText");
                _InternalCodeText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalCodeText");
                OnInternalCodeTextChanged();
            }
        }
        private global::System.String _InternalCodeText;
        partial void OnInternalCodeTextChanging(global::System.String value);
        partial void OnInternalCodeTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InternalCode
        {
            get
            {
                return _InternalCode;
            }
            set
            {
                OnInternalCodeChanging(value);
                ReportPropertyChanging("InternalCode");
                _InternalCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InternalCode");
                OnInternalCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _InternalCode;
        partial void OnInternalCodeChanging(Nullable<global::System.Int32> value);
        partial void OnInternalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dezen
        {
            get
            {
                return _Dezen;
            }
            set
            {
                OnDezenChanging(value);
                ReportPropertyChanging("Dezen");
                _Dezen = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dezen");
                OnDezenChanged();
            }
        }
        private global::System.String _Dezen;
        partial void OnDezenChanging(global::System.String value);
        partial void OnDezenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dimension
        {
            get
            {
                return _Dimension;
            }
            set
            {
                OnDimensionChanging(value);
                ReportPropertyChanging("Dimension");
                _Dimension = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dimension");
                OnDimensionChanged();
            }
        }
        private global::System.String _Dimension;
        partial void OnDimensionChanging(global::System.String value);
        partial void OnDimensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion

    
    }

    #endregion

    
}
